<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>管理Bean的生命周期</title>
      <link href="/guan-li-bean-de-sheng-ming-zhou-qi.html"/>
      <url>/guan-li-bean-de-sheng-ming-zhou-qi.html</url>
      
        <content type="html"><![CDATA[<h1 id="IOC容器中Bean的生命周期方法"><a href="#IOC容器中Bean的生命周期方法" class="headerlink" title="IOC容器中Bean的生命周期方法"></a>IOC容器中Bean的生命周期方法</h1><ul><li><strong>SpringIOC容器可以管理Bean的生命周期</strong>，Spring允许在Bean生命周期的特定点执行定制的任务。</li><li>Spring IOC容器对Bean的生命周期进行管理的过程<ul><li>通过构造器或工厂方法创建Bean</li><li>为Bean的属性设置值和对其他Bean的引用</li><li><strong>调用Bean的初始化方法</strong></li><li>Bean可以使用了</li><li><strong>当容器关闭时，调用Bean的销毁方法</strong></li></ul></li><li>在Bean的声明里设置init-method和destroy-method属性。为Bean指定初始化和销毁方法。</li></ul><p><strong>Car.java</strong></p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Car's Constructor..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"setBrand..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"init..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"destroy..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><strong>Bean.XML</strong></p><pre class=" language-xml"><code class="language-xml">&lt;bean id = "car" class = "com.Spring.test.Car" init-method = "init" destroy-method = "destroy">    &lt;property name = "Brand" value = "Audi" /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre><p><strong>Main.Java</strong></p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        ClassPathXmlApplicationContext ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"Bean.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Car car <span class="token operator">=</span> <span class="token punctuation">(</span>Car<span class="token punctuation">)</span>ctx<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"car"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//关闭IOC容器</span>        ctx<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><strong>输出结果：</strong><br><code>Car&#39;s Constructor...</code><br><code>setBrand</code><br><code>init...</code><br><code>com.Spring.test.Car@bb23423</code><br><code>destory..</code></p><h1 id="创建Bean后置处理器"><a href="#创建Bean后置处理器" class="headerlink" title="创建Bean后置处理器"></a>创建Bean后置处理器</h1><ul><li><strong>Bean后置处理器允许在调用初始化方法前后对Bean进行额外的处理</strong></li><li><strong>Bean后置处理器对IOC容器里的所有Bean实例逐一处理</strong>，而非单一实例，其典型应用是：检查Bean属性的正确性或根据特定的标准更改Bean的属性</li><li>对Bean后置处理器而言，需要实现<strong>Interface BeanPostProcessor</strong>接口，在初始化方法被调用前后。Spring将把每个Bean实例分别传递给上述接口的以下两个方法：<br><img src="https://wx2.sinaimg.cn/large/006MOU0zgy1g0wt19xt5aj30ge04fads.jpg" alt="image"></li></ul><h1 id="添加Bean后置处理器后Bean的生命周期"><a href="#添加Bean后置处理器后Bean的生命周期" class="headerlink" title="添加Bean后置处理器后Bean的生命周期"></a>添加Bean后置处理器后Bean的生命周期</h1><ul><li>SpringIOC容器对Bean的生命周期进行管理的过程：<ul><li>通过构造器或工厂方法创建Bean实例</li><li>为Bean的属性设置值和对其他Bean的引用</li><li><strong>将Bean实例传递给Bean后置处理器的postProcessBeforeInitialization方法</strong></li><li>调用Bean的初始化方法</li><li><strong>将Bean实例传递给Bean后置处理器的postProcessBeforeInitialization方法</strong></li><li><strong>Bean</strong>可以使用了</li><li>当容器关闭时，调用Bean的销毁方法</li></ul></li></ul><h2 id="具体操作："><a href="#具体操作：" class="headerlink" title="具体操作："></a>具体操作：</h2><p><strong>MyBeanPostProcessor.java</strong></p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">myBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">BeanPostProcessor</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@override</span>    <span class="token keyword">public</span> Object <span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span>Object bean<span class="token punctuation">,</span>String beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> BensException<span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"postProcessBeforeInitialization:"</span> <span class="token operator">+</span> bean <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@override</span>    <span class="token keyword">public</span> Object <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span>Object bean<span class="token punctuation">,</span>String beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> BensException<span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"postProcessAfterInitialization:"</span> <span class="token operator">+</span> bean <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><strong>Bean.XML</strong></p><pre class=" language-xml"><code class="language-xml">&lt;bean id = "car" class = "com.Spring.test.Car" init-method = "init" destroy-method = "destroy">    &lt;property name = "Brand" value = "Audi" /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--     实现BeanPostProcessor接口，并具体提供Object postProcessBeforeInitialization(Object bean,String beanName)：init-method之前被调用    实现BeanPostProcessor接口，并具体提供Object postProcessAfterInitialization(Object bean,String beanName)：init-method之后被调用    bean: bean实例本身    beanName: IOC容器配置的bean的名字    返回值： 是实际上返回给用户的哪个Bean，注意：可以在以上两个方法中修改返回的bean，甚至返回一个新的bean --></span><span class="token comment" spellcheck="true">&lt;!-- 配置bean的后置处理器：不需要配置id，IOC容器自动识别是一个BenaPostProcessor --></span>&lt;bean class = "com.Spring.test.MyBeanPostProcessor"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre><p><strong>输出结果：</strong><br><code>Car&#39;s Constructor...</code><br><code>setBrand</code><br><code>postProcessBeforeInitialization:com.Spring.test.Car@bb23423 car</code><br><code>init...</code><br><code>postProcessBeforeInitialization:com.Spring.test.Car@bb23423 car</code><br><code>com.Spring.test.Car@bb23423</code><br><code>destory..</code></p><h1 id="添加Bean后置处理器后Bean的生命周期-1"><a href="#添加Bean后置处理器后Bean的生命周期-1" class="headerlink" title="添加Bean后置处理器后Bean的生命周期"></a>添加Bean后置处理器后Bean的生命周期</h1><ul><li>SpringIOC容器对Bean的生命周期进行管理的过程：<ul><li>通过构造器或工厂方法创建Bean实例</li><li>为Bean的属性设置值和对其他Bean的引用</li><li><strong>将Bean实例传递给Bean后置处理器的postProcessBeforeInitialization方法</strong></li><li>调用Bean的初始化方法</li><li><strong>将Bean实例传递给Bean后置处理器的postProcessBeforeInitialization方法</strong></li><li>Bean可以使用了</li><li>当容器关闭时，调用Bean的销毁方法</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Java </category>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring表达式语言(SpEL)</title>
      <link href="/spring-biao-da-shi-yu-yan-spel.html"/>
      <url>/spring-biao-da-shi-yu-yan-spel.html</url>
      
        <content type="html"><![CDATA[<h1 id="Spring表达式语言：SpEL"><a href="#Spring表达式语言：SpEL" class="headerlink" title="Spring表达式语言：SpEL"></a>Spring表达式语言：SpEL</h1><ul><li><strong>Spring表达式语言</strong>（简称<strong>SpEL</strong>）:是一个<strong>支持运行时查询和操作对象图的强大的表达式语言</strong></li><li><strong>语法类似于EL：SpEL使用#{…}作为定界符，所有在大框号中的字符都被认为是SpEL</strong></li><li><strong>SpEL为bean的属性进行动态赋值提供了便利</strong></li><li>通过SpEL可以实现：<ul><li>通过bean的id对bean进行引用</li><li>调用方法以及引用对象中的属性</li><li>正则表达式的值</li><li>正则表达式的配置</li></ul></li></ul><h2 id="SpEL：字面值"><a href="#SpEL：字面值" class="headerlink" title="SpEL：字面值"></a>SpEL：字面值</h2><ul><li>整数：&lt;property name = “count” value = “<strong>#{5}</strong>“/&gt;</li><li>小数：&lt;property name = “frequency” value = “<strong>#{89.7}</strong>“/&gt;</li><li>科学记数法：&lt;property name = “capacity” value = “<strong>#{1e4}</strong>“/&gt;</li><li><strong>String可以使用单引号或者双引号作为字符串的定界符号</strong>：<br>  &lt;property name = “name” value = “<strong>#{Chuck}</strong>“/&gt;或&lt;property name = ‘name’ value = ‘<strong>#{Chuck}</strong>‘/&gt;</li><li>Boolean：&lt;property name = “enabled” value = “<strong>#{false}</strong>“/&gt;</li></ul><h2 id="SpEL：引用Bean、属性和方法"><a href="#SpEL：引用Bean、属性和方法" class="headerlink" title="SpEL：引用Bean、属性和方法"></a>SpEL：引用Bean、属性和方法</h2><ul><li>引用其他对象：<pre class=" language-XML"><code class="language-XML"><!-- 通过value属性和 SpEL 配置 Bean 之间的应用关系 --><property name = "prefix" value = "#{prefixGenerator}"></property></code></pre></li><li>引用其他对象的属性<pre class=" language-XML"><code class="language-XML"><!-- 通过value属性和 SpEL 配置 suffix 配置值为另一个bean的suffix属性值 --><property name = "suffix" value = "#{sequenceGenerator2.suffix}"></property></code></pre></li><li>调用其他方法，还可以链式操作<pre class=" language-XML"><code class="language-XML"><!-- 过value属性和 SpEL 配置 suffix 配置值为另一个bean的返回值 --><property name = "suffix" value = "#{sequenceGenerator2.toString()}"></property><!-- 方法的连缀 --><property name = "suffix" value = "#{sequenceGenerator2.toString().toUpperCase()}"></property></code></pre></li></ul><h2 id="SpEL支持的运算符号"><a href="#SpEL支持的运算符号" class="headerlink" title="SpEL支持的运算符号"></a>SpEL支持的运算符号</h2><ul><li><strong>算数运算符：+,-,*,%,^:</strong><pre class=" language-XML"><code class="language-XML"><property name = "adjustedAmount" value = "#{counter.total + 43}" /><property name = "adjustedAmount" value = "#{counter.total - 13}" /><property name = "circumference" value = "#{2* T(java.lang.Math).PI * circle.radius}" /><property name = "average" value = "#{counter.total / counter.total}" /><property name = "area" value = "#{T(java.lang.Math).PI * circle.radius * 2}" /></code></pre></li><li><strong>加号还可以用作字符串连接：</strong><pre class=" language-XML"><code class="language-XML"><constructor-arg value = "performer.firstName + ' ' + performer.LastName" /></code></pre></li><li><strong>比较运算符：&amp;lt,&amp;gt,==,&lt;=,&gt;=,lt,gt,eq,le,ge</strong><pre class=" language-XML"><code class="language-XML"><property name="equal" value = "#{counter.total == 100}" /><property name="hasCapacity" value = "#{counter.total le 100000}" /></code></pre></li><li>逻辑运算符号：and，or，not，|<pre class=" language-XML"><code class="language-XML"><property name="largeCircle" value = "#{shape.kind == 'circle' and shape.perimeter gt 10000}" /><property name="outOfStock" value = "#{product.available}" /><property name="outofStock" value = "#{not product.available}" /></code></pre></li><li>if-else运算符：?:(temary),?:(Elvis)<pre class=" language-XML"><code class="language-XML"><constructor-arg value = "#{songSelector.seLectSong()=='Jingle BeLLs'?piano:'Jingle Bells'}"/></code></pre></li><li>if-else的字体<pre class=" language-XML"><code class="language-XML"><constructor-arg value = "#{kenny.song?:'Greensleeves'}"/></code></pre></li><li>正则表达式:matches<pre class=" language-XML"><code class="language-XML"><constructor-arg value = "#{admin.email matches '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2，4}'}"/></code></pre></li><li><strong>调用静态方法或静态方法</strong>:通过<strong>T()</strong>调用一个类的静态方法，它将返回一个ClassObject，然后再调用相应的方法或者属性：<pre class=" language-XML"><code class="language-XML"><property name="initValue" value = "#{T(java.Lang.Math).PI}" /></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Java </category>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>朱伟考研英语合集(韦林)</title>
      <link href="/zhu-wei-kao-yan-ying-yu-he-ji-wei-lin.html"/>
      <url>/zhu-wei-kao-yan-ying-yu-he-ji-wei-lin.html</url>
      
        <content type="html"><![CDATA[<h1 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h1><pre><code>│  ├2019年考研资料│  │           ├复习直播指导│  │           ├恋恋语法│  │           ├恋恋有词（新版）│  │           ├写作宝典│  │           ├真题解析│  │           ├巧夺阅读致命16分│  │           ├恋恋语法-写作句子带练│  │           ├微博发布-最强阅读技巧│  │           ├秋季写作宝典直播│  │           ├不能失去的35分│  │           ├恋词之核心难点词最后冲刺│  │           ├写作套路│  │           ├英语写作终极点题班│  │           └预测八套卷│  ├2020年考研资料│  │           ├复习建议│  │           ├考研词汇大串讲│  │           ├19真题版恋练有词│  │           ├2020词源报刊版7000词│  │           ├20考研词汇集训营 第一季│  │           ├恋练有词-真题版（20新版）│  │           └2020词组恋恋不忘</code></pre><h1 id="提取链接"><a href="#提取链接" class="headerlink" title="提取链接"></a>提取链接</h1><p>链接：<a href="https://pan.baidu.com/s/19WsNYozMtlbzeNQiN1A85Q" target="_blank" rel="noopener">https://pan.baidu.com/s/19WsNYozMtlbzeNQiN1A85Q</a><br>验证码：6j3a</p><p>PS:如果链接失效或者有任何问题，请在评论区留言。</p><p><strong>声明：</strong>此资源由本站收集整理于网络，如有侵权，请联系 <a href="mailto:HuiProgramer@Outlook.com" target="_blank" rel="noopener">HuiProgramer@Outlook.com</a> 删除处理。</p>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习资料 </tag>
            
            <tag> 学习视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑帽教程(2019版)</title>
      <link href="/hei-mao-jiao-cheng-2019-ban.html"/>
      <url>/hei-mao-jiao-cheng-2019-ban.html</url>
      
        <content type="html"><![CDATA[<h1 id="示意图"><a href="#示意图" class="headerlink" title="示意图"></a>示意图</h1><p><img src="http://52sharing.cn/wp-content/uploads/2019/02/2019022707044263.gif" alt="示意图"></p><h1 id="提取链接"><a href="#提取链接" class="headerlink" title="提取链接"></a>提取链接</h1><ol><li><p>普通版：<a href="https://pan.baidu.com/s/1fsicWxR33tFalnsTJFPs8A" target="_blank" rel="noopener">https://pan.baidu.com/s/1fsicWxR33tFalnsTJFPs8A</a> 提取码: b7rd</p></li><li><p>高级版：<a href="https://pan.baidu.com/s/1p67O81gawoJFQLARUEUDpw" target="_blank" rel="noopener">https://pan.baidu.com/s/1p67O81gawoJFQLARUEUDpw</a> 提取码: 8j9a</p></li></ol><p>PS:如果链接失效或者有任何问题，请在评论区留言。</p><p><strong>声明：</strong>此资源由本站收集整理于网络，如有侵权，请联系 <a href="mailto:HuiProgramer@Outlook.com" target="_blank" rel="noopener">HuiProgramer@Outlook.com</a> 删除处理。</p>]]></content>
      
      
      <categories>
          
          <category> 全栈开发 </category>
          
          <category> 黑帽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑客 </tag>
            
            <tag> 入侵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bean使用外部属性</title>
      <link href="/bean-shi-yong-wai-bu-shu-xing.html"/>
      <url>/bean-shi-yong-wai-bu-shu-xing.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用外部属性"><a href="#使用外部属性" class="headerlink" title="使用外部属性"></a>使用外部属性</h1><ul><li>在配置文件里配置Bean时，有时需要在Bean的配置里混入<strong>系统部署的细节信息</strong>（例如：文件路径，数据源配置信息等）。而这些部署细节实际上需要和Bean部署相分离</li><li>Spring提供一个PropertyPlaceholderConfigurer的<strong>BeanFactory后置处理器</strong>，这个处理器允许用户将Bean配置的部分内容外移到<strong>属性文件</strong>中，可以在Bean配置文件里使用形式为<strong>${var}</strong>的变量，PropertyPlaceholderConfigurer从属性文件里加载属性，并使用这些属性来替换变量。</li><li>Spring还允许在属性文件中使用${propName},以实现属性之间的相互引用。</li></ul><h2 id="注册PropertyPlaceholderConfigurer"><a href="#注册PropertyPlaceholderConfigurer" class="headerlink" title="注册PropertyPlaceholderConfigurer"></a>注册PropertyPlaceholderConfigurer</h2><ul><li><strong>spring2.0</strong>：<pre class=" language-XML"><code class="language-XML"><bean class = "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  <property name = "Location" value = "classpath:jdbc.properties"></property></bean></code></pre></li><li><strong><em>Spring2.5之后：可通过&lt;context:property-placeholder&gt;元素简化：</em></strong><ul><li>&lt;beans&gt;中添加context Schema定义</li><li>在配置文件中加入如下配置：<pre class=" language-XML"><code class="language-XML">  <context:property-placeholder location= "classpath:db.properties"/></code></pre></li></ul></li></ul><p><strong>db.properties</strong></p><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">user</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">password</span><span class="token punctuation">=</span><span class="token attr-value">1230</span><span class="token attr-name">driverClass</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.jdbc.Driver</span><span class="token attr-name">jdbcUrl</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql:///test</span></code></pre><p><strong>bean.xml</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 导入属性文件 --><context:property-placeholder location= "classpath:db.properties"/><!-- 使用外部化属性文件的属性 --><bean id = "dataSource" class = "com.mchange.v2.c3p0.ComboPoolLedDataSource">    <property name = "user" value = "${user}"></property>    <property name = "password" value = "${password}"></property>    <property name = "driverClass" value = "${driverClass}"></property>    <property name = "jdbcUrl" value = "${jdbcUrl"></property></bean></code></pre><p><strong>输出结果：</strong><br><code>连接成功</code></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Java </category>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bean的作用域</title>
      <link href="/bean-de-zuo-yong-yu.html"/>
      <url>/bean-de-zuo-yong-yu.html</url>
      
        <content type="html"><![CDATA[<h1 id="Bean的作用域：singleton；prototype；WEB环境作用域"><a href="#Bean的作用域：singleton；prototype；WEB环境作用域" class="headerlink" title="Bean的作用域：singleton；prototype；WEB环境作用域"></a>Bean的作用域：singleton；prototype；WEB环境作用域</h1><h2 id="配置作用域singleton"><a href="#配置作用域singleton" class="headerlink" title="配置作用域singleton"></a>配置作用域singleton</h2><p><strong>bean.xml</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 默认作用域是singleton（单例），通过scope配置 。     容器初始化时创建bean实例。在整个容器的生命周期内置创建这一个bean。--><bean id = "car" class = "com.spring.helloWorld.Car"p:brand = "Audi" p:price = "300000" scope="singleton"></bean></code></pre><p><strong>Main.java</strong></p><pre class=" language-Java"><code class="language-Java">public static void main(String[] args){    ApplicationContext ctx = new ClassPathXmlApplicationContext("bean.xml");    Car car = (Car)ctx.getBean("car");    Car car2 = (Car)ctx.getBean("car");    System.out.println(car == car2);}</code></pre><p><strong>输出结果：</strong><br><code>true</code></p><h2 id="配置作用域prototype"><a href="#配置作用域prototype" class="headerlink" title="配置作用域prototype"></a>配置作用域prototype</h2><p><strong>bean.xml</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 此作用域是prototype（不是单例），通过scope配置。     prototype：原型的，容器初始化时不创建bean的实例，而在每次请求时都创建一个新的Bean实例，并返回。--><bean id = "car" class = "com.spring.helloWorld.Car"p:brand = "Audi" p:price = "300000" scope="prototype"></bean></code></pre><p><strong>Main.java</strong></p><pre class=" language-Java"><code class="language-Java">public static void main(String[] args){    ApplicationContext ctx = new ClassPathXmlApplicationContext("bean.xml");    Car car = (Car)ctx.getBean("car");    Car car2 = (Car)ctx.getBean("car");    System.out.println(car == car2);}</code></pre><p><strong>输出结果：</strong><br><code>false</code></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Java </category>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bean之间的关系</title>
      <link href="/bean-zhi-jian-de-guan-xi.html"/>
      <url>/bean-zhi-jian-de-guan-xi.html</url>
      
        <content type="html"><![CDATA[<h1 id="Bean之间的关系：继承；依赖"><a href="#Bean之间的关系：继承；依赖" class="headerlink" title="Bean之间的关系：继承；依赖"></a>Bean之间的关系：继承；依赖</h1><h2 id="Bean配置的继承"><a href="#Bean配置的继承" class="headerlink" title="Bean配置的继承"></a>Bean配置的继承</h2><ul><li><strong>Spring允许继承bean的配置</strong>，被继承的bean成为父bean。继承这个父Bean的Bean称为子Bean</li><li><strong>子Bean从父Bean中继承配置，包括Bean的属性配置</strong></li><li>子Bean也可以<strong>覆盖</strong>从父Bean继承过来的配置</li><li>父Bean可以作为配置模板，也可以作为Bean的实例。<strong>若只想把父Bean作为模板，可以设置&lt;bean&gt;的abstract属性为true</strong>，这样Spring将不会实例化这个Bean</li><li><strong>并不是&lt;bean&gt;元素里的所有属性都会被继承</strong>。比如：autowire，abstract等。</li><li>也<strong>可以忽略父Bean的class属性</strong>，让子Bean指定自己的类，而共享相同的属性配置，但此时<strong>abstract必须设为true</strong></li></ul><p><strong>继承父Bean实例：</strong></p><pre class=" language-XML"><code class="language-XML"><bean id = "address" class = "com.spring.helloWorld.Address" p:city = "Beijing" p:street="WuDaoKou"></bean><!-- bean 配置的继承：使用 bean 的 parent 属性指定继承哪个 bean 的配置 --><bean id = "address2" class = "com.spring.helloWorld.Address" p:street="DaZhongSi" parent = "address"></bean></code></pre><p><strong>输出结果：</strong><br><code>Address [city=BeiJing,street=WuDaoKou]</code><br><code>Address [city=BeiJing,street=DaZhongSi]</code></p><p><strong>抽象Bean实例：</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 抽象Bean：bean的abstract属性为true的bean，不能被IOC容器实例化，可以作为模板被继承。若某一个bean的class属性没有指定，则该bean必须是一个抽象bean。 --><bean id = "address" p:city = "Beijing" p:street="WuDaoKou" abstract = "true"></bean><!-- 继承模板Bean --><bean id = "address2" class = "com.spring.helloWorld.Address"  parent = "address"></bean></code></pre><p><strong>输出结果：</strong><br><code>Address [city=BeiJing,street=WuDaoKou]</code><br><code>Address [city=BeiJing,street=WuDaoKou]</code></p><h2 id="依赖Bean配置"><a href="#依赖Bean配置" class="headerlink" title="依赖Bean配置"></a>依赖Bean配置</h2><ul><li><strong>Spring允许用户通过depends-on属性设定Bean前置依赖的Bean</strong>，前置依赖的Bean会在本Bean实例化之前创建好</li><li><strong>如果前置依赖于多个Bean，则可以通过逗号，空格的方式配置Bean的名称</strong></li></ul><p><strong>依赖Bean实例：</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 缺少这个bean会报错 --><bean id = "car" class = "com.spring.helloWorld.Car"p:brand = "Audi" p:price = "300000" ></bean><!-- 要求配置Person时，必须有一个关联的car！换句话说person这个bean依赖于Car这个bean，如果缺少就会报错 --><bean id = "person" class = "com.spring.helloWorld.person"p:name = "Tom" p:address-ref="address2" depends-on="car"></bean></code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Java </category>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring自动装配</title>
      <link href="/spring-zi-dong-zhuang-pei.html"/>
      <url>/spring-zi-dong-zhuang-pei.html</url>
      
        <content type="html"><![CDATA[<h1 id="XML配置里的Bean自动装配"><a href="#XML配置里的Bean自动装配" class="headerlink" title="XML配置里的Bean自动装配"></a>XML配置里的Bean自动装配</h1><ul><li>Spring IOC容器可以自动装配Bean。需要做的仅仅是<strong>在&lt;bean&gt;的autowire属性里指定自动装配的模式</strong></li><li><strong>byType</strong>(根据类型自动装配)：若IOC容器中有多个与目标Bean类型一致的Bean。在这种情况下，Spring将无法判定哪个Bean最适合属性，所以不能执行自动装配。</li><li><strong>byName</strong>(根据名称自动装配)：必须将目标Bean的名称和属性名设置完全相同。</li><li>constructor（通过构造器自动装配）：当Bean中存在多个构造器时，此种自动装配方式将会很复杂。<strong>不推荐使用</strong></li></ul><p><strong>自动装配byName实例：</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 通过p命名空间为bean的属性赋值，需要先导入 p 命名空间,相对于传统的配置更加的简洁 --><bean id = "address" calss = "com.spring.hellowrld.address" p:city = "Beijing" p:street = "HuiLongGuan"></bean><!-- 通过p命名空间为bean的属性赋值，需要先导入 p 命名空间,相对于传统的配置更加的简洁 --><bean id = "car" calss = "com.spring.hellowrld.Car" p:brand = "Audi" p:price = "30000"></bean><!-- 可以使用 autowire 属性指定自动装配的方式     byName 根据 bean 的名字和当前bean的 setter 风格的属性名进行自动装配，若有匹配的，则进行自动装配，若没有匹配的，则不装配 --><bean id = "Person" calss = "com.spring.hellowrld.person" p:name = "Tom" autowire = "byName"></bean></code></pre><p><strong>自动装配byType实例：</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 通过p命名空间为bean的属性赋值，需要先导入 p 命名空间,相对于传统的配置更加的简洁 --><bean id = "address2" calss = "com.spring.hellowrld.address" p:city = "Beijing" p:street = "HuiLongGuan"></bean><!-- 通过p命名空间为bean的属性赋值，需要先导入 p 命名空间,相对于传统的配置更加的简洁 --><bean id = "car2" calss = "com.spring.hellowrld.Car" p:brand = "Audi" p:price = "30000"></bean><!-- byType 根据 bean 的类型和当前 bean 的属性的类型进行自动装配，若IOC容器中有一个以上的类型匹配的bean，则抛异常。 --><bean id = "Person2" calss = "com.spring.hellowrld.person" p:name = "Rose" autowire = "byType"></bean></code></pre><h1 id="XML配置里的Bean自动装配的缺点"><a href="#XML配置里的Bean自动装配的缺点" class="headerlink" title="XML配置里的Bean自动装配的缺点"></a>XML配置里的Bean自动装配的缺点</h1><ul><li>在 Bean 配置文建立设置 autowire 属性进行自动装配将会装配 Bean 的所有属性。然而，若值希望装配个别属性时， autowire属性就不够灵活了。</li><li>autowire 属性要么根据类型自动装配，要么根据名称自动装配，不能两者兼而有之。</li><li>一般情况下，在实际项目中很少使用自动装配功能，因为和自动装配功能所带来的好处比起来，明确清晰的配置文档更有说服力一些。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Java </category>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.JS七天基础培训视频教程</title>
      <link href="/vue-js-ji-zhu-shi-pin-jiao-cheng.html"/>
      <url>/vue-js-ji-zhu-shi-pin-jiao-cheng.html</url>
      
        <content type="html"><![CDATA[<h1 id="智能社Javascript专题"><a href="#智能社Javascript专题" class="headerlink" title="智能社Javascript专题"></a>智能社Javascript专题</h1><p>Vue.JS技术视频教程<br>Vue.JS七天基础培训视频教程</p><h2 id="课程目录"><a href="#课程目录" class="headerlink" title="课程目录"></a>课程目录</h2><pre><code>│  ├&lt;01&gt;│  │  ├2016-9-13.zip│  │  ├Javascript之VueJS第一讲（1）.mp4│  │  └Javascript之VueJS第一讲（2）.mp4│  ├&lt;02&gt;│  │  ├01.mp4│  │  ├02.mp4│  │  ├20161012Javascript之VueJS第二讲2-1.mp4│  │  └课件.zip│  ├&lt;03&gt;│  │  ├01 .mp4│  │  ├02 .mp4│  │  └课件.zip│  ├&lt;04&gt;│  │  ├1. loader及router_recv.mov│  │  ├2. vue-cli的使用_recv.mov│  │  └20161031Javascript之Vue.JS （第四讲）录播课件.rar│  ├&lt;05&gt;│  │  ├1. Vue2.0变化_recv.mov│  │  ├2. vue2.0组件通信_recv.mov│  │  └20161031Javascript之Vue.JS （第五讲）录播课件.rar│  ├&lt;06&gt;│  │  ├01. VueJS第六讲之vuejs2.0过滤（动画）_recv.mov│  │  ├02. VueJS第六讲之vue2.0-路由和vue-loader_recv.mov│  │  ├03. VueJS第六讲之loader的问题_recv.mov│  │  └20161115Javascript之VueJS（第六讲）课件.rar│  ├&lt;07&gt;│  │  ├01 VueJS第七讲之Element-UI_recv.mov│  │  ├02. VueJS第七讲之Mint-ui_recv.mov│  │  └20161115Javascript之VueJS（第七讲）课件 .rar</code></pre><h3 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h3><p><img src="http://www.mukeit.com/data/attachment/forum/201806/29/151200p3fd6ip8l43yf8z4.png" alt="VUE" title="Vue.js"></p><h2 id="提取链接"><a href="#提取链接" class="headerlink" title="提取链接"></a>提取链接</h2><p>链接: <a href="https://pan.baidu.com/s/1Nd110maHp1EXV1u4Df4B4w" target="_blank" rel="noopener">https://pan.baidu.com/s/1Nd110maHp1EXV1u4Df4B4w</a><br>提取码: gi67</p><p>PS:如果链接失效或者有任何问题，请在评论区留言。</p><p><strong>声明：</strong>此资源由本站收集整理于网络，如有侵权，请联系 <a href="mailto:HuiProgramer@Outlook.com" target="_blank" rel="noopener">HuiProgramer@Outlook.com</a> 删除处理。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
          <category> 学习教程 </category>
          
          <category> Vue.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习资料 </tag>
            
            <tag> 学习视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo常见错误</title>
      <link href="/hexo-chang-jian-cuo-wu.html"/>
      <url>/hexo-chang-jian-cuo-wu.html</url>
      
        <content type="html"><![CDATA[<h1 id="启用腾讯云图床错误"><a href="#启用腾讯云图床错误" class="headerlink" title="启用腾讯云图床错误"></a>启用腾讯云图床错误</h1><p>为了加快网站访问，本站启用了腾讯云图床，但就在生成文章时，出现了一系列问题。最终将问题定在md文件里。<br><img src="http://wx2.sinaimg.cn/large/006MOU0zgy1g0pkqkv9gwj30n90fedhh.jpg" alt="Error" title="Error"></p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>将平常用的md语法改写为&lt;img&gt;标签，并将在<strong>主题目录</strong>下的images文件夹里新产生的<strong>文件夹</strong>删除。</p><pre class=" language-Markdown"><code class="language-Markdown"><!-- 出现错误的方式 -->![Error](https://blog-1258364678.cos.ap-guangzhou.myqcloud.com/Hexo_error1.png "Error")<!-- 正确的方式 --><img src = "https://blog-1258364678.cos.ap-guangzhou.myqcloud.com/Hexo_error1.pn" title = "Error" alt ="Error"></code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>出现问题时，要多多分析可能存在的原因；只有找到源头时，才能解决问题。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Node.js </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 常见错误 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring中Bean的配置</title>
      <link href="/spring-zhong-bean-de-pei-zhi.html"/>
      <url>/spring-zhong-bean-de-pei-zhi.html</url>
      
        <content type="html"><![CDATA[<h1 id="IOC-amp-DI概述"><a href="#IOC-amp-DI概述" class="headerlink" title="IOC&amp;DI概述"></a>IOC&amp;DI概述</h1><h2 id="配置Bean"><a href="#配置Bean" class="headerlink" title="配置Bean"></a>配置Bean</h2><ul><li>配置形式：<strong>基于XML文件的方式</strong>；基于注解的方式</li><li>Bean的配置方式：<strong>通过全类名（反射）</strong>、通过工厂方法（静态工厂方法&amp;实例工厂方法）、FactoryBean</li><li><strong>IOC容器BeanFactory&amp;ApplicationContext概述</strong></li><li>依赖注入的方式：<strong>属性注入；构造器注入</strong></li><li>注入属性值的细节</li><li>自动装配</li><li>bean之间的关系：继承；依赖</li><li>bean的作用域：singleton；prototype；WEB环境作用域</li><li>使用外部属性文件</li><li>spEL</li><li>IOC容器中的Bean的生命周期</li><li>Spring4.x新特性：泛型依赖注入</li></ul><h2 id="IOC和DI"><a href="#IOC和DI" class="headerlink" title="IOC和DI"></a>IOC和DI</h2><p>IOC(Inversion of Control)：其思想是<strong>反转资源获取的方向</strong>。传统的资源查找方式要求组件向容器发起请求查找资源。作为回应，容器适时的返回资源。而应用了IOC之后，则是<strong>容器主动地将资源送给它所管理的组件，组件要做的仅仅是选择一种合适的方式来介绍资源</strong>。这种行为也被称为查找的被动形式<br>DI(Dependency Injection)–IOC的另一种表述方式：即<strong>组件以一些预先定义好的方式（例如：setter方法）接受来自如容器的资源注入</strong>。相对于IOC而言，这种表述更直接</p><h3 id="IOC-amp-DI原理"><a href="#IOC-amp-DI原理" class="headerlink" title="IOC&amp;DI原理"></a>IOC&amp;DI原理</h3><p><img src="http://wx3.sinaimg.cn/large/006MOU0zgy1g0pkqlbsnej30mh0g9dok.jpg" titel="IOC&DI的原理"></p><h4 id="IOC前生-—-分离接口与实现"><a href="#IOC前生-—-分离接口与实现" class="headerlink" title="IOC前生 — 分离接口与实现"></a>IOC前生 — 分离接口与实现</h4><ul><li>需求：生成HTML或PDF格式的不同类型的报表<br><img src="http://wx3.sinaimg.cn/large/006MOU0zgy1g0pkqlzbxnj30yn09413d.jpg" titel="分离接口与实现"></li></ul><h4 id="IOC前生-—-采用工厂设计模式"><a href="#IOC前生-—-采用工厂设计模式" class="headerlink" title="IOC前生 — 采用工厂设计模式"></a>IOC前生 — 采用工厂设计模式</h4><p><img src="http://wx3.sinaimg.cn/large/006MOU0zgy1g0pkqoqp53j311m0e1k64.jpg" titel="采用工厂设计模式"></p><h4 id="IOC-—-采用反转控制"><a href="#IOC-—-采用反转控制" class="headerlink" title="IOC — 采用反转控制"></a>IOC — 采用反转控制</h4><p><img src="http://wx3.sinaimg.cn/large/006MOU0zgy1g0pkqpxbrnj31180ekh0t.jpg" titel="采用反转控制"></p><h1 id="Bean的配置方式"><a href="#Bean的配置方式" class="headerlink" title="Bean的配置方式"></a>Bean的配置方式</h1><h2 id="在Spring的IOC容器里配置Bean"><a href="#在Spring的IOC容器里配置Bean" class="headerlink" title="在Spring的IOC容器里配置Bean"></a>在Spring的IOC容器里配置Bean</h2><ul><li>在XML文件中通过bean节点来配置bean<pre class=" language-XML"><code class="language-XML"><!-- 通过全类名的方式来配置bean --><bean id = "helloWorld"  class = "com.spring.helloworld.HelloWorld"></bean></code></pre></li><li>id:Bean的名称</li></ul><ol><li><strong>在IOC容器中必须是唯一</strong></li><li>若id没有指定，Spring自动将权限定性类名作为Bean的名字</li><li>id可以指定多个名字，名字之间可用逗号、分号、或者空格分隔</li></ol><h2 id="Spring容器"><a href="#Spring容器" class="headerlink" title="Spring容器"></a>Spring容器</h2><ul><li>在<strong>SpringIOC容器</strong>容器读取Bean配置创建Bean实例之前，必须对它进行实例化。只有在容器实例化后，才可以从IOC容器里获取Bean实例并使用。</li><li>Spring提供了两种类型的IOC容器实现。</li></ul><ol><li><strong>BeanFactory</strong>:IOC容器的基本实现。</li><li><strong>ApplicationContext</strong>：提供了更多的高级特性。是BeanFactory的子接口。</li><li>BeanFactory是Spring框架的基础设施，面向Spring本身；ApplicationContext面向使用Spring框架的开发者，<strong>几乎所有的应用场合都直接使用ApplicationContext而非底层的BeanFactory</strong></li><li>无论使用何种方式，配置文件时相同的。</li></ol><h3 id="ApplicationContext"><a href="#ApplicationContext" class="headerlink" title="ApplicationContext"></a>ApplicationContext</h3><ul><li>ApplicationContext的主要实现类：</li></ul><ol><li><strong>ClassPathXmlApplicationContext</strong>:从<strong>类路径下</strong>加载配置文件</li><li>FileSystemXmlApplicationContext：从文件系统中加载配置文件</li></ol><ul><li>ConfigurableApplicationContext扩展与ApplicationContext，新增两个主要方法：refresh()和<strong>close()</strong>,让ApplicationContext具有启动、刷新和关闭上下文的能力</li><li><strong>ApplicationContext在初始化上下文时就实例化所有单例的Bean</strong>。</li><li>WebApplicationContext是专门为WEB应用而准备的，它允许从相对于WEB根目录的路径中完成初始化工作<br><img src="http://wx2.sinaimg.cn/large/006MOU0zgy1g0pkqqoi53j30h80c3jv2.jpg" titel="ApplicationContext的实现"></li></ul><h3 id="从IOC容器中获取Bean"><a href="#从IOC容器中获取Bean" class="headerlink" title="从IOC容器中获取Bean"></a>从IOC容器中获取Bean</h3><ul><li><strong>BeanFactory</strong><ul><li>FACTORY_BEAN_PREFIX:<code>String</code></li><li>getBean(String):<code>Object</code></li><li>getBean(String,Class&lt;T&gt;)<code>&lt;T&gt;:T</code></li><li>getBean(Class&lt;T&gt;)<code>&lt;T&gt;:T</code></li><li>getBean(String,Object…):<code>Object</code></li><li>containsBean(String):<code>boolean</code></li><li>isSingleton(String):<code>boolean</code></li><li>isPrototype(String):<code>boolean</code></li><li>isTypeMatch(String,Class&lt;?&gt;):<code>boolean</code></li><li>getType(String):<code>Class&lt;?&gt;</code></li><li>getAliases(String):<code>String[]</code></li></ul></li><li>具体实例<pre class=" language-Java"><code class="language-Java">       //1.创建Spring 的IOC容器对象      //ApplicationContext 代表IOC容器      //ClassPathXmlApplicationContext：是ApplicationContext 接口的实现类      ApplicationContext act = new ClassPathXmlApplicationContext("spring-config.xml");      //2.从IOC容器中获取Bean实例      HelloWorld helloWorld = (HelloWorld)act.getBean("helloWorld");      //3.调用hello方法      helloWorld.hello();</code></pre></li></ul><h2 id="属性注入"><a href="#属性注入" class="headerlink" title="属性注入"></a>属性注入</h2><ul><li>属性注入即通过<strong>setter方法</strong>注入Bean的属性值或依赖的对象</li><li>属性注入使用&lt;property&gt;元素，使用name属性指定Bean的属性名称，value属性或&lt;value&gt;子节点指定属性值</li><li><strong>属性注入是实际应用中最常见的注入方式</strong></li></ul><pre class=" language-XML"><code class="language-XML"><!-- 通过全类名的方式来配置bean --><bean id = "helloWorld"    class = "com.spring.helloworld.HelloWorld">    <property name="name" value="HuiProgramer"></property>    <property name="age" value="22"></property></bean></code></pre><h2 id="构造方法注入"><a href="#构造方法注入" class="headerlink" title="构造方法注入"></a>构造方法注入</h2><ul><li>通过构造方法注入Bean的属性值或者依赖的对象，它保证了Bean实例在实例化后就可以使用</li><li>构造器注入在&lt;constructor-arg&gt;元素里声明属性，<strong>&lt;constructor-arg&gt;中没有name属性</strong></li></ul><h3 id="按顺序配置"><a href="#按顺序配置" class="headerlink" title="按顺序配置"></a>按顺序配置</h3><pre class=" language-XML"><code class="language-XML"><!-- 通过构造方法来配置bean属性 --><bean id = "car" class = "com.spring.helloworld.Car">  <constructor-arg value = "Audi"></constructor-arg>  <constructor-arg value = "ShangHai"></constructor-arg>  <constructor-arg value = "30000"></constructor-arg></bean></code></pre><h3 id="按index配置"><a href="#按index配置" class="headerlink" title="按index配置"></a>按index配置</h3><pre class=" language-XML"><code class="language-XML"><!-- 通过构造器注入属性值可以指定参数的位置 --><bean id = "car" class = "com.spring.helloworld.Car">  <constructor-arg value = "Audi" index = "0"></constructor-arg>  <constructor-arg value = "30000" index = "2"></constructor-arg>  <constructor-arg value = "ShangHai" index = "1"></constructor-arg></bean></code></pre><h3 id="按type配置"><a href="#按type配置" class="headerlink" title="按type配置"></a>按type配置</h3><pre class=" language-XML"><code class="language-XML"><!-- 通过构造器注入属性值可以指定参数的类型 --><bean id = "car" class = "com.spring.helloworld.Car">  <constructor-arg value = "Audi" type = "java.lang.String"></constructor-arg>  <constructor-arg value = "30000" type = "long"></constructor-arg>  <constructor-arg value = "ShangHai" type = "java.lang.String"></constructor-arg></bean></code></pre><p><strong>提示</strong>: 通过构造器注入参数的类型和位置可以混合使用</p><h2 id="字面值"><a href="#字面值" class="headerlink" title="字面值"></a>字面值</h2><ul><li>字面值：可用字符串表示的值，可以通过&lt;value&gt;元素标签或value属性进行注入</li><li>基本数据类型及其封装类，String等类型都可以采用字面值注入的方式</li><li>若字面值中包含特殊字符，可用使用&lt;![CDATA[]]&gt;把字面值包裹起来</li></ul><p><strong>实例：</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 通过构造器注入属性值可以指定参数的位置和类型 --><bean id = "car2" class = "com.spring.helloworld.Car">  <constructor-arg value = "Audi" index = "0"></constructor-arg>  <constructor-arg value = "30000" index = "2"></constructor-arg>  <!-- 如果字面值包含特殊字符可以用<![CDATA[ ]]>包裹起来 -->  <constructor-arg type = "java.lang.String">        <value><![CDATA[<ShangHai>]]></value>  </constructor-arg></bean></code></pre><p><strong>输出结果：</strong><br><code>&lt;ShangHai&gt;</code></p><h2 id="引用其它Bean"><a href="#引用其它Bean" class="headerlink" title="引用其它Bean"></a>引用其它Bean</h2><ul><li>组成应用程序的Bean经常需要相互协作以完成应用程序的功能，要<strong>使Bean能够相互访问</strong>，就必须在Bean配置文件中指定对Bean的引用</li><li>在Bean的配置文件中，可用<strong>通过&lt;ref&gt;元素或ref属性</strong>为Bean的属性或构造器参数指定对Bean的引用</li><li>也可以<strong>在属性或构造器里包含Bean的声明</strong>,这样的Bean称为内部<strong>Bean</strong></li></ul><p><strong>外部Bean实例：</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 通过方法注入属性值 --><bean id = "person" calss = "com.spring.hellowrld.person">    <property name="name" value="HuiProgramer"></property>    <property name="Car" ref = "car"></property></bean></code></pre><p><strong>内部Bean实例：</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 通过方法注入属性值 --><bean id = "person" calss = "com.spring.hellowrld.person">    <property name="name" value="HuiProgramer"></property>    <property name="Car">        <!-- 通过构造器注入属性值可以指定参数的类型 -->        <bean id = "car" class = "com.spring.helloworld.Car">          <constructor-arg value = "Audi" type = "java.lang.String"></constructor-arg>          <constructor-arg value = "30000" type = "long"></constructor-arg>          <constructor-arg value = "ShangHai" type = "java.lang.String"></constructor-arg>        </bean>    </property></bean></code></pre><h2 id="null值和级联属性"><a href="#null值和级联属性" class="headerlink" title="null值和级联属性"></a>null值和级联属性</h2><ul><li>可以使用专用的&lt;null/&gt;元素标签为Bean的字符串或其它对象类型的属性注入null值</li><li>和Struts、Hiberante等框架一样，<strong>Spring支持级联属性的配置</strong>。</li></ul><p><strong>null值注入实例:</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 通过构造方法来配置bean属性 --><bean id = "car3" class = "com.spring.helloworld.Car">  <constructor-arg value = "Audi"></constructor-arg>    <!-- 注入null值 -->  <constructor-arg ><value><null/></value></constructor-arg>  <constructor-arg ><value><null/></value></constructor-arg></bean></code></pre><p><strong>级联属性的配置:</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 通过方法注入属性值 --><bean id = "person" calss = "com.spring.hellowrld.person">    <property name="name" value="HuiProgramer"></property>    <property name="Car" ref = "car"></property>    <!-- 给级联属性赋值,注意：属性需要先初始化后才可以给级联属性赋值，否则会发生异常，和Struts2不同 -->    <property name="Car.corp" value = "50000"></property></bean></code></pre><h2 id="集合属性"><a href="#集合属性" class="headerlink" title="集合属性"></a>集合属性</h2><ul><li>在Spring中可以通过一组内置的XML标签（例如：&lt;list&gt;,&lt;set&gt;或&lt;map&gt;）来配置集合属性</li><li>配置java.util.List类型的属性，需要指定<strong>&lt;list&gt;</strong>标签，在标签里包含一些元素，这些标签可以通过<strong>&lt;value&gt;</strong>指定简单的常量值，通过<strong>&lt;ref&gt;</strong>指定对其他Bean的引用，通过<strong>&lt;bean&gt;</strong>指定内置Bean定义。通过&lt;null/&gt;指定空元素，设置可以内嵌其他集合</li><li>数组的定义和List一样，都使用&lt;list&gt;</li><li>配置java.util.Set需要使用&lt;set&gt;标签，定义元素的方法与List一样。</li><li>Java.util.Map通过<strong>&lt;map&gt;</strong>标签定义，&lt;map&gt;标签里可以使用多个<strong>&lt;entry&gt;</strong>作为子标签，每个条目包含一个键和一个值。</li><li>必须在<strong>&lt;key&gt;</strong>标签里定义键</li><li>因为键和值的类型没有限制，所以可以自由地为他们指定<strong>&lt;value&gt;,&lt;ref&gt;,&lt;bean&gt;或&lt;null&gt;</strong>元素。</li><li>可以将Map的键和值作为&lt;entry&gt;的属性定义：简单常量使用key和value来定义；Bean引用通过key-ref和value-ref属性定义</li><li>使用<strong>&lt;props&gt;</strong>定义java.util.Properties,该标签使用多个<strong>&lt;prop&gt;</strong>作为子标签，每个&lt;prop&gt;标签必须定义<strong>key</strong>属性.</li></ul><p><strong>List实例：</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 通过方法注入属性值 --><bean id = "person" calss = "com.spring.hellowrld.person">    <property name="name" value="HuiProgramer"></property>    <property name="Cars" >            <!-- 使用list节点为List类型的属性赋值 -->            <list>                <ref bean = "car2" />                <ref bean = "car3" />                <!-- 通过Bean直接指定 -->                <bean id = "car" class = "com.spring.helloworld.Car">                  <constructor-arg value = "Audi" type = "java.lang.String"></constructor-arg>                  <constructor-arg value = "30000" type = "long"></constructor-arg>                  <constructor-arg value = "ShangHai" type = "java.lang.String"></constructor-arg>                </bean>            </list>    </property></bean></code></pre><p><strong>Map实例：</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 配置Map属性值 --><bean id = "Person" calss = "com.spring.hellowrld.person">        <property name = "name" value = "Rose"></property>        <property name = "age" value = "28"></property>        <property name = "Cars">                <!-- 使用 map 节点及map的entry子节点配置 Map -->                <map>                    <entry key = "AA" value-ref = "car3"></entry>                    <entry key = "BB" value-ref = "car2"></entry>                </map>        </property></bean></code></pre><p><strong>Properties实例：</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 配置Properties 属性值 --><bean id = "dataSource" calss = "com.spring.hellowrld.dataSource">    <property name = "properties">        <!-- 使用 props 和 prop 子节点来为 Properties 属性赋值 -->        <props>            <prop key = "user">root</prop>            <prop key = "password">1234</prop>            <prop key = "jdbcUrl">jdbc:mysql:///test</prop>            <prop key = "driverClass">com.mysql.jdbc.Driver</prop>        </props>    </property></bean></code></pre><h3 id="使用utility-scheme定义集合"><a href="#使用utility-scheme定义集合" class="headerlink" title="使用utility scheme定义集合"></a>使用utility scheme定义集合</h3><ul><li>使用基本的集合标签定义集合时，<strong>不能将集合作为独立的Bean定义，导致其他Bean无法引用该集合，所以无法在不同Bean之间共享集合</strong>。</li><li>可以使用util schema里的集合标签定义独立的集合Bean，需要注意的事，必须在&lt;beans&gt;根元素里添加退了 schema 定义。</li></ul><p><strong>配置单例集合Bean:</strong></p><pre class=" language-XML"><code class="language-XML"><!-- 配置单例的集合Bean，以供多个bean进行引用，需要导入util命名空间 --><util:list id = "cars">    <ref  bean = "car3" />    <ref  bean = "car2"></util:list><bean id = "Person2" calss = "com.spring.hellowrld.person">        <property name = "name" value = "Tom"></property>        <property name = "age" value = "22"></property>        <!-- 被引用 -->        <property name = "Cars" ref = "cars">        </property></bean></code></pre><h3 id="使用P命名空间"><a href="#使用P命名空间" class="headerlink" title="使用P命名空间"></a>使用P命名空间</h3><ul><li>为了简化XML文件的配置，越来越多的XML的XML文件采用属性而飞子元素配置信息。</li><li>Spring从2.5版本开始引入了一个新的p命名空间，可以通过&lt;bean&gt;元素属性的方式配置Bean的属性。</li><li>使用p命名空间后，基于XML的配置方式将进一步简化。</li></ul><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 通过p命名空间为bean的属性赋值，需要先导入 p 命名空间,相对于传统的配置更加的简洁 --></span>&lt;bean id = "person3" class = "com.spring.hellowrld.person" p:age = "30" p:name = "Queen" p:car-ref="cars"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Java </category>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring的HelloWorld(使用Idea)</title>
      <link href="/spring-de-helloworld-shi-yong-idea.html"/>
      <url>/spring-de-helloworld-shi-yong-idea.html</url>
      
        <content type="html"><![CDATA[<h1 id="创建Spring项目"><a href="#创建Spring项目" class="headerlink" title="创建Spring项目"></a>创建Spring项目</h1><p>我们在idea中创建一个Spring项目，具体如下：<br> 勾选<strong>Spring</strong><br><img src="http://wx3.sinaimg.cn/large/006MOU0zgy1g0pkh8i1hij30re0jrq5k.jpg" alt><br>选择好后点击<strong>Next</strong><br>选择项目路径以及项目名（自动下载所需jar包）<br><img src="http://wx1.sinaimg.cn/large/006MOU0zgy1g0pkh8tj0pj30ro0kbjsw.jpg" alt></p><h1 id="简单的IOC（反转控制）"><a href="#简单的IOC（反转控制）" class="headerlink" title="简单的IOC（反转控制）"></a>简单的IOC（反转控制）</h1><p>我们在src目录下新建com.Test包，并创建一个HelloWorld类，实现一个简单的自我介绍功能，代码如下：</p><pre class=" language-Java"><code class="language-Java">package com.Test;public class HelloWorld {    private String name;    private int age;    public void setName(String name) {        this.name = name;    }    public String getName() {        return name;    }    public void setAge(int age) {        this.age = age;    }    public int getAge() {        return age;    }    public void hello(){        System.out.println("我是"+name+",今年"+age+"岁啦");    }}</code></pre><h2 id="Bean的配置"><a href="#Bean的配置" class="headerlink" title="Bean的配置"></a>Bean的配置</h2><p>接下来我们配置Spring-config.xml文件</p><pre class=" language-XML"><code class="language-XML"><?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">    <!--        配置bean        class：bean的全类名，通过反射的方式在IOC容器中创建Bean，所以要求Bean中必须有无参数的构造器        id:标识容器中的bean。id唯一    -->    <bean id="hello" class="com.Test.HelloWorld">        <property name="name" value="HuiProgramer"></property>        <property name="age" value="22"></property>    </bean></beans></code></pre><p><strong>注意</strong>：这里使用的是属性注入，通过getxx(),setxx()方法。<br><strong>解析</strong>：name为setxx()方法的xx，value为setxx()方法里面的行参。</p><h2 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h2><p>这里我们再新建一个类Main来运行看效果：</p><pre class=" language-Java"><code class="language-Java">package com.Test;import org.springframework.context.ApplicationContext;import org.springframework.context.support.ClassPathXmlApplicationContext;public class Main {    public static void main(String[] args){        //1.创建Spring 的IOC容器对象        //ApplicationContext 代表IOC容器        //ClassPathXmlApplicationContext：是ApplicationContext 接口的实现类        ApplicationContext act = new ClassPathXmlApplicationContext("spring-config.xml");        //2.从IOC容器中获取Bean实例        HelloWorld helloWorld = (HelloWorld)act.getBean("hello");        //3.调用hello方法        helloWorld.hello();    }}}</code></pre><p>运行后的结果：<br><img src="http://wx3.sinaimg.cn/large/006MOU0zgy1g0pkh95n6dj3163060q3g.jpg" alt></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Java </category>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础到架构（2018年 黑马+传智播客）</title>
      <link href="/java-ji-chu-dao-jia-gou-2018-nian-hei-ma-chuan-zhi-bo-ke.html"/>
      <url>/java-ji-chu-dao-jia-gou-2018-nian-hei-ma-chuan-zhi-bo-ke.html</url>
      
        <content type="html"><![CDATA[<h1 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h1><ul><li>01.java 基础(共 300 集左右).</li><li>02.HTML(共 21 集).</li><li>03.CSS(共 21 集).</li><li>04.javascript(共 17 集).</li><li>05.JQuery(共 18 集).</li><li>06.Bootstrap(共 17 集).</li><li>07.MYSQL(共 38 集).</li><li>08.JDBC(共 30 集).</li><li>09.xml&tomcat;(共 28 集).</li><li>10.HTTP&Servlet;(共 24 集).</li><li>11.Request&Response;(共 26 集)</li><li>12.Cookie&Session;(共 22 集).</li><li>13.JSP&EL;&JSTL;(共 23 集).</li><li>14.事务&amp;数据库连接池&DBUtiles;(共 31 集).</li><li>15.MVC 设计模式(共 32 集).</li><li>16.Ajax&Jquery;(共 28 集).</li><li>17.Listener&Filter;(共 25 集).</li><li>18.基础加强(共 9 集).</li><li>19.Linux(共 12 集).</li><li>20.Redis 缓存入门(共 13 集).</li><li>21.阶段项目(必看)-电子商务企业实战项目(共 61 集).</li><li>22-Hibernate V5.0 框架(共 59 集).</li><li>23.Struts2 框架(共 54 集).</li><li>24-Spring V4.2 框架(共 56 集).</li><li>25-SSH 整合企业案例-客户管理系统(共 75 集) .</li><li>26-Oracle 数据库(共 84 集).</li><li>27-Maven(共 31 集).</li><li>28-Mybatis V3.2(共 34 集).</li><li>29-SpringMVC V4.1+SSM 整合(共 39 集).</li><li>30-SSM 分布式案例-互联网商城-阶段项目-必看(共 197 集）.</li><li>31.品优购电商系统开发.</li><li>32.视频教程用到的所有开发工具</li></ul><p><img src="http://wx2.sinaimg.cn/large/006MOU0zgy1g0pkh0xsiij30iw08vq66.jpg" alt="第一部分" title="示意图"></p><h1 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h1><ul><li>第 01 项目：SSH 网上商城项目(推荐学习项目）</li><li>第 02 项目：SSH 杰信商贸版(推荐学习项目）</li><li>第 03 项目：SSM 药品集中采购系统视频教程(推荐学习项目)</li><li>第 04 项目：淘淘商城(SpringMvc+Spring+Mybatis) 推荐学习</li><li>第 05 项目：电力项目</li><li>第 06 项目：校内网项目</li><li>第 07 项目：Java 邮件开发教程</li><li>第 08 项目：java 网上在线支付实战视频</li><li>第 09 项目：俄罗斯方块游戏开发 _ 视频教程</li><li>第 10 项目：交通灯管理系统视频教程</li><li>第 11 项目：银行业务调度系统视频教程</li><li>第 12 项目：供应链系统视频教程</li><li>第 13 项目：OA 办公项目实战教程</li><li>第 14 项目：宅急送项目</li><li>第 15 项目：杰信商贸 SSM 版</li><li>第 16 项目：SSH 国家税务协同平台项目</li><li>第 17 项目：javaWeb 聊天室 第 18 项目：点餐系统</li><li>第 19 项目：网上书店</li><li>第 20 项目：CRM 客户关系管理项目</li><li>第 21 项目：手机进销存系统 第 22 项目：图书商城</li><li>第 23 项目：物流 BOS 系统(SSH 项目）</li><li>第 24 项目：宜立方商城项目(SSM 项目）</li><li>第 25 项目：Spring Boot 博客企业开发</li><li>第 26 项目：SSM 到 Spring Boot-校园商铺平台</li></ul><p><img src="http://wx3.sinaimg.cn/large/006MOU0zgy1g0pkh7rv4uj30iw095779.jpg" alt="第二部分" title="示意图"></p><h1 id="提取链接"><a href="#提取链接" class="headerlink" title="提取链接"></a>提取链接</h1><p>链接: <a href="https://pan.baidu.com/s/1YUSaDmfhw6zROor9ApX4Ng" target="_blank" rel="noopener">https://pan.baidu.com/s/1YUSaDmfhw6zROor9ApX4Ng</a> 提取码: 1br1</p><p>PS:如果链接失效或者有任何问题，请在评论区留言。</p><p><strong>声明：</strong>此资源由本站收集整理于网络，如有侵权，请联系 <a href="mailto:HuiProgramer@Outlook.com" target="_blank" rel="noopener">HuiProgramer@Outlook.com</a> 删除处理。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
          <category> 学习教程 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习资料 </tag>
            
            <tag> 学习视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android学习资料合集</title>
      <link href="/android-xue-xi-zi-liao-he-ji.html"/>
      <url>/android-xue-xi-zi-liao-he-ji.html</url>
      
        <content type="html"><![CDATA[<h1 id="Android核心技术"><a href="#Android核心技术" class="headerlink" title="Android核心技术"></a>Android核心技术</h1><h2 id="一、Android核心基础-15天精讲精练"><a href="#一、Android核心基础-15天精讲精练" class="headerlink" title="一、Android核心基础_15天精讲精练"></a>一、Android核心基础_15天精讲精练</h2><p><a href="https://pan.baidu.com/s/1b86u2E" target="_blank" rel="noopener">https://pan.baidu.com/s/1b86u2E</a></p><h2 id="二、Android自定义控件视频"><a href="#二、Android自定义控件视频" class="headerlink" title="二、Android自定义控件视频"></a>二、Android自定义控件视频</h2><p><a href="https://pan.baidu.com/s/1hrOVZd6" target="_blank" rel="noopener">https://pan.baidu.com/s/1hrOVZd6</a></p><h2 id="三、Android—JNI视频"><a href="#三、Android—JNI视频" class="headerlink" title="三、Android—JNI视频"></a>三、Android—JNI视频</h2><p><a href="http://pan.baidu.com/s/1kVqBCmr" target="_blank" rel="noopener">http://pan.baidu.com/s/1kVqBCmr</a></p><h2 id="四、Android与H5互调"><a href="#四、Android与H5互调" class="headerlink" title="四、Android与H5互调"></a>四、Android与H5互调</h2><p><a href="https://pan.baidu.com/s/1miHaDbM" target="_blank" rel="noopener">https://pan.baidu.com/s/1miHaDbM</a></p><h2 id="五、Android常用第三方框架源码分析"><a href="#五、Android常用第三方框架源码分析" class="headerlink" title="五、Android常用第三方框架源码分析"></a>五、Android常用第三方框架源码分析</h2><p><a href="http://pan.baidu.com/s/1o789Vjc" target="_blank" rel="noopener">http://pan.baidu.com/s/1o789Vjc</a></p><h2 id="六、尚硅谷Android视频《多渠道打包》"><a href="#六、尚硅谷Android视频《多渠道打包》" class="headerlink" title="六、尚硅谷Android视频《多渠道打包》"></a>六、尚硅谷Android视频《多渠道打包》</h2><p><a href="http://pan.baidu.com/s/1dEVpQyX" target="_blank" rel="noopener">http://pan.baidu.com/s/1dEVpQyX</a></p><h1 id="Android项目实战"><a href="#Android项目实战" class="headerlink" title="Android项目实战"></a>Android项目实战</h1><h2 id="一、Android项目实战—手机影音"><a href="#一、Android项目实战—手机影音" class="headerlink" title="一、Android项目实战—手机影音"></a>一、Android项目实战—手机影音</h2><p><a href="http://pan.baidu.com/s/1i5wLMbN" target="_blank" rel="noopener">http://pan.baidu.com/s/1i5wLMbN</a></p><h2 id="二、最新Android项目—硅谷新闻"><a href="#二、最新Android项目—硅谷新闻" class="headerlink" title="二、最新Android项目—硅谷新闻"></a>二、最新Android项目—硅谷新闻</h2><p><a href="https://pan.baidu.com/s/1nvASXvF" target="_blank" rel="noopener">https://pan.baidu.com/s/1nvASXvF</a></p><h2 id="三、最新Android项目实战—硅谷社交"><a href="#三、最新Android项目实战—硅谷社交" class="headerlink" title="三、最新Android项目实战—硅谷社交"></a>三、最新Android项目实战—硅谷社交</h2><p><a href="https://pan.baidu.com/s/1dFyXZxR" target="_blank" rel="noopener">https://pan.baidu.com/s/1dFyXZxR</a></p><h2 id="四、最新Android项目—硅谷商城-新"><a href="#四、最新Android项目—硅谷商城-新" class="headerlink" title="四、最新Android项目—硅谷商城[新]"></a>四、最新Android项目—硅谷商城[新]</h2><p><a href="http://pan.baidu.com/s/1o8MyptC" target="_blank" rel="noopener">http://pan.baidu.com/s/1o8MyptC</a></p><h2 id="五、最新Android项目—硅谷P2P金融"><a href="#五、最新Android项目—硅谷P2P金融" class="headerlink" title="五、最新Android项目—硅谷P2P金融"></a>五、最新Android项目—硅谷P2P金融</h2><p><a href="https://pan.baidu.com/s/1KJbXUd3ymMhmJUPCqT9gzA" target="_blank" rel="noopener">https://pan.baidu.com/s/1KJbXUd3ymMhmJUPCqT9gzA</a></p><h2 id="六、30分钟打造Android万能播放器"><a href="#六、30分钟打造Android万能播放器" class="headerlink" title="六、30分钟打造Android万能播放器"></a>六、30分钟打造Android万能播放器</h2><p><a href="https://pan.baidu.com/s/1gfq0FS3" target="_blank" rel="noopener">https://pan.baidu.com/s/1gfq0FS3</a></p><h2 id="七、移动端重力感应：摇一摇的实现"><a href="#七、移动端重力感应：摇一摇的实现" class="headerlink" title="七、移动端重力感应：摇一摇的实现"></a>七、移动端重力感应：摇一摇的实现</h2><p><a href="https://pan.baidu.com/s/1oGJSWf_RaPdKXP8vMllnCQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1oGJSWf_RaPdKXP8vMllnCQ</a></p><h1 id="Android前沿技术"><a href="#Android前沿技术" class="headerlink" title="Android前沿技术"></a>Android前沿技术</h1><h2 id="一、Android-软件框架搭建"><a href="#一、Android-软件框架搭建" class="headerlink" title="一、Android_软件框架搭建"></a>一、Android_软件框架搭建</h2><p><a href="https://pan.baidu.com/s/1hsFIYig" target="_blank" rel="noopener">https://pan.baidu.com/s/1hsFIYig</a></p><h2 id="二、Android-OKHttp使用方法"><a href="#二、Android-OKHttp使用方法" class="headerlink" title="二、Android_OKHttp使用方法"></a>二、Android_OKHttp使用方法</h2><p><a href="https://pan.baidu.com/s/1c5McVW" target="_blank" rel="noopener">https://pan.baidu.com/s/1c5McVW</a></p><h2 id="三、Android-JSON解析"><a href="#三、Android-JSON解析" class="headerlink" title="三、Android_JSON解析"></a>三、Android_JSON解析</h2><p><a href="http://pan.baidu.com/s/1c23eePE" target="_blank" rel="noopener">http://pan.baidu.com/s/1c23eePE</a></p><h2 id="四、Android-xUtils3"><a href="#四、Android-xUtils3" class="headerlink" title="四、Android_xUtils3"></a>四、Android_xUtils3</h2><p><a href="https://pan.baidu.com/s/1nvGsExF" target="_blank" rel="noopener">https://pan.baidu.com/s/1nvGsExF</a></p><h2 id="五、Android-Afinal"><a href="#五、Android-Afinal" class="headerlink" title="五、Android_Afinal"></a>五、Android_Afinal</h2><p><a href="http://pan.baidu.com/s/1c7lXH8" target="_blank" rel="noopener">http://pan.baidu.com/s/1c7lXH8</a></p><h2 id="六、Android-Volley"><a href="#六、Android-Volley" class="headerlink" title="六、Android_Volley"></a>六、Android_Volley</h2><p><a href="http://pan.baidu.com/s/1jIkBalg" target="_blank" rel="noopener">http://pan.baidu.com/s/1jIkBalg</a></p><h2 id="七、Android-ButterKnife"><a href="#七、Android-ButterKnife" class="headerlink" title="七、Android_ButterKnife"></a>七、Android_ButterKnife</h2><p><a href="http://pan.baidu.com/s/1pKOgh9x" target="_blank" rel="noopener">http://pan.baidu.com/s/1pKOgh9x</a></p><h2 id="八、Android-EventBus"><a href="#八、Android-EventBus" class="headerlink" title="八、Android_EventBus"></a>八、Android_EventBus</h2><p><a href="http://pan.baidu.com/s/1qXYTyA4" target="_blank" rel="noopener">http://pan.baidu.com/s/1qXYTyA4</a></p><h2 id="九、Android-ImageLoader"><a href="#九、Android-ImageLoader" class="headerlink" title="九、Android_ImageLoader"></a>九、Android_ImageLoader</h2><p><a href="http://pan.baidu.com/s/1o7DsPmy" target="_blank" rel="noopener">http://pan.baidu.com/s/1o7DsPmy</a></p><h2 id="十、Android-Picasso"><a href="#十、Android-Picasso" class="headerlink" title="十、Android_Picasso"></a>十、Android_Picasso</h2><p><a href="http://pan.baidu.com/s/1c1JITo8" target="_blank" rel="noopener">http://pan.baidu.com/s/1c1JITo8</a></p><h2 id="十一、Android-Glide"><a href="#十一、Android-Glide" class="headerlink" title="十一、Android_Glide"></a>十一、Android_Glide</h2><p><a href="http://pan.baidu.com/s/1hswlhu0" target="_blank" rel="noopener">http://pan.baidu.com/s/1hswlhu0</a></p><h2 id="十二、Android-Fresco"><a href="#十二、Android-Fresco" class="headerlink" title="十二、Android_Fresco"></a>十二、Android_Fresco</h2><p><a href="http://pan.baidu.com/s/1qXHtwdA" target="_blank" rel="noopener">http://pan.baidu.com/s/1qXHtwdA</a></p><h2 id="十三、Android-RecyclerView"><a href="#十三、Android-RecyclerView" class="headerlink" title="十三、Android_RecyclerView"></a>十三、Android_RecyclerView</h2><p><a href="http://pan.baidu.com/s/1kVjTLJ5" target="_blank" rel="noopener">http://pan.baidu.com/s/1kVjTLJ5</a></p><h2 id="十四、Android-Pulltorefresh"><a href="#十四、Android-Pulltorefresh" class="headerlink" title="十四、Android_Pulltorefresh"></a>十四、Android_Pulltorefresh</h2><p><a href="http://pan.baidu.com/s/1c20xVm4" target="_blank" rel="noopener">http://pan.baidu.com/s/1c20xVm4</a></p><h2 id="十五、-Android-UniversalVideoView"><a href="#十五、-Android-UniversalVideoView" class="headerlink" title="十五、 Android_UniversalVideoView"></a>十五、 Android_UniversalVideoView</h2><p><a href="http://pan.baidu.com/s/1mhEK9EK" target="_blank" rel="noopener">http://pan.baidu.com/s/1mhEK9EK</a></p><h2 id="十六、-Android-JieCaoVideoPlayer"><a href="#十六、-Android-JieCaoVideoPlayer" class="headerlink" title="十六、 Android_JieCaoVideoPlayer"></a>十六、 Android_JieCaoVideoPlayer</h2><p><a href="https://pan.baidu.com/s/1geZZ1Ov" target="_blank" rel="noopener">https://pan.baidu.com/s/1geZZ1Ov</a></p><h2 id="十七、-Android-Banner"><a href="#十七、-Android-Banner" class="headerlink" title="十七、 Android_Banner"></a>十七、 Android_Banner</h2><p><a href="https://pan.baidu.com/s/1nv2jpDB" target="_blank" rel="noopener">https://pan.baidu.com/s/1nv2jpDB</a></p><h2 id="十八、CountdownView秒杀"><a href="#十八、CountdownView秒杀" class="headerlink" title="十八、CountdownView秒杀"></a>十八、CountdownView秒杀</h2><p><a href="https://pan.baidu.com/s/1nvAWFMT" target="_blank" rel="noopener">https://pan.baidu.com/s/1nvAWFMT</a></p><h2 id="十九、OpenDanmaku弹幕"><a href="#十九、OpenDanmaku弹幕" class="headerlink" title="十九、OpenDanmaku弹幕"></a>十九、OpenDanmaku弹幕</h2><p><a href="https://pan.baidu.com/s/1eS2x2Hc" target="_blank" rel="noopener">https://pan.baidu.com/s/1eS2x2Hc</a></p><h2 id="二十、TabLayout-amp-ViewPager"><a href="#二十、TabLayout-amp-ViewPager" class="headerlink" title="二十、TabLayout&amp;ViewPager"></a>二十、TabLayout&amp;ViewPager</h2><p><a href="https://pan.baidu.com/s/1mhCKJag#list/path=%2F" target="_blank" rel="noopener">https://pan.baidu.com/s/1mhCKJag#list/path=%2F</a></p><p>PS:如果链接失效或者有任何问题，请在评论区留言。</p><p><strong>声明：</strong>此资源由本站收集整理于网络，如有侵权，请联系 <a href="mailto:HuiProgramer@Outlook.com" target="_blank" rel="noopener">HuiProgramer@Outlook.com</a> 删除处理。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
          <category> 学习教程 </category>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习资料 </tag>
            
            <tag> 学习视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018年传智播客Python全栈学习(15期)</title>
      <link href="/2018-nian-chuan-zhi-bo-ke-python-quan-zhan-xue-xi-15-qi.html"/>
      <url>/2018-nian-chuan-zhi-bo-ke-python-quan-zhan-xue-xi-15-qi.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://wx2.sinaimg.cn/large/006MOU0zgy1g0pkh6fvfrj30ia0fi3zi.jpg" alt="Python全栈（15期）"><br><img src="http://wx4.sinaimg.cn/large/006MOU0zgy1g0pkh6qmtrj30hp0fmwfh.jpg" alt></p><p>链接: <a href="https://pan.baidu.com/s/15UvzxxHaGJ-dWKz8A8CMlg" target="_blank" rel="noopener">https://pan.baidu.com/s/15UvzxxHaGJ-dWKz8A8CMlg</a><br>提取码: mtdr </p><p>PS:如果链接失效或者有任何问题，请在评论区留言。</p><p><strong>声明：</strong>此资源由本站收集整理于网络，如有侵权，请联系 <a href="mailto:HuiProgramer@Outlook.com" target="_blank" rel="noopener">HuiProgramer@Outlook.com</a> 删除处理。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
          <category> 学习教程 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习资料 </tag>
            
            <tag> 学习视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018慕课网全站付费资源（119个课程）</title>
      <link href="/2018-mu-ke-wang-quan-zhan-fu-fei-zi-yuan-119-ge-ke-cheng.html"/>
      <url>/2018-mu-ke-wang-quan-zhan-fu-fei-zi-yuan-119-ge-ke-cheng.html</url>
      
        <content type="html"><![CDATA[<p>2018慕课网全站付费资源，119个课程，912.45GB</p><p>集合了2018年最新慕课网全站付费购买视频，一共加起来有912.45GB的百度云资源视频免费分享</p><p>包括了所有的技术学习类的教程，所有教程名字都可以对应到慕课网上的视频教程名字</p><blockquote><p>慕课网(IMOOC)是IT技能学习平台。慕课网(IMOOC)提供了丰富的移动端开发、php开发、web前端、android开发以及html5等视频教程资源公开课。并且富有交互性及趣味性，你还可以和朋友一起编程。</p></blockquote><p>所有的教程都支持百度云在线观看，无需下载，当然如果你想看原画质，可以自己下载下来观看</p><p><img src="http://wx2.sinaimg.cn/large/006MOU0zgy1g0pkh4lffqj30qw3yakjl.jpg" alt="文件目录"><br>链接：<a href="https://pan.baidu.com/s/1SmkhdtOVDWy0GHF5UC3cIg" target="_blank" rel="noopener">https://pan.baidu.com/s/1SmkhdtOVDWy0GHF5UC3cIg</a><br>提取码：59ig </p><p>PS:如果链接失效或者有任何问题，请在评论区留言。</p><p><strong>声明：</strong>此资源由本站收集整理于网络，如有侵权，请联系 <a href="mailto:HuiProgramer@Outlook.com" target="_blank" rel="noopener">HuiProgramer@Outlook.com</a> 删除处理。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
          <category> 学习教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习资料 </tag>
            
            <tag> 学习视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习路线图</title>
      <link href="/java-xue-xi-lu-xian-tu.html"/>
      <url>/java-xue-xi-lu-xian-tu.html</url>
      
        <content type="html"><![CDATA[<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><p>Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程 。</p><p>Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等特点  。<br>Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等   。</p><h1 id="Java学习路线图"><a href="#Java学习路线图" class="headerlink" title="Java学习路线图"></a>Java学习路线图</h1><p><img src="http://wx3.sinaimg.cn/large/006MOU0zgy1g0pkh52jg7j30zz0d475r.jpg" alt="java学习路线图"></p><h1 id="如何学习Java"><a href="#如何学习Java" class="headerlink" title="如何学习Java"></a>如何学习Java</h1><h2 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h2><p>Java 是一门纯粹的面向对象的编程语言，所以除了基础语法之外，必须得弄懂它的 oop 特性：封装、继承、多态。此外还有泛型、反射的特性，很多框架的技术都依赖它，比如 Spring 核心的 Ioc 和 AOP，都用到了反射，而且 Java 自身的动态代理也是利用反射实现的。此外还有 Java 一些标准库也是非常常见，比如集合、I/O、并发，几乎在 Web 开发中无处不在，也是面试经常会被问到的，所以在自学 Java 后端之前，不妨先打好这些基础，另外还有 Java8 的一些新特性，也要重点关注，比如 Lambda 表达式、集合的 Stream 流操作、全新的 Date API 等等</p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><p>建议学习MySQL<br>在你了解了一些基础语法之后，就可以开始实战演练了，多练习熟练了就可以了。</p><h3 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h3><p>你需要弄懂 JDBC API 的用法，其实它只是一组规范接口，所有数据库驱动只要实现了 JDBC，那么我们就可以通过标准的 API 调用相应的驱动，完全不用知道驱动是怎么实现的，这就是面向接口编程的好处。</p><h2 id="Web基础"><a href="#Web基础" class="headerlink" title="Web基础"></a>Web基础</h2><h3 id="Http-协议"><a href="#Http-协议" class="headerlink" title="Http 协议"></a>Http 协议</h3><p>可以参考：<a href="https://www.cnblogs.com/ranyonsue/p/5984001.html" target="_blank">Http协议</a></p><h3 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h3><p>你只要了解它其实就是一个 Servlet 就行了，关于它的一些标签用法，我认为可以直接忽略，因为现在互联网几乎没哪间公司还用 JSP，除了一些老旧的项目。现在都是流行前后端分离，单页应用，后端只做 API 接口的时代了，所以时间宝贵，把这些时间重点放在 Servlet 规范上面吧。</p><h3 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h3><p>它是一个 Web 容器，我们写的后端项目都要部署到Web容器才能运行，它其实是一个遵循 Http，通过 Socket 通信与客户端进行交互的服务端程序.<br>可以参考：<a href="http://objcoding.com/2017/06/12/Tomcat-structure-and-processing-request-process/" target="_blank">Tomcat结构及处理请求过程</a></p><h2 id="Web-主流框架"><a href="#Web-主流框架" class="headerlink" title="Web 主流框架"></a>Web 主流框架</h2><p>Java Web 框架多如牛毛，等你有一定经验了，你也可以写一个 Web 框架，网上很多说 Spring、Struts2、Hibernate 是 Java 三架马车，我只想说，那是很久远的事情了，我严重不推荐 Struts2、Hibernate，相信我，一开始只需要上手 Spring、SpringMVC、Mybatis 就可以了，特别是 Spring 框架，其实 Spring 家族的框架都是很不错的。</p><p>但是提醒一点就是，千万不要沉迷于各种框架不能自拔，以会多种用法而沾沾自喜，导致知其然而不知其所以然。</p><h3 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h3><p>核心思想就是 IOC 和 AOP：</p><p><a href="http://blog.csdn.net/qq_22654611/article/details/52606960/" target="_blank">谈谈对 Spring IOC 的理解</a></p><p><a href="http://objcoding.com/2017/08/25/Spring-AOP/" target="_blank">Spring 面向切面编程</a></p><h3 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h3><p>它的思想是全部请求统一用一个 Servlet 去做请求转发与控制，这个 Servlet 叫 DispatcherServlet：</p><p><a href="http://objcoding.com/2017/06/14/SpringMVC-initialization-process/" target="_blank">SpringMVC 初始化过程</a></p><p><a href="http://objcoding.com/2017/06/15/SpringMVC-processing-request-process/" target="_blank">SpringMVC 处理请求过程</a></p><h3 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h3><p>它可实现动态拼装 sql，避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集：</p><p><a href="http://www.mybatis.org/mybatis-3/zh/index.html" target="_blank">mybatis 入门教程</a></p><p><a href="http://www.cnblogs.com/dongying/tag/Mybatis%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E7%B3%BB%E5%88%97/" target="_blank">Mybatis 深入浅出系列</a></p><h2 id="Web-框架进阶"><a href="#Web-框架进阶" class="headerlink" title="Web 框架进阶"></a>Web 框架进阶</h2><p>使用了 SSM 框架后，你会觉得框架也不过这么回事，如果你对 Spring 有过大概了解，你也会产生想写一个「山寨版」Spring 的心思了，一个轻量级 Web 框架主要具备以下功能：</p><ol><li>可读取用户自定义配置文件，并以此来初始化框架；</li><li>具备 Bean 容器，管理项目的类的对象生命周期；</li><li>具备依赖注入，降低类之间的耦合性；</li><li>具备 AOP 功能，使项目可进行横向编程，可不改变原有代码的情况增加业务逻辑；</li><li>具备 MVC 框架模式。</li></ol><p>其实除了 SSM 之外，Web 框架可谓是百家齐放，其中以 Spring 全家桶最为耀眼，在这里我极力推荐两个 Spring 家族框架：SpringBoot 和 SpringCloud。</p><h3 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h3><p>弥补了 Spring 配置上的缺点，再也不用为繁杂的 xml 费劲精力了，堪称是 Java 后端开发的颠覆者，推荐书籍「Java EE 开发的颠覆者：SpringBoot实战」</p><p><a href="http://objcoding.com/2017/05/03/SpringBoot/" target="_blank">SpringBoot 构建 web 项目</a></p><p><a href="http://objcoding.com/2018/01/30/The-principle-of-Spring-Boot-automation-configuration/" target="_blank">SpringBoot 自动化配置源码分析</a></p><p><a href="http://objcoding.com/2018/02/02/Costom-SpringBoot-Starter/" target="_blank">自定义 SpringBoot Starter</a></p><p><a href="https://github.com/objcoding/spring-boot-starter-tutorial" target="_blank">spring-boot-starter-tutorial</a></p><h3 id="SpringCloud"><a href="#SpringCloud" class="headerlink" title="SpringCloud"></a>SpringCloud</h3><p>一个微服务架构，能够将项目按照业务分成一个个微服务，每个微服务都可独立部署，服务之间互相协调。当一个项目越来越大时，随之而来的是越来越难以维护，此时将项目拆分成若干个微服务、单独维护、单独部署，也可以降低项目不同业务间的耦合度。推荐书籍「Spring Cloud 与 Docker 微服务架构实战」，这本书将 Docker 与微服务完美地结合在一起，堪称完美！</p><p><a href="https://springcloud.cc/" rel="nofollow" target="_blank">Spring Cloud 中文官网</a><br><a href="http://blog.csdn.net/column/details/15197.html" rel="nofollow" target="_blank">史上最简单的 Spring Cloud 教程</a></p><p>关于 Spring Cloud 的博客有：</p><p><a href="http://objcoding.com/2017/05/07/SpringCloud(1)/" rel="nofollow" target="_blank">SpringCloud微服务架构之服务注册与发现</a><br><a href="http://objcoding.com/2017/05/10/SpringCloud(2)/" rel="nofollow" target="_blank">SpringCloud微服务架构之服务消费者</a><br><a href="http://objcoding.com/2017/05/15/SpringCloud(3)/" rel="nofollow" target="_blank">SpringCloud微服务架构之断路器</a><br><a href="http://objcoding.com/2017/05/20/SpringCloud(4)/" rel="nofollow" target="_blank">SpringCloud微服务架构之服务网关</a></p><h2 id="其它技术"><a href="#其它技术" class="headerlink" title="其它技术"></a>其它技术</h2><h3 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h3><p>一个高性能的 key-value 数据库，当有并发量很高的请求时，将数据缓存在 Redis 中，将提高服务器的响应性能，大大减轻数据库的压力。</p><p><a href="http://www.redis.cn/" rel="nofollow" target="_blank">redis 中文官网</a><br><a href="http://www.runoob.com/redis/redis-tutorial.html" rel="nofollow" target="_blank">redis 教程</a></p><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>世界上最先进的分布式版本控制系统，建议所有初学者从命令行开始使用 Git！</p><p><a href="https://git-scm.com/" rel="nofollow" target="_blank">Git 官网</a><br><a href="https://huiprogramer.coding.me/Git教程.html" rel="nofollow" target="_blank">Git 教程</a></p><h3 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h3><p>一个用于构建项目的工具，将项目间的依赖通过 xml 完美地组织到一起，可通过编译插件将项目编译成字节码文件。还有类似的 Gradle 也是不错的选择。</p><p><a href="http://www.cnblogs.com/hafiz/p/5360195.html" rel="nofollow" target="_blank">maven 的 pom.xml 文件详解</a><br>Linux：至少要求常用的命令会用，能够在 linux 环境下部署项目。<br><a href="http://man.linuxde.net/" rel="nofollow" target="_blank">Linux 命令大全</a><br><a href="http://objcoding.com/2017/10/31/The-most-complete-SSH-connection-remote-terminal-tutorial/" rel="nofollow" target="_blank">最全的 SSH 连接远程终端教程</a></p><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>简直是项目部署神器啊，来不及解释了，看下面一些 Docker 系列博客，开启 Docker 之旅吧！推荐书籍「Docker 技术入门与实战」，中国首部 Docker 著作！</p><p><a href="http://objcoding.com/2017/12/01/Docker(1)/" rel="nofollow" target="_blank">Docker 实战（一）</a><br><a href="http://objcoding.com/2017/12/07/Docker(2)/" rel="nofollow" target="_blank">Docker 实战（二）</a><br><a href="http://objcoding.com/2018/02/06/Docker(3)/" rel="nofollow" target="_blank">Docker 实战（三）</a><br><a href="https://github.com/objcoding/docker-deploy-tutorial" rel="nofollow" target="_blank">docker-deploy-tutorial</a></p><p><strong>原文地址</strong><br><a target="_blank" href="https://blog.csdn.net/chenshiyang0806/article/details/79879269" class="LinkCard">Java学习路线图<a></a></a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java学习路线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git教程（持续更新）</title>
      <link href="/git-jiao-cheng.html"/>
      <url>/git-jiao-cheng.html</url>
      
        <content type="html"><![CDATA[<h1 id="GIT-（分布式版本控制系统）"><a href="#GIT-（分布式版本控制系统）" class="headerlink" title="GIT （分布式版本控制系统）"></a>GIT （分布式版本控制系统）</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="http://wx3.sinaimg.cn/large/006MOU0zgy1g0pkpprv3vj306402kq2v.jpg" alt="Git" title="Git-Logo">Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。<br>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p><h2 id="什么是Git，Git可以用来干嘛？"><a href="#什么是Git，Git可以用来干嘛？" class="headerlink" title="什么是Git，Git可以用来干嘛？"></a>什么是Git，Git可以用来干嘛？</h2><h3 id="GIt是什么？"><a href="#GIt是什么？" class="headerlink" title="GIt是什么？"></a>GIt是什么？</h3><p>Git是目前世界上最先进的分布式版本控制系统</p><h3 id="Git可以用来干嘛？"><a href="#Git可以用来干嘛？" class="headerlink" title="Git可以用来干嘛？"></a>Git可以用来干嘛？</h3><p>如果你用Microsoft Word写过长篇大论，那你一定有这样的经历：</p><p>想删除一个段落，又怕将来想恢复找不回来怎么办？有办法，先把当前文件“另存为……”一个新的Word文件，再接着改，改到一定程度，再“另存为……”一个新文件，这样一直改下去，最后你的Word文档就“魂飞魄散”了！</p><p>过了一周，你想找回被删除的文字，但是已经记不清删除前保存在哪个文件里了，只好一个一个文件去找，真麻烦。</p><p>看着一堆乱七八糟的文件，想保留最新的一个，然后把其他的删掉，又怕哪天会用上，还不敢删，真郁闷。</p><p>更要命的是，有些部分需要你的财务同事帮助填写，于是你把文件Copy到U盘里给她（也可能通过Email发送一份给她），然后，你继续修改Word文件。一天后，同事再把Word文件传给你，此时，你必须想想，发给她之后到你收到她的文件期间，你作了哪些改动，得把你的改动和她的部分合并，真困难。</p><p>于是你想，如果有一个软件，不但能自动帮我记录每次文件的改动，还可以让同事协作编辑，这样就不用自己管理一堆类似的文件了，也不需要把文件传来传去。如果想查看某次改动，只需要在软件里瞄一眼就可以，岂不是很方便？</p><p>这个软件用起来就应该像这个样子，能记录每次文件的改动：</p><table><thead><tr><th style="text-align:center">版本</th><th style="text-align:center">用户</th><th style="text-align:center">说明</th><th>日期</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">张三</td><td style="text-align:center">删除了软件服务条款5</td><td>7/12 10:38</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">张三</td><td style="text-align:center">增加了License人数限制</td><td>7/12 18:09</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">李四</td><td style="text-align:center">财务部门调整了合同金额</td><td>7/13 9:51</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">张三</td><td style="text-align:center">延长了免费升级周期</td><td>7/14 15:17</td></tr></tbody></table><h2 id="Git与SVN的区别"><a href="#Git与SVN的区别" class="headerlink" title="Git与SVN的区别"></a>Git与SVN的区别</h2><p>GIT不仅仅是个版本控制系统，它也是个内容管理系统(CMS),工作管理系统等。<br>如果你是一个具有使用SVN背景的人，你需要做一定的思想转换，来适应GIT提供的一些概念和特征。<br>Git 与 SVN 区别点：</p><ul><li>GIT是分布式的，SVN不是：这是GIT和其它非分布式的版本控制系统，例如SVN，CVS等，最核心的区别。</li><li>GIT把内容按元数据方式存储，而SVN是按文件：所有的资源控制系统都是把文件的元信息隐藏在一个类似.svn,.cvs等的文件夹里。</li><li>GIT分支和SVN的分支不同：分支在SVN中一点不特别，就是版本库中的另外的一个目录。</li><li>GIT没有一个全局的版本号，而SVN有：目前为止这是跟SVN相比GIT缺少的最大的一个特征。</li><li>GIT的内容完整性要优于SVN：GIT的内容存储使用的是SHA-1哈希算法。这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏。</li></ul><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>最早Git是在Linux上开发的，很长一段时间内，Git也只能在Linux和Unix系统上跑。不过，慢慢地有人把它移植到了Windows上。现在，Git可以在Linux、Unix、Mac和Windows这几大平台上正常运行了。<br>Git 各平台安装包下载地址为：<a href="http://git-scm.com/downloads" target="_blank" rel="noopener">http://git-scm.com/downloads</a></p><h3 id="在Linux平台安装Git"><a href="#在Linux平台安装Git" class="headerlink" title="在Linux平台安装Git"></a>在Linux平台安装Git</h3><p>Git 的工作需要调用 curl，zlib，openssl，expat，libiconv 等库的代码，所以需要先安装这些依赖工具。<br>在有 yum 的系统上（比如 Fedora）或者有 apt-get 的系统上（比如 Debian 体系），可以用下面的命令安装：<br>各 Linux 系统可以使用其安装包管理工具（apt-get、yum 等）进行安装：</p><h4 id="Debian-Ubuntu"><a href="#Debian-Ubuntu" class="headerlink" title="Debian/Ubuntu"></a>Debian/Ubuntu</h4><p>Debian/Ubuntu Git 安装命令为：</p><pre class=" language-Shell"><code class="language-Shell">$ apt-get install libcurl4-gnutls-dev libexpat1-dev gettext \  libz-dev libssl-dev$ apt-get install git$ git --versiongit version 1.8.1.2</code></pre><h4 id="Centos-RedHat"><a href="#Centos-RedHat" class="headerlink" title="Centos/RedHat"></a>Centos/RedHat</h4><p>如果你使用的系统是 Centos/RedHat 安装命令为：</p><pre class=" language-Shell"><code class="language-Shell">$ yum install curl-devel expat-devel gettext-devel \  openssl-devel zlib-devel$ yum -y install git-core$ git --versiongit version 1.7.1</code></pre><h3 id="在Mac-OS-X上安装Git"><a href="#在Mac-OS-X上安装Git" class="headerlink" title="在Mac OS X上安装Git"></a>在Mac OS X上安装Git</h3><p>如果你正在使用Mac做开发，有两种安装Git的方法。</p><p>一是安装homebrew，然后通过homebrew安装Git，具体方法请参考homebrew的文档：<a href="http://brew.sh/" target="_blank" rel="noopener">http://brew.sh/</a> 。</p><p>第二种方法更简单，也是推荐的方法，就是直接从AppStore安装Xcode，Xcode集成了Git，不过默认没有安装，你需要运行Xcode，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了。</p><h3 id="在Windows上安装Git"><a href="#在Windows上安装Git" class="headerlink" title="在Windows上安装Git"></a>在Windows上安装Git</h3><p>在Windows上使用Git，可以从Git官网直接<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">下载安装程序</a>，（网速慢的同学请移步<a href="https://pan.baidu.com/s/1czY6eYbHa0PC-UBqouprmA" target="_blank" rel="noopener">国内镜像</a>），然后按默认选项安装即可。</p><p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！<br><img src="http://wx3.sinaimg.cn/large/006MOU0zgy1g0pkh19il6j30gj0agwfw.jpg" alt="Git Bash" title="Git-Bash"></p><h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><p>Git 提供了一个叫做 git config 的工具，专门用来配置或读取相应的工作环境变量。<br>这些环境变量，决定了 Git 在各个环节的具体工作方式和行为。这些变量可以存放在以下三个不同的地方：</p><ul><li>/etc/gitconfig 文件：系统中对所有用户都普遍适用的配置。若使用 git config 时用 –system 选项，读写的就是这个文件。</li><li>~/.gitconfig 文件：用户目录下的配置文件只适用于该用户。若使用 git config 时用 –global 选项，读写的就是这个文件。</li><li>当前项目的 Git 目录中的配置文件（也就是工作目录中的 .git/config 文件）：这里的配置仅仅针对当前项目有效。每一个级别的配置都会覆盖上层的相同配置，所以 .git/config 里的配置会覆盖 /etc/gitconfig 中的同名变量。</li></ul><p>在 Windows 系统上，Git 会找寻用户主目录下的 .gitconfig 文件。主目录即 $HOME 变量指定的目录，一般都是 C:\Documents and Settings\$USER。<br>此外，Git 还会尝试找寻 /etc/gitconfig 文件，只不过看当初 Git 装在什么目录，就以此作为根目录来定位。</p><h3 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h3><p>配置个人的用户名称和电子邮件地址：</p><pre class=" language-Shell"><code class="language-Shell">$ git config --global user.name "Your Name"$ git config --global user.email "email@example.com"</code></pre><p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。</p><p>如果用了 <span style="color:red">–global</span> 选项，那么更改的配置文件就是位于你用户主目录下的那个，以后你所有的项目都会默认使用这里配置的用户信息。<br>如果要在某个特定的项目中使用其他名字或者电邮，只要去掉 <span style="color:red">–global</span> 选项重新配置即可，新的设定保存在当前项目的 .git/config 文件里。</p><p><strong>注意:</strong> 用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p><h3 id="查看配置信息"><a href="#查看配置信息" class="headerlink" title="查看配置信息"></a>查看配置信息</h3><p>要检查已有的配置信息，可以使用 git config –list 命令：</p><pre class=" language-Shell"><code class="language-Shell">$ git config --listcredential.helper=manageruser.name=ProgramerHuiuser.email=1712817197@qq.com</code></pre><h2 id="Git工作流程"><a href="#Git工作流程" class="headerlink" title="Git工作流程"></a>Git工作流程</h2><p> 一般工作流程如下：</p><ul><li>克隆 Git 资源作为工作目录。</li><li>在克隆的资源上添加或修改文件。</li><li>如果其他人修改了，你可以更新资源。</li><li>在提交前查看修改。</li><li>提交修改。</li><li>在修改完成后，如果发现错误，可以撤回提交并再次修改并提交。</li></ul><h2 id="Git工作区、暂存区和版本库"><a href="#Git工作区、暂存区和版本库" class="headerlink" title="Git工作区、暂存区和版本库"></a>Git工作区、暂存区和版本库</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><ul><li>工作区：就是你在电脑里能看到的目录。</li><li>暂存区：英文叫stage, 或index。一般存放在 “.git目录下” 下的index文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。</li><li>版本库：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。</li></ul><p>下面这个图展示了工作区、版本库中的暂存区和版本库之间的关系：<br><img src="http://wx4.sinaimg.cn/large/006MOU0zgy1g0pkh32tg9j30iz09x0tj.jpg" alt="Git工作区与版本库"><br>图中左侧为工作区，右侧为版本库。在版本库中标记为 “index” 的区域是暂存区（stage, index），标记为 “master” 的是 master 分支所代表的目录树。<br>图中我们可以看出此时 “HEAD” 实际是指向 master 分支的一个”游标”。所以图示的命令中出现 HEAD 的地方可以用 master 来替换。<br>图中的 objects 标识的区域为 Git 的对象库，实际位于 “.git/objects” 目录下，里面包含了创建的各种对象及内容。<br>当对工作区修改（或新增）的文件执行 “git add” 命令时，暂存区的目录树被更新，同时工作区修改（或新增）的文件内容被写入到对象库中的一个新的对象中，而该对象的ID被记录在暂存区的文件索引中。<br>当执行提交操作（git commit）时，暂存区的目录树写到版本库（对象库）中，master 分支会做相应的更新。即 master 指向的目录树就是提交时暂存区的目录树。<br>当执行 “git reset HEAD” 命令时，暂存区的目录树会被重写，被 master 分支指向的目录树所替换，但是工作区不受影响。<br>当执行 “git rm –cached <file>“ 命令时，会直接从暂存区删除文件，工作区则不做出改变。<br>当执行 “git checkout .” 或者 “git checkout – <file>“ 命令时，会用暂存区全部或指定的文件替换工作区的文件。这个操作很危险，会清除工作区中未添加到暂存区的改动。<br>当执行 “git checkout HEAD .” 或者 “git checkout HEAD <file>“ 命令时，会用 HEAD 指向的 master 分支中的全部或者部分文件替换暂存区和以及工作区中的文件。这个命令也是极具危险性的，因为不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改动。</file></file></file></p><h3 id="Git创建版本库-仓库"><a href="#Git创建版本库-仓库" class="headerlink" title="Git创建版本库(仓库)"></a>Git创建版本库(仓库)</h3><p>什么是版本库呢？版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p><p>所以，创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：</p><pre class=" language-Shell"><code class="language-Shell">$ pwd/c/Users/Administrator$ cd E:$ mkdir Git$ cd Git</code></pre><p><code>pwd</code>命令用于显示当前目录，<code>cd</code>命令用于切换目录，<code>mkdir</code>用于创建文件夹，在我的Windows上，这个仓库位于<code>E:/Git</code>.</p><p><strong>注意：</strong>文件夹应避免使用中文，防止乱码。</p><h4 id="让文件夹成为真正的仓库"><a href="#让文件夹成为真正的仓库" class="headerlink" title="让文件夹成为真正的仓库"></a>让文件夹成为真正的仓库</h4><p>上面步骤只是创建了一个文件夹，严格意义上并不算是一个Git版本库，so，现在，我们让这个文件夹变成一个真正的仓库。</p><p>输入<code>git init</code>命令把这个目录变成Git可管理的仓库</p><pre class=" language-Shell"><code class="language-Shell">$ git initInitialized empty Git repository in E:/Git/.git/</code></pre><p>瞬间Git就把仓库建好了，而且告诉你是一个空的仓库（empty Git repository），细心的读者可以发现当前目录下多了一个.git的目录，这个目录是Git来跟踪管理版本库的，没事千万不要手动修改这个目录里面的文件，不然改乱了，就把Git仓库给破坏了。</p><p>如果你没有看到.git目录，那是因为这个目录默认是隐藏的，用ls -ah命令就可以看见。</p><h4 id="把文件添加到版本库"><a href="#把文件添加到版本库" class="headerlink" title="把文件添加到版本库"></a>把文件添加到版本库</h4><p>首先这里再明确一下，所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。</p><p>不幸的是，Microsoft的Word格式是二进制格式，因此，版本控制系统是没法跟踪Word文件的改动的，前面我们举的例子只是为了演示，如果要真正使用版本控制系统，就要以纯文本方式编写文件。<br><strong>建议：</strong>编辑文本最好使用<code>Notepad++</code>代替记事本，因为微软自带记事本会在每个文件开头添加0xefbbbf（十六进制）的字符。</p><p>现在，我们编写一个readme.txt文件，内容如下:</p><pre><code>Hello,Git!</code></pre><p><strong>注意:</strong>文件应该放在<code>Git</code>文件夹里，因为这是一个Git仓库，放到其他地方Git会找不到这个文件。</p><h5 id="Git-add"><a href="#Git-add" class="headerlink" title="Git add"></a>Git add</h5><p>通过<code>git add</code>告诉Git，把文件添加到仓库（暂存区）：</p><pre class=" language-Shell"><code class="language-Shell">$ git add readme.txt</code></pre><p>执行上面的命令，没有任何显示,代表执行成功。</p><h5 id="Git-commit"><a href="#Git-commit" class="headerlink" title="Git commit"></a>Git commit</h5><p>通过<code>git commit</code>告诉Git，把文件提交到仓库（版本库）：</p><pre class=" language-Shell"><code class="language-Shell">$ git commit -m "wrote a readme file"[master (root-commit) eacdf4e] wrote a readme file 1 file changed, 2 insertions(+) create mode 100644 readme.txt</code></pre><p><strong>其中：</strong><code>git commit -m &quot;wrote a readme file&quot;</code>中的<code>-m &quot;xxx&quot;</code>代表本次提交的说明。<br>例如：<br><code>$ git commit -m &quot;本次提交解决了若干个BUG&quot;</code></p><p>当然,提交说明也可以带表情，具体表情参考<a href="https://www.52share.online/Github表情提交指南.html">Github表情提交指南</a>。</p><h2 id="Git-基本操作"><a href="#Git-基本操作" class="headerlink" title="Git 基本操作"></a>Git 基本操作</h2><h3 id="获取和创建项目命令"><a href="#获取和创建项目命令" class="headerlink" title="获取和创建项目命令"></a>获取和创建项目命令</h3><h4 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h4><p>此命令在创建版本库的时候就讲过，<code>git init</code>命令就是将一个文件夹初始化为一个Git仓库，创建成功后在该文件夹下会生成一个<code>.git</code>的文件夹.<br>例如：</p><pre class=" language-Shell"><code class="language-Shell">$ git initInitialized empty Git repository in E:/Git/.git/</code></pre><p>现在你能看见该仓库中的<code>.git</code>文件了。</p><pre class=" language-Shell"><code class="language-Shell">$ ls -a.  ..  .git</code></pre><p><strong>注意：</strong>这里的<code>ls -a</code>中的<code>ls</code>就是列表，清单的意思，在终端就是显示当前目录的所有文件，而<code>-a</code>的意思是显示隐藏文件。</p><h4 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h4><p>使用 <code>git clone</code> 拷贝一个 Git 仓库到本地，让自己能够查看该项目，或者进行修改。</p><pre class=" language-Shell"><code class="language-Shell">$ git clone [url]</code></pre><p><code>url</code>是你想克隆（复制）的网上仓库。<br>例如：我们克隆Github上的项目</p><pre class=" language-Shell"><code class="language-Shell">$ git clone git@github.com:HuiProgramer/HTML5_Learning.gitCloning into 'HTML5_Learning'...remote: Counting objects: 26, done.remote: Total 26 (delta 0), reused 0 (delta 0), pack-reused 26Receiving objects: 100% (26/26), done.Resolving deltas: 100% (5/5), done.Checking connectivity... done.</code></pre><p>克隆完成后，在当前目录下会生成一个 HTML5_Learning 目录：</p><pre class=" language-Shell"><code class="language-Shell">$ cd HTML5_Learning& lsCSS/  index.html   logo.png   Screen1.pngimg/  JavaScript/  README.MD  Screen2.png</code></pre><p>至此，一个Github上的项目就克隆完成了，你可以尝试修改或者查看。</p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h4><p>此命令前面就讲过了，这里再举一个例子，这次我们往暂存区添加多个文件：</p><pre class=" language-Shell"><code class="language-Shell">$ touch hello.py hello.c hello.java hello.html$ lshello.py hello.c hello.java hello.html$ git add hello.c hello.java hello.html hello.py$ git statusOn branch masterNo commits yetChanges to be committed:  (use "git rm --cached <file>..." to unstage)        new file:   hello.c        new file:   hello.html        new file:   hello.java        new file:   hello.py</code></pre><p>我们分别向暂存区提交了多个语言<code>hello world</code>程序源文件，<code>touch</code>代表我们新建这几个文件，<code>git status</code>的意思是查看当前暂存区的状态。<br><strong>扩展：</strong> 通过<code>git add .</code>可以将该文件夹的东西都添加到暂存区。</p><h4 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h4><p><code>git status</code>用于查看在你上次提交之后是否有修改，便于查看当前暂存区的状态，通过增加<code>-s</code>参数可以获得简短的输出结果，如果没有加该参数将会得到详细的输出。<br>例如：</p><pre class=" language-Shell"><code class="language-Shell">$ git statusOn branch masterNo commits yetChanges to be committed:  (use "git rm --cached <file>..." to unstage)        new file:   hello.c        new file:   hello.html        new file:   hello.java        new file:   hello.py$ git status -sA  hello.cA  hello.htmlA  hello.javaA  hello.py</code></pre><p><strong>补充说明：</strong><code>A</code>的意思是文件添加到了暂存区，而<code>AM</code>的意思是文件添加到暂存区后在工作区又有所改动。</p><h4 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h4><p>执行 git diff 来查看执行 git status 的结果的详细信息。<br>git diff 命令显示已写入缓存与已修改但尚未写入缓存的改动的区别。git diff 有如下几个主要的应用场景。</p><ul><li>尚未缓存的改动（工作区）：git diff</li><li>查看已缓存的改动（暂存区）： git diff –cached</li><li>查看已缓存的与未缓存的所有改动（工作区与暂存区）：git diff HEAD</li><li>显示摘要而非整个 diff：git diff –stat</li></ul><p>例如我们利用<code>notepad++</code>编辑器修改<code>hello.c</code>文件内容如下：</p><pre class=" language-C"><code class="language-C">#include<stdio.h>int main(void){       printf("hello,world");    return 0;}</code></pre><p>现在我们使用<code>git diff file</code>命令来看看结果：</p><pre class=" language-Shell"><code class="language-Shell">$ git diff hello.cdiff --git a/hello.c b/hello.cindex e69de29..fb0c3bd 100644--- a/hello.c+++ b/hello.c@@ -0,0 +1,5 @@+#include<stdio.h>+int main(void){+       printf("hello,world");+       return 0;+}\ No newline at end of file</code></pre><p>果然，git将整个文件的变化都列了出来。<br><strong>扩展：</strong><code>diff</code>就是单词<code>different</code>的缩写，其原意是“区别，不同”。</p><h4 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h4><p>此命令在讲述创建版本库的时候就介绍过，主要用于将暂存区的东西提交到版本库中。<br>例如：</p><pre class=" language-Shell"><code class="language-Shell">$ git status -sAM hello.cA  hello.htmlA  hello.javaA  hello.py$ git commit -m"第一次提交"[master (root-commit) ac81931] 第一次提交 4 files changed, 0 insertions(+), 0 deletions(-) create mode 100644 hello.c create mode 100644 hello.html create mode 100644 hello.java create mode 100644 hello.py</code></pre><p>我们将暂存区的内容提交到版本库后再次执行<code>git status</code>命令</p><pre class=" language-Shell"><code class="language-Shell">$ git statusOn branch masterChanges not staged for commit:  (use "git add <file>..." to update what will be committed)  (use "git checkout -- <file>..." to discard changes in working directory)        modified:   hello.cno changes added to commit (use "git add" and/or "git commit -a")</code></pre><p>此时，我们发现，<strong>暂存区</strong>的内容已经全部提交到版本库中，只有一条<strong>工作区</strong>内容被修改的记录。</p><h4 id="git-reset-HEAD"><a href="#git-reset-HEAD" class="headerlink" title="git reset HEAD"></a>git reset HEAD</h4><p><code>git reset HEAD file</code> 命令用于取消已缓存(暂存区)的内容。<br>可以理解为：撤销暂存区的修改。可单个撤销，也可以全部撤销。<br>这里，我们先提交hello.c源文件</p><pre class=" language-Shell"><code class="language-Shell">$ git statusOn branch masterChanges not staged for commit:  (use "git add <file>..." to update what will be committed)  (use "git checkout -- <file>..." to discard changes in working directory)        modified:   hello.cno changes added to commit (use "git add" and/or "git commit -a")$ git add hello.c$ git statusOn branch masterChanges to be committed:  (use "git reset HEAD <file>..." to unstage)        modified:   hello.c</code></pre><p>好的，现在hello.c源文件已经进入了暂存区了，那么，如果我不想提交该内容，该怎么解决呢？其实，通过<code>git reset HEAD</code>命令是可以丢弃掉暂存区里的内容的。<br>现在，我们来试试吧！</p><pre class=" language-Shell"><code class="language-Shell">$ git reset HEADUnstaged changes after reset:M       hello.c$ git statusOn branch masterChanges not staged for commit:  (use "git add <file>..." to update what will be committed)  (use "git checkout -- <file>..." to discard changes in working directory)        modified:   hello.cno changes added to commit (use "git add" and/or "git commit -a")</code></pre><p>果然，暂存区的内容被撤销掉了。<br><strong>要点：</strong><code>git reset HEAD filename</code>实现单个或多个文件在暂存区中撤销，<code>git reset HEAD</code>实现整个暂存区的撤销。<br><strong>注意：</strong>如果你提交暂存区后，在工作区又进行了修改，<code>git reset HEAD</code>命令并不会让你在工作区的内容回退到上一次提交的数据，该只是单纯的丢弃掉暂存区里的内容。</p><h4 id="git-checkout-–-file"><a href="#git-checkout-–-file" class="headerlink" title="git checkout – file"></a>git checkout – file</h4><p><code>git checkout --file</code>命令用于取消未缓存的内容（工作区）。<br>可以理解为：丢弃工作区的修改，回到上次修改的样子。<br>那么，我们现在来试试</p><pre class=" language-Shell"><code class="language-Shell">$ git statusOn branch masterChanges not staged for commit:  (use "git add <file>..." to update what will be committed)  (use "git checkout -- <file>..." to discard changes in working directory)        modified:   hello.cno changes added to commit (use "git add" and/or "git commit -a")$ cat hello.c#include<stdio.h>int main(void){        printf("hello,world");        return 0;}$ git checkout -- hello.c$ cat hello.c</code></pre><p>在这里，我们使用<code>git status</code>命令可以看到该文件只是在工作区进行了修改，接着我们使用了<code>cat</code>命令查看了文件内容，发现里面是C语言源代码，然后我们使用了<code>git checkout -- hello.c</code>命令丢弃了本次修改。等我们再次使用<code>cat</code>命令查看hello.c内容时发现里面已经没有内容了，这是为什么呢？<br>原来这里的<code>git checkout -- &lt;file&gt;</code>命令的结果分为了两种情况:</p><ul><li>当文件在工作区修改后还没有被添加到暂存区，此时使用该命令，会使工作区回到和版本库一模一样的状态。</li><li>当文件在工作区修改后被添加到了暂存区，此时使用该命令，会使工作区回到把文件添加到暂存区后的状态</li></ul><p>那么，这里就是第一种状态了，因为我们并没有提交到暂存区，而版本库的<code>hello.c</code>里面恰恰是没有内容的。（因为当时并没有写内容）</p><h4 id="git-rm"><a href="#git-rm" class="headerlink" title="git rm"></a>git rm</h4><p>如果只是简单地从工作目录中手工删除文件，运行 <code>git status</code> 时就会在 <code>Changes not staged for commit</code> 的提示。<br>要从 Git 中移除某个文件，就必须要从已跟踪文件清单中移除，然后提交。可以用以下命令完成此项工作</p><pre class=" language-Shell"><code class="language-Shell">$ rm <file></code></pre><p>如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 <code>-f</code></p><pre class=" language-Shell"><code class="language-Shell">$ rm -f <file></code></pre><p>如果把文件从暂存区域移除，但仍然希望保留在当前工作目录中，换句话说，仅是从跟踪清单中删除，使用 –cached 选项即可</p><pre class=" language-Shell"><code class="language-Shell">$ git rm --cached <file></code></pre><p>我们先在<code>hello.py</code>增加如下代码</p><pre class=" language-Python"><code class="language-Python">print("hello")</code></pre><p>然后，我们将文件添加到暂存区后，在暂存区中删除<code>hello.py</code>文件</p><pre class=" language-Shell"><code class="language-Shell">$ git add hello.py$ git statusOn branch masterChanges to be committed:  (use "git reset HEAD <file>..." to unstage)        modified:   hello.py$ git rm --cached hello.pyrm 'hello.py'$ git statusOn branch masterChanges to be committed:  (use "git reset HEAD <file>..." to unstage)        deleted:    hello.pyUntracked files:  (use "git add <file>..." to include in what will be committed)        hello.py</code></pre><p>可以看到，我们在暂存区移除了该文件，现在，我们将工作区的文件也移除掉。</p><pre class=" language-Shell"><code class="language-Shell">$ rm hello.pyrm 'hello.py'$ lshello.c  hello.html  hello.java</code></pre><p>至此，基本命令到此结束。</p><h2 id="Git查看提交历史"><a href="#Git查看提交历史" class="headerlink" title="Git查看提交历史"></a>Git查看提交历史</h2><h3 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h3><p>在使用 Git 提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，我们可以使用 <code>git log</code> 命令查看。</p><pre class=" language-Shell"><code class="language-Shell">$ git logcommit ac81931794f4e232398796f5d4e09be155fc5bc2 (master)Author: ProgramerHui <1712817197@qq.com>Date:   Fri Dec 28 19:17:51 2018 +0800    第一次提交</code></pre><h3 id="git-log-–oneline"><a href="#git-log-–oneline" class="headerlink" title="git log –oneline"></a>git log –oneline</h3><p><code>git log --oneline</code> 命令用来查看历史记录的简洁的版本。</p><pre class=" language-Shell"><code class="language-Shell">$ git log --onelineac81931 (master) 第一次提交</code></pre><h3 id="git-log-–graph"><a href="#git-log-–graph" class="headerlink" title="git log –graph"></a>git log –graph</h3><p><code>git log --graph</code> 命令，用于查看历史中什么时候出现了分支、合并。以下为相同的命令，开启了拓扑图选项：</p><pre class=" language-Shell"><code class="language-Shell">$ git log --graph* commit ac81931794f4e232398796f5d4e09be155fc5bc2 (master)  Author: ProgramerHui <1712817197@qq.com>  Date:   Fri Dec 28 19:17:51 2018 +0800      第一次提交</code></pre><h3 id="git-log-–author"><a href="#git-log-–author" class="headerlink" title="git log –author"></a>git log –author</h3><p><code>git log --author</code>命令用于查看指定用户的提交日志。<br>示例如下：</p><pre class=" language-Shell"><code class="language-Shell">$ git log --author=ProgramerHuicommit ac81931794f4e232398796f5d4e09be155fc5bc2 (master)Author: ProgramerHui <1712817197@qq.com>Date:   Fri Dec 28 19:17:51 2018 +0800    第一次提交</code></pre><h2 id="Git版本回退"><a href="#Git版本回退" class="headerlink" title="Git版本回退"></a>Git版本回退</h2><p>早在前面就说过<a href="#Git可以用来干嘛？">Git能干什么</a>的特性.<br>你可以理解为Git就是一个时空穿梭机，能够回退版本和前进版本。</p><p>现在，我们来修改一下<code>readme.txt</code>的内容。</p><pre class=" language-Shell"><code class="language-Shell">$ cat readme.txthello,Git$ echo "HuiProgramer is handsome!" >> readme.txt$ cat readme.txtHuiProgramer is handsome!</code></pre><p><strong>扩展：</strong><code>echo &quot; &quot; &gt;&gt; file</code>是一个批处理命令，用于清空文件内容后，将” “里的内容写入到文件中。<br>我们尝试提交一下</p><pre class=" language-Shell"><code class="language-Shell">$ git add readme.txt$ git commit -m"handsome"[master dd18d87] handsome 1 file changed, 1 insertion(+) create mode 100644 readme.txt</code></pre><p>我们现在来回忆一下我们一共提交了哪几个版本的<code>readme.txt</code>文件。<br>版本一：</p><blockquote><p>hello,Git</p></blockquote><p>版本二：</p><blockquote><p>HuiProgramer is handsome</p></blockquote><p>记不住也没事，我们可以通过<code>git log</code>命令来查看：</p><pre class=" language-Shell"><code class="language-Shell">$ git logcommit dd18d87073e5d9a593dbfe3a89072e9f785431ad (HEAD -> master)Author: ProgramerHui <1712817197@qq.com>Date:   Sun Jan 6 12:07:01 2019 +0800    handsomecommit ac81931794f4e232398796f5d4e09be155fc5bc2Author: ProgramerHui <1712817197@qq.com>Date:   Fri Dec 28 19:17:51 2018 +0800    wrote a readme file</code></pre><p>可以看到第一次提交就是开始介绍<a href="#把文件添加到版本库">GIt仓库</a>时写的<code>readme.txt</code>,里面的内容是<code>hello,Git</code>.<br>而最近一次提交就是我们重新修改了<code>readme.txt</code>后提交的，里面的内容是<code>HuiProgramer is handsome</code>(表脸).</p><p>那么，如果我想要回到上一个版本该怎么办呢？<br>其实很简单只需要执行<code>git reset --hard HEAD^</code>就行了，其中<code>^</code>代表上一个版本，<code>^^</code>代表上上个版本，以此类推。</p><pre class=" language-Shell"><code class="language-Shell">$ git reset --hard HEAD^HEAD is now at ac81931 wrote a readme file</code></pre><p>Look，我们已经回到了上一个版本了，现在我们打开<code>readme.txt</code>文件看看。</p><blockquote><p>hello,Git</p></blockquote><p>哇，果然是这样，但我又如何回去呢？就像我们现在坐着时空穿梭机回到了过去，应该怎么回到现在呢？<br>其实很简单，我们可以通过上次执行<code>git log</code>命令拿到的<code>commit</code>后面的版本号再次穿梭就可以回来了。</p><pre class=" language-Shell"><code class="language-Shell">$ git reset --hard dd18HEAD is now at dd18d87 handsome</code></pre><p><strong>注意：</strong>版本号没必要写全，前几位就可以了，Git会自动去找。当然也不能只写前一两位，因为Git可能会找到多个版本号，就无法确定是哪一个了。<br>再次查看<code>readme.txt</code>的内容</p><blockquote><p>HuiProgramer is handsome</p></blockquote><p>嗯，不错，内容全回来了，还是一如既往的表脸。</p><p><strong>扩展：</strong>假如我关闭了<code>git bash</code>这个终端，然后又回退了版本，输入<code>git log</code>又不显示，该怎么办呢？其实很简单，你只要输入<code>git reflog</code>命令就能再次看到你的提交记录了。</p><pre class=" language-Shell"><code class="language-Shell">$ git reflogdd18d87 (HEAD -> master) HEAD@{0}: reset: moving to dd18ac81931 HEAD@{1}: reset: moving to HEAD^dd18d87 (HEAD -> master) HEAD@{2}: commit: handsomeac81931 HEAD@{3}: checkout: moving from Python to masteraf26cd8 (Python) HEAD@{4}: checkout: moving from master to Pythonac81931 HEAD@{5}: checkout: moving from Python to masteraf26cd8 (Python) HEAD@{6}: commit: test branchac81931 HEAD@{7}: checkout: moving from master to Pythonac81931 HEAD@{8}: checkout: moving from Python to masterac81931 HEAD@{9}: checkout: moving from master to Pythonac81931 HEAD@{10}: checkout: moving from Python to masterac81931 HEAD@{11}: checkout: moving from master to Pythonac81931 HEAD@{12}: checkout: moving from Python to masterac81931 HEAD@{13}: checkout: moving from master to Pythonac81931 HEAD@{14}: reset: moving to HEADac81931 HEAD@{15}: reset: moving to HEADac81931 HEAD@{16}: reset: moving to HEAD^5a56f73 HEAD@{17}: commit: hello worldac81931 HEAD@{18}: commit (initial): wrote a readme file</code></pre><h2 id="Git与Github"><a href="#Git与Github" class="headerlink" title="Git与Github"></a>Git与Github</h2><h3 id="什么是Github"><a href="#什么是Github" class="headerlink" title="什么是Github"></a>什么是Github</h3><p><a href="https://github.com" target="_blank" rel="noopener">GitHub</a>是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。<br>简单来说就是一个网上的仓库，而Git就是本地的仓库。</p><h3 id="拥有自己的Github"><a href="#拥有自己的Github" class="headerlink" title="拥有自己的Github"></a>拥有自己的Github</h3><h4 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h4><p>点击<a href="https://github.com" target="_blank">这里</a>进行注册。<br><img src="http://wx1.sinaimg.cn/large/006MOU0zgy1g0pkh2cds2j31gm0ijac9.jpg" alt="注册页面"><br>注册完成后，登录…</p><h4 id="创建自己的项目（仓库-版本库）"><a href="#创建自己的项目（仓库-版本库）" class="headerlink" title="创建自己的项目（仓库/版本库）"></a>创建自己的项目（仓库/版本库）</h4><p>点击+号进行创建<br><img src="http://wx1.sinaimg.cn/large/006MOU0zgy1g0pkh5ptd4j31hc0q10xb.jpg" alt="新建仓库"><br>填写项目名字，点击完成即可。<br><img src="http://wx4.sinaimg.cn/large/006MOU0zgy1g0pkh714waj31hc0q1409.jpg" alt="项目名字"><br>完成后，会得到项目的提交地址。<br><img src="http://wx1.sinaimg.cn/large/006MOU0zgy1g0pkh7ffqij30sb0k1t9x.jpg" alt="SSH"></p><h3 id="创建SSH-Key"><a href="#创建SSH-Key" class="headerlink" title="创建SSH Key"></a>创建SSH Key</h3><p>打开<code>Git Bash</code>终端，输入：</p><pre class=" language-Shell"><code class="language-Shell">$ ssh-keygen -t rsa -C "youremail@example.com"</code></pre><p>你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个<code>Key</code>也不是用于军事目的，所以也无需设置密码。</p><p>如果一切顺利的话，可以在用户主目录里找到<code>.ssh</code>目录，里面有<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件，这两个就是<code>SSH Key</code>的秘钥对，<code>id_rsa</code>是私钥，不能泄露出去，<code>id_rsa.pub</code>是公钥，可以放心地告诉任何人。</p><h3 id="绑定SSH-Key"><a href="#绑定SSH-Key" class="headerlink" title="绑定SSH Key"></a>绑定SSH Key</h3><p>进入<a href="https://github.com" target="_blank" rel="noopener">Github</a>,点击头像，点击<code>Settings</code>。<br><img src="http://wx1.sinaimg.cn/large/006MOU0zgy1g0pkh2nlutj31hc0q10vb.jpg" alt="设置"><br>点击<code>SSH and GPG Keys</code><br><img src="http://wx1.sinaimg.cn/large/006MOU0zgy1g0pkh9w2b0j31hc0q1djr.jpg" alt="SSHKeys"><br>点击<code>New SSH key</code><br><img src="http://wx1.sinaimg.cn/large/006MOU0zgy1g0pkh664nrj30s702tdfs.jpg" alt="NewSSH"><br>可以看到此页面<br><img src="http://wx2.sinaimg.cn/large/006MOU0zgy1g0pkh0n4ftj30uh0ceaao.jpg" alt="ADDNEW"><br><code>Title</code>可以随便取一个，<code>Key</code>可以去<code>C:\Users\Administrator\.ssh</code>下找到一个<code>id_rsa.pub</code>的文件，双击打开后复制里面的全部内容粘贴到<code>Key</code>下的框框里，然后点击<code>Add SSH Key</code>.</p><p>创建完成后就能看到这样的页面…<br><img src="http://wx2.sinaimg.cn/large/006MOU0zgy1g0pkh9htwwj30sn07qjrr.jpg" alt></p><h2 id="提交项目到Github"><a href="#提交项目到Github" class="headerlink" title="提交项目到Github"></a>提交项目到Github</h2><h3 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h3><p>通过<code>git remote add origin git@github.com:YourName/RepositoryName.git</code>即可建立一个与当前分支关联的提交名字。</p><pre class=" language-Shell"><code class="language-Shell">$ git remote add Golang git@github.com:HuiProgramer/Golang_Learning.git</code></pre><p><strong>解析：</strong><code>YourName</code>为你的<a href="https://github.com" target="_blank" rel="noopener">Github</a>账户名,<code>RepositoryName</code>为你创建的项目名。<br><strong>注意：</strong>这里的<code>origin</code>可以任你更改，前提你得记住，后面提交要用到。</p><h3 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h3><p>通过<code>git push -u origin master</code>命令可将本地项目推送到Github的仓库中。</p><pre><code>$ git push -u Golang masterCounting objects: 9, done.Delta compression using up to 2 threads.Compressing objects: 100% (6/6), done.Writing objects: 100% (9/9), 916 bytes | 152.00 KiB/s, done.Total 9 (delta 1), reused 0 (delta 0)remote: Resolving deltas: 100% (1/1), done.To github.com:HuiProgramer/Golang_Learning.git * [new branch]      master -&gt; masterBranch &#39;master&#39; set up to track remote branch &#39;master&#39; from &#39;Golang&#39;.</code></pre><p>Look,我们已经成功提交本地版本库到网上仓库了。</p><p>由于远程库是空的，我们第一次推送<code>master</code>分支时，加上了<code>-u</code>参数，<code>Git</code>不但会把本地的<code>master</code>分支内容推送的远程新的<code>master</code>分支，还会把本地的<code>master</code>分支和远程的<code>master</code>分支关联起来，在以后的推送或者拉取时就可以简化命令。</p><p>现在，我们打开我们的远程仓库看看，是否提交成功。<br><img src="http://wx2.sinaimg.cn/large/006MOU0zgy1g0pkh3cajfj30xk0ipgmr.jpg" alt="Golang"><br>嗯，不错，<a href="https://github.com/HuiProgramer/Golang_Learning" target="_blank" rel="noopener">成功了</a>，以后就这样提交。</p><h3 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h3><p>通过<code>git pull origin master</code>可将网上仓库拉取到本地来完成同步。</p><pre class=" language-Shell"><code class="language-Shell">$ git pull Golang masterFrom github.com:HuiProgramer/Golang_Learning * branch            master     -> FETCH_HEADAlready up to date.</code></pre><p>现在就会看到，本地项目和网上仓库一模一样了。</p><h2 id="Git分支管理"><a href="#Git分支管理" class="headerlink" title="Git分支管理"></a>Git分支管理</h2><p>几乎每一种版本控制系统都以某种形式支持分支。使用分支意味着你可以从开发主线上分离开来，然后在不影响主线的同时继续工作。<br>有人把 Git 的分支模型称为”必杀技特性”，而正是因为它，将 Git 从版本控制系统家族里区分出来。</p><h3 id="分支的创建和切换"><a href="#分支的创建和切换" class="headerlink" title="分支的创建和切换"></a>分支的创建和切换</h3><p>创建分支命令：</p><pre class=" language-Shell"><code class="language-Shell">$ git branch (branchname)</code></pre><p>切换分支命令：</p><pre class=" language-Shell"><code class="language-Shell">git checkout (branchname)</code></pre><p>例如：</p><pre class=" language-Shell"><code class="language-Shell">$ git branch Python$ git checkout PythonSwitched to branch 'Python'D       hello.py</code></pre><p><strong>扩展：</strong><code>git checkout -b (branchname)</code>命令可以创建并切换新分支，从而实现在该分支中的操作。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 版本控制系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="/markdown-ji-ben-yu-fa.html"/>
      <url>/markdown-ji-ben-yu-fa.html</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><h2 id="Markdown介绍"><a href="#Markdown介绍" class="headerlink" title="Markdown介绍"></a>Markdown介绍</h2><p>Markdown是一种轻量级的标记语言，使用普通的文本编辑器，通过简单的标记语法，就可以实现漂亮的排版，被越来越多的写作爱好者、程序员所使用。Markdown自成格式，不依赖任何编辑器，且易于传播，其语法十分简单，通过几分钟的简单学习，就可以实现基本的排版，然后专注于码字。</p><h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><p>Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。世界上最流行的博客平台WordPress和大型CMS如Joomla、Drupal都能很好的支持Markdown。完全采用Markdown编辑器的博客平台有Ghost和Typecho。<br>用于编写说明文档，并且以“README.MD”的文件名保存在软件的目录下面。<br>除此之外，由于我们有了RStudio这样的神级编辑器，我们还可以快速将Markdown转化为演讲PPT、Word产品文档、LaTex论文甚至是用非常少量的代码完成最小可用原型。在数据科学领域，Markdown已经广泛使用，极大地推进了动态可重复性研究的历史进程。 </p><h2 id="常用语法"><a href="#常用语法" class="headerlink" title="常用语法"></a>常用语法</h2><h3 id="常用语法表格"><a href="#常用语法表格" class="headerlink" title="常用语法表格"></a>常用语法表格</h3><table><thead><tr><th style="text-align:center">输出后的效果</th><th style="text-align:center">Markdown</th><th style="text-align:center">快捷键</th></tr></thead><tbody><tr><td style="text-align:center">加粗</td><td style="text-align:center">**text**</td><td style="text-align:center">Ctrl+B</td></tr><tr><td style="text-align:center">斜体</td><td style="text-align:center">*text*</td><td style="text-align:center">Ctrl+I</td></tr><tr><td style="text-align:center">链接</td><td style="text-align:center">[title](http://)</td><td style="text-align:center">Ctrl+L</td></tr><tr><td style="text-align:center">代码块</td><td style="text-align:center">`code`</td><td style="text-align:center">Ctrl+k</td></tr><tr><td style="text-align:center">图片</td><td style="text-align:center">![alt](http://)</td><td style="text-align:center">Ctrl+G</td></tr><tr><td style="text-align:center">有序列表</td><td style="text-align:center">1. item</td><td style="text-align:center">Ctrl+Shift+O</td></tr><tr><td style="text-align:center">无序列表</td><td style="text-align:center">* item</td><td style="text-align:center">Ctrl+U</td></tr><tr><td style="text-align:center">块级引用</td><td style="text-align:center">> quote</td><td style="text-align:center">Ctrl+Q</td></tr><tr><td style="text-align:center">一级标题</td><td style="text-align:center"># Heading</td><td style="text-align:center">Ctrl+1</td></tr><tr><td style="text-align:center">二级标题</td><td style="text-align:center">## Heading</td><td style="text-align:center">Ctrl+2</td></tr></tbody></table><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。<br><strong>注意：每个#后面必须跟一个空格</strong><br>示例：</p><pre class=" language-Markdown"><code class="language-Markdown">#### 这是四级标题##### 这是五级标题###### 这是六级标题</code></pre><p>效果如下：</p><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><ul><li><strong>加粗</strong><br>要加粗的字体左右分别用两个*号包起来</li><li><em>斜体</em><br>要倾斜的文字左右分别用一个*号包起来</li><li><strong><em>斜体加粗</em></strong><br>要倾斜和加粗的文字左右分别用三个*号包起来</li><li><del>删除线</del><br>要加删除线的文字左右分别用两个~~号包起来</li></ul><p>代码示例:</p><pre class=" language-Markdown"><code class="language-Markdown">**这是加粗的文字***这是倾斜的文字****这是斜体加粗的文字***~~这是加删除线的文字~~</code></pre><h3 id="有序无序列表"><a href="#有序无序列表" class="headerlink" title="有序无序列表"></a>有序无序列表</h3><ul><li><strong>有序列表</strong><br>通过数字1234567…后面加一个.和空格实现。</li><li><strong>无序列表</strong><br>通过*,-,+其中之一加一个空格来实现无序列表。</li></ul><p>代码示例：</p><pre class=" language-Markdown"><code class="language-Markdown">1. 我是有序列表* 我是由*号生成无序列表* 我是由*号生成无序列表* 我是由*号生成无序列表2. 我是有序列表- 我是由-号生成无序列表- 我是由-号生成无序列表- 我是由-号生成无序列表3. 我是有序列表+ 我是由+号生成无序列表+ 我是由+号生成无序列表+ 我是由+号生成无序列表</code></pre><p>效果如下：</p><ol><li>我是有序列表<ul><li>我是由*号生成无序列表</li><li>我是由*号生成无序列表</li><li>我是由*号生成无序列表</li></ul></li><li>我是有序列表<ul><li>我是由-号生成无序列表</li><li>我是由-号生成无序列表</li><li>我是由-号生成无序列表</li></ul></li><li>我是有序列表<ul><li>我是由+号生成无序列表</li><li>我是由+号生成无序列表</li><li>我是由+号生成无序列表</li></ul></li></ol><h3 id="块级引用"><a href="#块级引用" class="headerlink" title="块级引用"></a>块级引用</h3><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…<br>示例：</p><pre class=" language-Markdown"><code class="language-Markdown">>这是引用的内容>>这是引用的内容>>>这是引用的内容</code></pre><p>效果如下：</p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><h4 id="单行代码块"><a href="#单行代码块" class="headerlink" title="单行代码块"></a>单行代码块</h4><p>通过`code`来展示单行代码块内容<br>示例：</p><blockquote><p>`I’m single code.`</p></blockquote><p>效果如下：<br><code>I&#39;m single code.</code></p><h4 id="多行代码块"><a href="#多行代码块" class="headerlink" title="多行代码块"></a>多行代码块</h4><p>通过```code```来展示多行代码块内容<br>示例：</p><blockquote><p>```Python(指定语言)<br>def example():<br>&emsp;&emsp;for i in range(10):<br>&emsp;&emsp;&emsp;&emsp;print(“hello”)<br>```</p></blockquote><p>效果如下：</p><pre class=" language-Python"><code class="language-Python">def example():    for i in range(10):        print("hello")</code></pre><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p><strong>语法：</strong><br>![图片alt](图片地址 ‘’图片title’’)</p><p>图片alt就是显示在图片下面的文字，相当于对图片内容的解释。<br>图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加<br>示例：</p><pre class=" language-Markdown"><code class="language-Markdown">![头像](https://www.52share.online/images/avatar.jpg "头像icon")</code></pre><p>效果如下：<br><img src="https://www.52share.online/images/avatar.jpg" alt="头像" title="头像icon"></p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><strong>语法：</strong><br>[超链接名](超链接地址 “超链接title”)<br>title可加可不加<br>示例：</p><pre class=" language-Markdown"><code class="language-Markdown">[baidu](http://baidu.com)[博客](https://huiprogramer.github.io)</code></pre><p>效果如下：<br><a href="http://baidu.com" target="_blank" rel="noopener">baidu</a><br><a href="https://huiprogramer.github.io" target="_blank" rel="noopener">博客</a></p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p><strong>语法：</strong></p><pre class=" language-Markdown"><code class="language-Markdown">:---:|:---:|文字居中显示:---|:---文字靠左显示---:|---:文字靠右显示</code></pre><p><strong>示例：</strong></p><pre class=" language-Markdown"><code class="language-Markdown">示例1：表格文字居中|表格文字居中|表格文字居中:---:|:---:|:---:文字居中|文字居中|文字居中文字居中|文字居中|文字居中示例2：表格文字靠左|表格文字靠左|表格文字靠左:---|:---|:---文字靠左|文字靠左|文字靠左文字靠左|文字靠左|文字靠左示例3：表格文字靠右|表格文字靠右|表格文字靠右---:|---:|---:文字靠右|文字靠右|文字靠右文字靠右|文字靠右|文字靠右</code></pre><h4 id="示例1："><a href="#示例1：" class="headerlink" title="示例1："></a>示例1：</h4><table><thead><tr><th style="text-align:center">表格文字居中</th><th style="text-align:center">表格文字居中</th><th style="text-align:center">表格文字居中</th></tr></thead><tbody><tr><td style="text-align:center">文字居中</td><td style="text-align:center">文字居中</td><td style="text-align:center">文字居中</td></tr><tr><td style="text-align:center">文字居中</td><td style="text-align:center">文字居中</td><td style="text-align:center">文字居中</td></tr></tbody></table><h4 id="示例2："><a href="#示例2：" class="headerlink" title="示例2："></a>示例2：</h4><table><thead><tr><th style="text-align:left">表格文字靠左</th><th style="text-align:left">表格文字靠左</th><th style="text-align:left">表格文字靠左</th></tr></thead><tbody><tr><td style="text-align:left">文字靠左</td><td style="text-align:left">文字靠左</td><td style="text-align:left">文字靠左</td></tr><tr><td style="text-align:left">文字靠左</td><td style="text-align:left">文字靠左</td><td style="text-align:left">文字靠左</td></tr></tbody></table><h4 id="示例3："><a href="#示例3：" class="headerlink" title="示例3："></a>示例3：</h4><table><thead><tr><th style="text-align:right">表格文字靠右</th><th style="text-align:right">表格文字靠右</th><th style="text-align:right">表格文字靠右</th></tr></thead><tbody><tr><td style="text-align:right">文字靠右</td><td style="text-align:right">文字靠右</td><td style="text-align:right">文字靠右</td></tr><tr><td style="text-align:right">文字靠右</td><td style="text-align:right">文字靠右</td><td style="text-align:right">文字靠右</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>长难句分析（特殊结构的长难句）</title>
      <link href="/chang-nan-ju-fen-xi-te-shu-jie-gou-de-chang-nan-ju.html"/>
      <url>/chang-nan-ju-fen-xi-te-shu-jie-gou-de-chang-nan-ju.html</url>
      
        <content type="html"><![CDATA[<h1 id="二、特殊结构的长难句"><a href="#二、特殊结构的长难句" class="headerlink" title="二、特殊结构的长难句"></a>二、特殊结构的长难句</h1><ol><li>分裂结构<br></li><li>嵌套结构<br></li><li>平行结构<br><br></li></ol><h2 id="特殊结构的长难句：分裂结构"><a href="#特殊结构的长难句：分裂结构" class="headerlink" title="特殊结构的长难句：分裂结构"></a>特殊结构的长难句：分裂结构</h2><p>There is growing fear among vice-chancellors that this revenue——as well as the cultural, academic and economic benefit international students bring——is being put at risk.<br><br>(CET-4, 201312 仔细阅读2)<br><br><br><br>There is growing fear among vice-chancellors that this revenue is being put at risk.<br><br>(CET-4, 201312 仔细阅读2)<br></p><h2 id="特殊结构的长难句：嵌套结构"><a href="#特殊结构的长难句：嵌套结构" class="headerlink" title="特殊结构的长难句：嵌套结构"></a>特殊结构的长难句：嵌套结构</h2><p>Among the government’s most interesting reports is one that estimates what parents spend on their children.<br><br>(CET-6, 201312 仔细阅读 1)<br><br><br><br>A survey of 439 medical technicians found that 55 percent of technicians who monitor bypass machines acknowledged that they had talked on cellphones during heart surgery.<br><br>(CET-4,201406 仔细阅读 1)<br><br><br></p><p><div style="width:840px;height:100px;padding:10px;border:1px solid">A sunrvey … found &emsp;&emsp;&emsp;&emsp;宾语从句 &emsp;&emsp;&emsp;&emsp; &emsp;&emsp;&emsp;&emsp; &emsp;&emsp;定语从句&emsp;&emsp;&emsp;&emsp; &emsp;&emsp;&emsp;&emsp; &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;定语从句</div></p><p><div style="width:700px;height:70px;border:1px solid;margin:0px 40px 20px 150px; ">that 55 percent of  technicians<span style="width:240px;height:50px;display:inline-block;border:1px solid">who monitor bypass machines</span>acknowledged<span style="width:115px;height:50px;display:inline-block;border:1px solid">that they had..</span><br></div><br><br><br></p><h2 id="特殊结构的长难句：平行结构"><a href="#特殊结构的长难句：平行结构" class="headerlink" title="特殊结构的长难句：平行结构"></a>特殊结构的长难句：平行结构</h2><p>The English, the Germans, the Dutch and the French were investing in Britain’s former colony.<br><br><br><br><span style="width:200px;display:inline-block;height:320px;border-left:4px solid red"><br>The English<br><br><br>,the Germans<br><br><br>,the Dutch<br><br><br>and the French<br></span><span style="text-align:center;width:200px;height:320px;display:inline-block">were investing in Britain’s former colony.<br><br><br><br></span><br>Both areas are critical to producing citizens who can participate effectively in our democratic society, become innovative leaders, and benefit from the spiritual enrichment that teh reflection on the great ideas of mankind over time provides.<br><br>(CET-4, 201406 仔细阅读 1)<br><br><br><br>Several hours after a meal, people’s hunger levels were predicted not by how much they’d eaten but rather by how much food they’d seen in front of them…<br><br>(CET-4, 201312 仔细阅读 1)<br><br><br><br>But brains are the superior choice when you want information to change, in interesting and useful ways: to connect up with other facts and ideas, to acquire successive layers of meaning, to steep for a while in your accumulated knowledge and experience…<br><br>(CET-6, 201406 仔细阅读 1)<br><br><br></p><p></p><h3>长难句综合运用</h3><br>indeed, according to surveys, employers have expressed a preference for students who have received a broadly-based education that has taught them to write well, think critically, research creatively and communicate easily.<br><br>(CET-4, 201406 仔细阅读 1)<br><br><br><br>Cole and Fredrickson found that people who are happy but have little to no sense of meaning in their lives have the same gene expression patterns as people who are responding to and enduring chronic adversity.<br><br>(CET-6, 201412 长篇阅读)<p></p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>长难句分析（基本结构的长难句）</title>
      <link href="/chang-nan-ju-fen-xi-ji-ben-jie-gou-de-chang-nan-ju.html"/>
      <url>/chang-nan-ju-fen-xi-ji-ben-jie-gou-de-chang-nan-ju.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、基本结构的长难句"><a href="#一、基本结构的长难句" class="headerlink" title="一、基本结构的长难句"></a>一、基本结构的长难句</h1><ol><li>断开</li><li>简化</li></ol><p>基本结构的长难句<br></p><p><span style="display:inline-block;width:140px;height:100px;margin:5px;border:1px solid">&emsp;长难句<br>&emsp;多个句子/多件事</span><span style="display:inline-block;width:140px;height:100px;margin:5px;border:1px solid">&emsp;简单句<br>&emsp;一个句子/一件</span><span style="display:inline-block;width:140px;height:100px;margin:5px;border:1px solid">&emsp;简单句的核心<br>&nbsp;一件事的核心内容</span><br><br><span style="text-align:center;width:200px;height:100px;display:inline-block">断开<br>1 标点<br>&emsp;2 连接词<br>&emsp;&emsp;3 分析主谓</span><span style="text-align:center;width:200px;height:100px;display:inline-block">简化<br>1 定位谓语动词<br>2 去修饰找核心<br><br></span><br><br>基本结构的长难句：<br><span style="width:400px;height:100px;display:inline-block">1. 断开<br>（1）标点<br>（2）连接词：从句开始于连接词，结束于？<br>（3）分析主谓</span><span style="width:200px;height:90px;display:inline-block;border:1px solid">&emsp;1) 标点<br>&emsp;2) 下一个连接词前<br>&emsp;3) 第二个谓语动词前</span><br><br><br><b>连接词断开，结束于标点</b><br><br>But this is a real-life argument before a Superme Court that has a well-earned reputation for looking out for the interests of large corporations.<br><br>(CET-6,201312 仔细阅读 2)<br><br><br><br>If it has to hire a caregiver for every two children,it can’t really achieve any economics of scale on labor to save money when other expenses go up.<br><br>(CET-4,201412 仔细阅读 1)<br><br><br><br>More than half of all recent graduates are unemployed or in jobs that do not require a degree, and the amount of student-loan debt carried by households has increased more than five times since 1999.<br><br>(CET-4,201312 长篇阅读)<br><br><br><br>Imagine the number of teaching jobs that might be eliminated if this could be done for math,economics,chemistry,and so on.<br><br>(CET-6,201406 长篇阅读)<br><br><br><br>Although it has been nearly 30 years since the first commercial mobile-phone network was launched, advertisers have yet to figure out how to get their messages out to mobile-phone users in a big way.<br><br>(CET-4,201312 选词填空)<br><br><br><br><b>连接词断开，结束于第二个谓语动词前</b><br><br>Those who stay on for an additional two years can earn a master’s degree that qualifies them as nurse practitioners or clinical nurse spercialists.<br><br>(CET-4,201312 选词填空)<br><br><br><br>People who score on personality tests as more sympathetic cry more than those who are more rigid or have more self-control.<br><br>(CET-4,201406 长篇阅读)<br><br><br><br>Though the United States has fewer women in the workforce, American women who choose to be employed are far more likely to work full-time and to hold high-level jobs as managers or professionals.<br><br>(CET-6,201406 长篇阅读)<br><br><br><br><b>断开：分析主谓</b><br><br>This is the best movie I have seen.<br><br>The present he gave me was very amazing.<br><br>Some scientists maintain that the changes we are seeing fall within the range of random variation…<br><br>(CET-4,201406 选词填空)<br><br><br><br>Some scientists maintain that<br><br>the changes we are seeing fall within the range of random variation…<br><br>(CET-4,201406 选词填空)<br><br><br><br>When these students encounter a new problem of the same type on a test, they’re able to transfer the knowledge they’ve gathered more effectively than those who were the passive recipients of someone else’s expertise.<br><br>(CET-6,201312 仔细阅读 1)<br><br><br></p><h1 id="二、简化：去修饰，留核心"><a href="#二、简化：去修饰，留核心" class="headerlink" title="二、简化：去修饰，留核心"></a>二、简化：去修饰，留核心</h1><p>修饰成分有：<br><br>形容词、副词<br><br>介词短语<br><br>非谓语动词(doing/done/to do)<br><br>冠词、数词<br><br>非限定性定语从句<br><br><br><br>Over the past few months it has been working hard, with the help of media consultants, to play down its cosy reputation in favour of something more academic and serious<br><br>(CET-6,201412 仔细阅读 2)<br><br><br><br>Printing with moveable type on paper dramatically reduced the cost  of producing a book compared with the old-fashioned ones handwritten on vellum, which comes from sheepskin.<br><br>(CET-4,201406 长篇阅读)<br><br><br><br>A generation ago, female faces were rare and, even today, visitors walking through the first floor of LeConte Hall will see a full corridor of exhibits honoring the many distinguished physicists who made history here,virtually all of them white males.<br><br>(CET-4,201312 选词填空) <br><br><br></p><h3 id="基本结构的长难句：断开-简化"><a href="#基本结构的长难句：断开-简化" class="headerlink" title="基本结构的长难句：断开 + 简化"></a>基本结构的长难句：断开 + 简化</h3><p>The same dramatic technological changes that have provided marketers with more communications choices have also increased the risk that passionate consumers will voice their opinions in quicker, more visible, and much more damaging ways.<br><br><br>The same dramatic technological changes <strong>1</strong> have also increased the risk <strong>2</strong>.<br></p><ol><li>that have provided marketers with more communications choices.<br></li><li>that passionate consumers will voice their opinions in quicker, more visible, and much more damaging ways.<br><br><br></li></ol>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>特殊用途的句子(虚拟句)</title>
      <link href="/te-shu-yong-tu-de-ju-zi-xu-ni-ju.html"/>
      <url>/te-shu-yong-tu-de-ju-zi-xu-ni-ju.html</url>
      
        <content type="html"><![CDATA[<h1 id="第三章-虚拟"><a href="#第三章-虚拟" class="headerlink" title="第三章 虚拟"></a>第三章 虚拟</h1><h4 id="1-什么是虚拟？"><a href="#1-什么是虚拟？" class="headerlink" title="1. 什么是虚拟？"></a>1. 什么是虚拟？</h4><h4 id="2-怎么表示虚拟？"><a href="#2-怎么表示虚拟？" class="headerlink" title="2. 怎么表示虚拟？"></a>2. 怎么表示虚拟？</h4><h4 id="3-虚拟常用于？"><a href="#3-虚拟常用于？" class="headerlink" title="3. 虚拟常用于？"></a>3. 虚拟常用于？</h4><h2 id="1-If-虚拟条件句（虚拟语气）"><a href="#1-If-虚拟条件句（虚拟语气）" class="headerlink" title="1. If 虚拟条件句（虚拟语气）"></a>1. If 虚拟条件句（虚拟语气）</h2><h3 id="emsp-（1）虚拟条件句（假设现在）"><a href="#emsp-（1）虚拟条件句（假设现在）" class="headerlink" title="&emsp;（1）虚拟条件句（假设现在）"></a>&emsp;（1）虚拟条件句（假设现在）</h3><table><thead><tr><th style="text-align:center">&emsp;</th><th style="text-align:center">If 从句</th><th style="text-align:center">主句</th></tr></thead><tbody><tr><td style="text-align:center">假设过去</td><td style="text-align:center">&emsp;</td><td style="text-align:center">would</td></tr><tr><td style="text-align:center">假设现在</td><td style="text-align:center">did(were)</td><td style="text-align:center">could/should&emsp;&emsp; + do</td></tr><tr><td style="text-align:center">假设将来</td><td style="text-align:center">&emsp;</td><td style="text-align:center">might</td></tr></tbody></table><p>If I were you, I would do it now.<br><br></p><h4 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h4><p>I am not you, so I can’t make the decision.<br><br>I don’t know his phone number, so I won’t ring him up.<br><br>He isn’t free at the moment, so he won’t go to the cinema.<br><br></p><h4 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h4><p>If I could rearrange the alphabet, I would put U and I together.<br><br></p><h3 id="emsp-（2）虚拟条件句（假设过去）"><a href="#emsp-（2）虚拟条件句（假设过去）" class="headerlink" title="&emsp;（2）虚拟条件句（假设过去）"></a>&emsp;（2）虚拟条件句（假设过去）</h3><table><thead><tr><th style="text-align:center">&emsp;</th><th style="text-align:center">If 从句</th><th style="text-align:center">主句</th></tr></thead><tbody><tr><td style="text-align:center">假设过去</td><td style="text-align:center">had done</td><td style="text-align:center">would + have done</td></tr><tr><td style="text-align:center">假设现在</td><td style="text-align:center">&emsp;</td><td style="text-align:center">could/should</td></tr><tr><td style="text-align:center">假设将来</td><td style="text-align:center">&emsp;</td><td style="text-align:center">might</td></tr></tbody></table><p>If they <ins>had won</ins> the match, they <ins>would</ins> have held a party to celebrate.<br><br></p><h4 id="练习：-1"><a href="#练习：-1" class="headerlink" title="练习："></a>练习：</h4><p>He was not a student, so he couldn’t attend the lecture.<br><br>He didn’t tell her the answer. She didn’t understand it.<br><br>You were late, so you didn’t hear what he told us.<br><br></p><h3 id="emsp-（3）虚拟语气（假设将来）"><a href="#emsp-（3）虚拟语气（假设将来）" class="headerlink" title="&emsp; （3）虚拟语气（假设将来）"></a>&emsp; （3）虚拟语气（假设将来）</h3><table><thead><tr><th style="text-align:center">&emsp;</th><th style="text-align:center">If 从句</th><th style="text-align:center">主句</th></tr></thead><tbody><tr><td style="text-align:center">假设过去</td><td style="text-align:center">&emsp;</td><td style="text-align:center">would</td></tr><tr><td style="text-align:center">假设现在</td><td style="text-align:center">&emsp;</td><td style="text-align:center">could/should</td></tr><tr><td style="text-align:center">假设将来</td><td style="text-align:center">did(were)<br>were to do<br>should do</td><td style="text-align:center">might + do</td></tr></tbody></table><p>If I were to live my life over again, I would have you as my life.<br><br></p><h4 id="练习：-2"><a href="#练习：-2" class="headerlink" title="练习："></a>练习：</h4><p>如果我明天有时间，我就会帮他。（明天不太可能有时间）<br><br>If I had time tomorrow（were to have/should have）,I would help him.<br><br></p><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><table><thead><tr><th style="text-align:center">&emsp;</th><th style="text-align:center">If 从句</th><th style="text-align:center">主句</th></tr></thead><tbody><tr><td style="text-align:center">假设过去</td><td style="text-align:center">had done</td><td style="text-align:center">would + have done</td></tr><tr><td style="text-align:center">假设现在</td><td style="text-align:center">did(were)</td><td style="text-align:center">could/should + do</td></tr><tr><td style="text-align:center">假设将来</td><td style="text-align:center">did(were)<br>were to do<br>should do</td><td style="text-align:center">might + do</td></tr></tbody></table><h4 id="If-非真实条件句（混合时态的虚拟）"><a href="#If-非真实条件句（混合时态的虚拟）" class="headerlink" title="If 非真实条件句（混合时态的虚拟）"></a>If 非真实条件句（混合时态的虚拟）</h4><table><thead><tr><th style="text-align:center">&emsp;</th><th style="text-align:center">If 从句</th><th style="text-align:center">主句</th></tr></thead><tbody><tr><td style="text-align:center">假设过去</td><td style="text-align:center">&emsp;</td><td style="text-align:center">&emsp;</td></tr><tr><td style="text-align:center">假设现在</td><td style="text-align:center">&emsp;</td><td style="text-align:center">&emsp;</td></tr><tr><td style="text-align:center">假设将来</td><td style="text-align:center">&emsp;</td><td style="text-align:center">&emsp;</td></tr></tbody></table><p>如果你（过去）嫁给他，你（现在）就会是一个加油站服务员的妻子。<br><br>If you <ins>had married</ins> him, you <ins>would be</ins> the wife of a gas station attendant.<br><br></p><h4 id="省略-If-的虚拟条件句"><a href="#省略-If-的虚拟条件句" class="headerlink" title="省略 If 的虚拟条件句"></a>省略 If 的虚拟条件句</h4><p><ins>If you had joined us</ins>, we would have had more fun.<br><br><ins>If I were you</ins>, I would think it twice.<br></p><h2 id="2-名词性从句的虚拟语气："><a href="#2-名词性从句的虚拟语气：" class="headerlink" title="2. 名词性从句的虚拟语气："></a>2. 名词性从句的虚拟语气：</h2><p>表示“建议，要求，命令”动词后的宾语从句虚拟从句中用（should）+ do<br><br>He suggested that <ins>the system should be changed</ins>.<br><br><b>suggest, advise, propose, recommend, order, ask, demand, insist, require, request……</b></p><p></p><h4>练习：</h4><br><b>宾语从句的虚拟语气</b><br><p></p><ol><li>The engineers proposed they <input type="text">(look) at the design again.<br></li><li>He insisted that she <input type="text">(send) her sister to a dancing school.<br></li><li>The workers demanded they <input type="text">(give) the wages they should get.<br></li><li>He ordered they <input type="text">(start) the attack before dawn.<br></li><li>The teacher always suggests the students <input type="text">(go) over the text before the best.<br></li><li>the professor recommended we <input type="text">(look) for the information in the library.<br></li></ol><h4 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h4><p>表示 “建议，要求，命令” 的名词性从句<br><br>He <span style="background:yellow">suggested</span> <ins>that the system should be changed</ins>.<br><br>His <span style="background:yellow">suggestion</span> was <ins>that the system should be changed</ins>.<br><br>He gave the <span style="background:yellow">suggestion</span> <ins>that the system should be changed</ins>.<br><br>This year,<span style="background:yellow">it</span> was <span style="background:yellow">suggested</span> <ins>that the system should be changed</ins>.</p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>特殊用途的句子(倒装句)</title>
      <link href="/te-shu-yong-tu-de-ju-zi-dao-zhuang-ju.html"/>
      <url>/te-shu-yong-tu-de-ju-zi-dao-zhuang-ju.html</url>
      
        <content type="html"><![CDATA[<font face="微软雅黑" style="font-size:16px"><br><div><br><h1>第二章 倒装</h1><br><h3>全部倒装/部分倒装</h3><br><h2 style="color:red">1. 全部倒装：</h2><br>In the mountain <span style="background:yellow">lies</span> <ins>a castle</ins>.<br><br>Here <span style="background:yellow">comes</span> <ins>the bus</ins>.<br><br><br><h3>全部倒装：There be 句型</h3><br>1. There be + n. “有”（客观存在）<br><br>There is a girl.<br><br>2. There be + n + 介词短语 “有…在哪里”（客观存在）<br><br>There is a book on the table.<br><br>There is no gap between mind and matter.<br><br><br><br><br>注意：1）be 动词的变化<br><br>&emsp;&emsp;&emsp;&emsp;&nbsp; There <ins>will</ins> now <ins>be</ins> a seven-day wait for jobseeker’s allowance.<br><br>&emsp;&emsp;&emsp;2）主语的单复数<br><br>&emsp;&emsp;&emsp;3）There 还可以与情态动词搭配<br><br>&emsp;&emsp;&emsp;&emsp;&nbsp; There <ins>may be</ins> more matches in the database.<br><br><br><h2 style="color:red">2. 部分倒装：</h2><br>相当于把陈述句变成疑问句<br><br><h3>三种情况需要倒装</h3><br>（1）否定词位于句首<br><br>&emsp;not, no, never, hardly, little, scarcely, seldom, not until, not only……<br><br>（2）only 位于句首<br><br>（3）虚拟if条件句<br><br><br><h4>举例：</h4><br>The poor man <ins>had</ins> not only <ins>been arrested</ins> but he had been sent to prison as well.<br><br>Not only <ins>had</ins> the poor man <ins>been arrested</ins>, but he had been sent to prison as well.<br><br>We <ins>can learn</ins> English well only in this way.<br><br>Only in this way <ins>can</ins> we <ins>learn</ins> English well.<br><br><br><h4>练习：</h4><br>1. You will never know the truth.<br><br>Never <input type="text">.<br><br>2. He cares little for my words.<br><br>Little <input type="text">.<br><br>3. I had no sooner got the invitation than I refused.<br><br>No sooner <input type="text">.<br><br>4. He had hardly had time to settle down when he left the country.<br><br>Hardly <input type="text">.<br><br>5. He achieved his goal only by working hard.<br><br>Only by working hard <input type="text">.<br><br>6. Natural disasters will reduce, only when we solve the problems of environmental pollution.<br><br>Only when <input type="text">.<br><br></div><br></font>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>特殊用途的句子(强调句)</title>
      <link href="/te-shu-yong-tu-de-ju-zi-qiang-diao-ju.html"/>
      <url>/te-shu-yong-tu-de-ju-zi-qiang-diao-ju.html</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-强调"><a href="#第一章-强调" class="headerlink" title="第一章 强调"></a>第一章 强调</h1><h2 id="强调句"><a href="#强调句" class="headerlink" title="强调句"></a>强调句</h2><font face="微软雅黑" style="font-size:16px"><br><div><br>It is ….. that …..<br><br>I want to go to <span style="background:yellow">America</span> this summer.<br><br>It is <span style="background:yellow">America</span> that I want to go to this summer.<br><br><br><h2>补充：</h2><br>强调过去时态：It was …. that …<br><br>强调人时：It is …. that/who …<br><br><br><h2>练习：</h2><br><ins>It is</ins> they. not American, <ins>who</ins> have become anti-intellectual.<br><br><ins>It is</ins> they <ins>who</ins> have become anti-intellectual.<br><br><br><h2>It is … that …写作：</h2><br><ins>Lisa</ins> likes cooking at home.<br><br>We used to have meetings <ins>in the cafe</ins>.<br><br>They celebrated the holiday <ins>on Nov.11</ins><sup>th</sup>.<br><br>Students don’t like <ins>too much homework</ins>.<br><br>Men can solve the problems of natural disaster <ins>only by controlling the environmental pollution</ins>.<br><br><b>注意：</b>一个句子的动词和形容词不能强调。<br></div><br></font>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单句的补充(复合句/状语从句)</title>
      <link href="/jian-dan-ju-de-bu-chong-fu-he-ju-zhuang-yu-cong-ju.html"/>
      <url>/jian-dan-ju-de-bu-chong-fu-he-ju-zhuang-yu-cong-ju.html</url>
      
        <content type="html"><![CDATA[<h1 id="第三章-状语从句"><a href="#第三章-状语从句" class="headerlink" title="第三章 状语从句"></a>第三章 状语从句</h1><h2 style="color:red">1.状语从句的含义：</h2>一个句子作状语，表达描述性的信息。<br><h2><span style="color:red">2.状语从句的写法：</span>从属连词 + 完整的陈述句</h2><table><thead><tr><th style="text-align:center">&emsp;</th><th style="text-align:center">从属连词</th></tr></thead><tbody><tr><td style="text-align:center">时间状语从句</td><td style="text-align:center">when, while, as, before, after, since, until</td></tr><tr><td style="text-align:center">&emsp;</td><td style="text-align:center">as soon as, no sooner…than</td></tr><tr><td style="text-align:center">地点状语从句</td><td style="text-align:center">where</td></tr><tr><td style="text-align:center">原因状语从句</td><td style="text-align:center">because, since, as</td></tr><tr><td style="text-align:center">结果状语从句</td><td style="text-align:center">so/such…that, so that…</td></tr><tr><td style="text-align:center">目的状语从句</td><td style="text-align:center">so that…,in order that</td></tr><tr><td style="text-align:center">条件状语从句</td><td style="text-align:center">if, unless, as long as</td></tr><tr><td style="text-align:center">让步状语从句</td><td style="text-align:center">although, though, even though, as</td></tr><tr><td style="text-align:center">比较状语从句</td><td style="text-align:center">than, as </td></tr><tr><td style="text-align:center">方式状语从句</td><td style="text-align:center">as</td></tr></tbody></table><h2 id="地点状语从句"><a href="#地点状语从句" class="headerlink" title="地点状语从句"></a>地点状语从句</h2><p>Stay where you are.<br><br>Where there is a will, there is a way.<br><br></p><h2 id="结果状语从句"><a href="#结果状语从句" class="headerlink" title="结果状语从句"></a>结果状语从句</h2><p>The problem is <span style="background:yellow">so</span> complicated <span style="background:yellow">that</span> we cannot solve it.<br><br>It is <span style="background:yellow">such</span> a complicated problem <span style="background:yellow">that</span> we cannot solve it.<br><br></p><h2 id="让步状语从句"><a href="#让步状语从句" class="headerlink" title="让步状语从句"></a>让步状语从句</h2><p><span style="background:yellow">Although</span> it is summer, it is very cold.<br><br>It is summer, <span style="background:yellow">but</span> it is very cold.<br><br></p><h2 id="比较状语从句"><a href="#比较状语从句" class="headerlink" title="比较状语从句"></a>比较状语从句</h2><p>I am as tall as you.<br><br>I am as tall <span style="background:yellow">as</span> you(are).<br><br></p><h2 id="方式状语从句"><a href="#方式状语从句" class="headerlink" title="方式状语从句"></a>方式状语从句</h2><p>Do it <span style="background:yellow">as</span> I told you yesterday.<br><br>When in Rome, do <span style="background:yellow">as</span> Romans do.<br><br></p><p></p><h2 style="color:red">3.状语从句的时态：</h2><br>时间/条件状语从句中表示将来，要换成一般现在时。<br><br>如果明天下雨，我们就不去公园。<br><br><ins>If it <span style="color:red">rains</span> tomorrow</ins>, we will not go for a picnic.<br><br>I will let him know, <ins>when he <span style="color:red">comes</span> home later</ins>.<br><br><p></p><p></p><h4>改错练习：</h4><p></p><ol><li>The boss will review your work after she <span contenteditable="true"><ins>will return</ins> </span>from vacation next week.(returns)<br></li><li>I’ll give you a call on my cell phone as soon as my plane <span contenteditable="true"><ins>will land</ins> </span>.(lands)<br></li><li>I don’t like my current job, but I’m going to stay with this company until I <span contenteditable="true"><ins>will find</ins> </span>something better.(find)<br></li><li>If it <span contenteditable="true"><ins>won’t be</ins> </span>cold tomorrow. we’ll go to the beach.(isn’t)<br></li><li>If it <span contenteditable="true"><ins>will be</ins> </span> cold tomorrow, we will go to a movie.(is)<br><br></li></ol><p></p><h2 style="color:red">4.状语从句的位置：</h2><br><span style="background:yellow">If it rains tomorrow</span>, we will not go to the park.<br><br>We will not go to the park, <span style="background:yellow">If it rains tomorrow</span>.<br><br>We, <span style="background:yellow">If it rains tomorrow</span>, will not go to the park.<br><br><p></p><p></p><h4>练习：</h4><p></p><ol><li>He speaks English well indeed, but of course not <strong>_</strong> a native speaker.<br><br><input name="choose1" type="radio">A. as fluent as &emsp;&emsp;&emsp;&emsp;<input name="choose1" type="radio">B. more fluent than<br><input name="choose1" type="radio">C. as fluently as &nbsp;&emsp;&emsp;&emsp;<input name="choose1" type="radio">D. much fluently than<br></li><li>The couple had no sooner got to the station <strong>_</strong> the coach left.<br><br><input name="choose2" type="radio">A. when &emsp;&emsp;<input name="choose2" type="radio">B. as &emsp;&emsp;<input name="choose2" type="radio">C. until &emsp;&emsp;<input name="choose2" type="radio">D. than<br></li><li>My parents don’t mind what job I do <strong>_</strong> I am happy.<br><br><input name="choose3" type="radio">A. even though &emsp;<input name="choose3" type="radio">B. as soon as &emsp;<input name="choose3" type="radio">C. as long as &emsp;<input name="choose3" type="radio">D. as though<br></li><li>The medicine works more effectively <strong>_</strong> you drink some hot water after taking it.<br><br><input name="choose4" type="radio">A. as &emsp;&amp;emsp<input name="choose4" type="radio">B. until &emsp;&emsp;<input name="choose4" type="radio">C. although &emsp;&emsp;<input name="choose4" type="radio">D. if<br></li><li><strong>__</strong> the police thought he was the most likely one, since they had no exact proof about it,they could not arrest him.<br><br><input name="choose5" type="radio">A. Although &emsp;<input name="choose5" type="radio">B. As long as &emsp;<input name="choose5" type="radio">C. If only &emsp;<input name="choose5" type="radio">D. As soon as<br></li><li>It just isn’t fair. <strong>__</strong> I was working as a waiter last month, my friends were lying on the beach.<br><br><input name="choose6" type="radio">A. whenever &emsp;<input name="choose6" type="radio">B. though &emsp;<input name="choose6" type="radio">C. for &emsp;<input name="choose6" type="radio">D. while<br></li><li>Shall we have our picnic tomorrow?<br><br><strong>_</strong> it doesn’t rain.<br><br><input name="choose7" type="radio">A.Until &emsp;&emsp;<input name="choose7" type="radio">B. While &emsp;&emsp;<input name="choose7" type="radio">C. Once &emsp;&emsp;<input name="choose7" type="radio">D. If<br></li><li>The Great Wall is <strong>_</strong> tourist attraction that millions of people pour in every year.<br><br><input name="choose8" type="radio">A. so a well-known &emsp;&emsp;&emsp;<input name="choose8" type="radio">B. a so well-known<br><input name="choose8" type="radio">C. such well-known a &emsp;&emsp;<input name="choose8" type="radio">D. such a well-known<br></li><li>Owen wouldn’t eat anything <strong>_</strong> he cooked it himself.<br><br><input name="choose9" type="radio">A. until &emsp;&emsp;<input name="choose9" type="radio">B. since &emsp;&emsp;<input name="choose9" type="radio">C. unless &emsp;&emsp;<input name="choose9" type="radio">D. while<br><details><summary>答案</summary>1.C 2.D 3.C 4.D 5.A 6.D 7.D 8.D 9.C</details></li></ol>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单句的补充(复合句/定语从句)</title>
      <link href="/jian-dan-ju-de-bu-chong-fu-he-ju-ding-yu-cong-ju.html"/>
      <url>/jian-dan-ju-de-bu-chong-fu-he-ju-ding-yu-cong-ju.html</url>
      
        <content type="html"><![CDATA[<font face="微软雅黑"><br><div><br><h1>第二章 定语从句</h1><br><h2 style="color:red">1. 定语从句的含义：</h2><br><font style="font-size:18px">一个句子作定语，去修饰限定名词。</font><br><h2 style="color:red">2. 定语从句的写法：</h2><br><font style="font-size:18px">先把主句和从句写出两个句子，再把从句合并进去修饰限定名词。<br><br><br>This is the <ins><b>我梦想很多年的</b></ins> job.<br><br><br>This is <ins>the job</ins>. I have dream of <ins>the job</ins> for years.<br><br><br>This is <span style="color:rgb(0,180,0)">the <font style="font-size:24px">job</font></span> <ins><font style="font-size:24px;color:rgb(180,0,0)">Which</font> I have dreamed of for years</ins>.<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;↓&emsp;&emsp;&emsp;↓<br><br><font style="font-size:24px;color:rgb(0,180,0)">&emsp;&emsp;先行词 <span style="color:rgb(180,0,0)">关系词</span></font><br><br><br>&emsp;&emsp;关系词如何选择？&emsp;&emsp;&emsp;&emsp;看先行词！<br><br><span style="display:inline-block;width:200px;height:230px;border-right:2px solid"><font style="color:rgb(210,0,0);font-size:24px">&emsp;先行词 = ？</font><ul><li>物</li><li>人</li><li>人的/物的</li><li>时间</li><li>地点</li><li>原因</li></ul></span> <span style="display:inline-block;width:200px;height:230px;border-left:2px solid;margin-left:-6px"><font style="color:rgb(210,0,0);font-size:24px">&emsp;关系词 = ？</font><ul style="list-style-type:none"><li>which/that</li><li>who/whom/that</li><li>whose</li><li>when</li><li>where</li><li>why</li></ul></span><br></font><br><h3>练习关系词的选择：</h3><br><font face="Helvetica" style="font-size:16px"><br>1. I have a class <input type="text"> begins at 8:00 am.<br>2. The lawyer <input type="text"> my brother called didn’t answer the phone.<br>3. My daughter asked me a question <input type="text"> I couldn’t answer.<br>4. The people <input type="text"> sat in the stadium cheered for the home team.<br>5. Leo is the student <input type="text"> bike was stolen.<br>6. Australia is one of the few countries <input type="text"> people drive on the left.<br>7. Sunday is the day <input type="text"> people usually don’t go to work.<br>8. Is there any particular reason <input type="text"> you can’t come?<br><br><details><summary>答案</summary>1. which/that 2. 不填/whom/that 3. 不填/that/which 4. who<br> 5. whose 6. where 7. when 8. why</details><br><br></font><p></p><h3>练习写定语从句</h3><p></p><font face="Helvetica" style="font-size:16px"><br>1. I lost the book <input type="text">.<br>&emsp;我弄丢了上周从图书馆借的书。<br><br>2. The woman <input type="text"> was feeding pigeons.<br>&emsp;我在公园看见的那位女士正在喂鸽子。<br><br>3. The bus <input type="text"> is usually very crowed.<br>&emsp;我每天上学坐的那辆公交车总是很拥挤。<br><br><br><details><summary>答案</summary>1. which/that/不填 I borrowed from the library 2. who/that/whom/不填 I saw in the park 3. which/that/不填 I take every day to school</details><br></font><p></p><h2 style="color:red">3. 定语从句的分类：</h2><p></p><font face="Helvetica" style="font-size:16px"><br>I met <span style="color:red">your friend</span> <ins>who is staying in Paris</ins>.&emsp;&emsp;&emsp;&emsp;限定性定语从句<br><br>I met <span style="color:red">your mother</span>,<ins>who is staying in Paris</ins>.&emsp;&emsp;&emsp;&nbsp;非限定性定语从句<br><br><br>This is the wall which they built last week.<br><br>This is the Great Wall, which is world-famous.<br><br><b>练习（填入逗号和关系词）:</b><br>1. He came from Beijing <input type="text"> is the capital of China.(,which)<br>2. He came from a city <input type="text"> is in the north of China.(which/that)<br>3. This is the businessman <input type="text"> we are cooperating with.(who/whom/that/不填)<br>4. This is Bill Gates <input type="text"> many people know as the richest amn.(,whom)<br><br><b>注意：非限定性定语从句不仅可以修饰前面的名词，还可以修饰前面的整句话。</b><br><br>The company will get back to you in three days,<ins style="color:red">which</ins> is one of the typical rules.<br><br><br><b>补充：介词提前的定语从句</b><br><br>This is the job <ins><span style="color:red">which/that/X</span> I have dreamed of for years</ins>.<br><br>This is the job <ins><span style="color:red">of which</span> I have dreamed of for years</ins>.<br><br>Humans have the ability to modify the environment <ins><span style="color:red">in which</span> they live</ins>.<br><br>The theory <ins><span style="color:red">on which</span> it is based</ins> may be right.<br></font><br></div><br></font>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单句的补充(复合句/名词性从句)</title>
      <link href="/jian-dan-ju-de-bu-chong-fu-he-ju-ming-ci-xing-cong-ju.html"/>
      <url>/jian-dan-ju-de-bu-chong-fu-he-ju-ming-ci-xing-cong-ju.html</url>
      
        <content type="html"><![CDATA[<font face="微软雅黑"><br><div><br><h1>第一章 名词性从句</h1><br><h2>一、宾语从句</h2><br><br><br><h3 style="color:red">1. 宾语从句的含义：</h3><br>一个句子作宾语，放在另一个句子（主句）里。<br><br><br><h3 style="color:red">2. 宾语从句的写法：</h3><br><div style="width:400;height:160;border:1px solid"><br><font style="font-size:25px">&emsp;① 陈述句变成宾语从句？<br><br><center>You are right.&emsp;&emsp;&emsp;&emsp;</center><br><center style="color:green">↓&emsp;&emsp;&emsp;&emsp;</center><br>&emsp;I know <strong><strong><strong><strong><strong><strong><strong><strong>__</strong></strong></strong></strong></strong></strong></strong></strong>.</font><br></div><br><h4>I know (that) you are right.</h4><br><br><div style="width:400;height:160;border:1px solid"><br><font style="font-size:25px">&emsp;② 特殊疑问句变成宾语从句？<br><br><center>What will she say?&emsp;&emsp;&emsp;&emsp;</center><br><center style="color:green">↓&emsp;&emsp;</center><br>&emsp;I know <strong><strong><strong><strong><strong><strong><strong><strong><strong>_</strong></strong></strong></strong></strong></strong></strong></strong></strong>.<br></font><br></div><br><h4>I know what she will say.</h4><br><br><div style="width:400;height:160;border:1px solid"><br><font style="font-size:25px">&emsp;③ 一般疑问句变成宾语从句？<br><br><center>Is he happy?&emsp;&emsp;&emsp;&emsp;</center><br><center>↓&emsp;&emsp;&emsp;&emsp;</center><br>&emsp;I know <strong><strong><strong><strong><strong><strong><strong><strong>__</strong></strong></strong></strong></strong></strong></strong></strong>.<br></font><br></div><br><h4>I know <ins>whether/if</ins> he is happy.</h4><br><h3>总结：宾语从句的写法<strong><strong>____</strong></strong> + <strong><strong>___</strong></strong><br><br>&emsp;&emsp;(词 + 陈述句)<br><br><br>练习：填入宾语从句的连接词<br></h3><br>1. 我承诺我会帮助你。<br>&emsp;I promise <input type="text"> I will help you.<br><br>2. 你从来没告诉过我，你对我电脑做了什么。<br>&emsp;You never told me <input type="text"> you had done to my computer.<br><br>3. 我想知道什么时候我们将会出发。<br>&emsp;I wonder <input type="text"> we will set out.<br><br>4. 他们不知道他们是否会按时完成工作。<br>&emsp;They don’t know <input type="text"> they will finish the work on time.<br><br>5. 你能告诉我什么时候我们将会出发吗？<br>&emsp; Can you tell me <input type="text">?<br><br><details><summary>答案</summary>1. that 2. what 3. when 4. whether 5. when we’ll set out</details><br><br><br><br><h3 style="color:red">3.宾语从句的位置：</h3><br><h3>名词性从句：</h3><br><br>6. we know <ins><strong>*</strong></ins>.<br>7. The big news is <ins><strong>*</strong></ins>.<br>8. <ins><strong>*</strong></ins> is big news.<br>9. We know the big news <ins><strong>*</strong></ins>.<br><br><br><h3>宾语从句：</h3><br>1. I don’t <span style="color:red">know</span> <ins>when you will finish the work</ins>.<br>No one <span style="color:red">tells me</span> <ins>when you will finish the work</ins>. <br><br>2. I worry <span style="color:red">about</span> <ins>whether I hurt her feelings</ins>.<br><br>3. Are you positive <ins>(that) you’ve never seen that man before</ins>.<br><br><br><br><br><br><h2>二、表语从句</h2><br>My concern <span style="color:red">is</span> <ins>that people don’t care about others</ins>.<br><br><br>The question <span style="color:red">remains</span> <ins>whether people will buy it</ins>.<br><br><br><br><br><h2>三、同位语从句</h2><br>一个句子作同位语，解释说明 n.<br><br><b>位置：</b>需要解释的<ins>抽象 n.后</ins>。(fact, idea, news, dream, suggestion, advice, report …)<br><br><br><b>最常用的是：“that+陈述句”这种 (注意： that不作成分，但不能省略)</b><br><br><br>我不怀疑他将会帮我的忙。<br><br>I have no <span style="color:red">doubt</span> <ins>that he will help me</ins>.<br><br><br>我支持这种论据, 校车问题必须被严肃对待。<br><br>I support <span style="color:red">the argument</span> <ins>that the problems of school buses must be taken seriously</ins>.<br><br><br><br><h2>四、主语从句</h2><br>我们是否将会去露营取决于天气。<br><br><b>位置1：句首</b><br><br><ins style="color:red">Whether we will go camping</ins> depends on the weather.<br><br><br><b>位置2：句尾(句首用形式主语it)</b><br><br><ins style="color:red">It</ins> depends on the <ins style="color:red">weather whether we will go camping</ins>.<br><br><b>注意：</b>两种位置，意思相同。但更常用的是位于句尾的主语从句。<br><br><br><br><br><h4>练习： 填入连接词， 并判断是哪种名词性从句。</h4><br><font face="Helvetica" style="font-size:16px"><br>1. <strong>____</strong> Barbara Jones offers to her fans is honesty and happiness.<br> <input name="choose1" type="radio">A. Which &emsp;&emsp;<input name="choose1" type="radio">B. What &emsp;&emsp;<input name="choose1" type="radio">C. That &emsp;&emsp;<input name="choose1" type="radio">D. Whom <br><br><br>2. We’ve offered her the job, but I don’t know <strong>___</strong> she’ll accept it.<br> <input name="choose2" type="radio">A. where &emsp;&emsp;<input name="choose2" type="radio">B. what &emsp;&emsp;<input name="choose2" type="radio">C. whether &emsp;&emsp;<input name="choose2" type="radio">D. which <br><br><br>3. Our teachers always tell us to believe in <strong>__</strong> we do and who we are if we want to succeed.<br> <input name="choose3" type="radio">A. why &emsp;&emsp;<input name="choose3" type="radio">B. how &emsp;&emsp;<input name="choose3" type="radio">C. what &emsp;&emsp;<input name="choose3" type="radio">D. which <br><br><br>4. Modern science has given clear evidence <strong>___</strong> smoking can lead to many diseases.<br> <input name="choose4" type="radio">A. what &emsp;&emsp;<input name="choose4" type="radio">B. which &emsp;&emsp;<input name="choose4" type="radio">C. that &emsp;&emsp;<input name="choose4" type="radio">D. where <br><br><br>5. It was never clear <strong>____</strong> the man hadn’t reported the accident sooner.<br> <input name="choose5" type="radio">A. that &emsp;&emsp;<input name="choose5" type="radio">B. how &emsp;&emsp;<input name="choose5" type="radio">C. when &emsp;&emsp;<input name="choose5" type="radio">D. why <br><br><br>6. It is still under discussion <strong>___</strong> the old bus station should be replaced with a modern hotel or not.<br> <input name="choose6" type="radio">A. whether &emsp;&emsp;<input name="choose6" type="radio">B. when &emsp;&emsp;<input name="choose6" type="radio">C. which &emsp;&emsp;<input name="choose6" type="radio">D. where <br><br><br>7. I am afraid he’s more of a talker than a doer, which is <strong>___</strong> he never finishes anything.<br> <input name="choose7" type="radio">A. that &emsp;&emsp;<input name="choose7" type="radio">B. when &emsp;&emsp;<input name="choose7" type="radio">C. where &emsp;&emsp;<input name="choose7" type="radio">D. why <br><br><br>8. These wild flowers are so special that I would do <strong>__</strong> I can to save them.<br> <input name="choose8" type="radio">A. whatever &emsp;&emsp;<input name="choose8" type="radio">B. which &emsp;&emsp;<input name="choose8" type="radio">C. that &emsp;&emsp;<input name="choose8" type="radio">D. whichever<br><br><br><br><br><br><details><summary>答案</summary><br>1. B 主语从句 &emsp; 2. C 宾语从句 &emsp; 3. C 宾语从句 &emsp; 4. C 同位语从句<br> 5. D 主语从句 &emsp; 6. A 主语从句 &emsp; 7. D 表语从句 &emsp; 8. A 宾语从句<br></details><br></font><br></div><br></font>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单句的补充(并列句)</title>
      <link href="/jian-dan-ju-de-bu-chong-bing-lie-ju.html"/>
      <url>/jian-dan-ju-de-bu-chong-bing-lie-ju.html</url>
      
        <content type="html"><![CDATA[<font face="微软雅黑"><br><div><br><h1>一、并列句的构成</h1><br><div>多件事（多个简单句）之间同等重要，用并列连词连接起来。</div><br><br><h3>四六级常用的并列连词有：</h3><br>1）&emsp;&emsp;&emsp;表示顺接：…and…;both…and…;not only…,but…as well/but also…<br><br>2）&emsp;&emsp;&emsp;表示转折：but;yet;while<br><br>3）&emsp;&emsp;&emsp;表示选择：…or…;either…or…;neither…nor…<br><br>4）&emsp;&emsp;&emsp;表示因果：…for…（原因）;…so…（结果）<br><br><br><br><br><h1>二、并列句的省略</h1><br>I am a teacher and I like English.<br><br><br>I <ins style="color:red">am</ins> a teacher <ins>and <span style="color:red">like</span></ins> English.<br><br><br>I am lying in bed and I am reading a book.<br><br><br>I am <ins style="color:red">lying</ins> in bed <ins>and <span style="color:red">reading</span></ins> a book.<br><br><br>I want to leave and I want to go abroad.<br><br><br>I want <ins style="color:red">to leave</ins> <ins>and <span style="red"> to go </span></ins>abroad.<br><br><br>and(平行结构)<br><br><br><br><b>练习</b><br><br>1. You can <strong><strong> stay at home </strong></strong> go out to play. It doesn’t matter.<br><input name="choose1" type="radio">A.either,or&emsp;&emsp;<input name="choose1" type="radio">B.neither,nor&emsp;&emsp;<input name="choose1" type="radio">C.both,and&emsp;&emsp;<input name="choose1" type="radio">D.not only,but also<br><br><br>2. We bought her a birthday present,<strong>_</strong> she likes it very much.<br><input name="choose2" type="radio">A.so&emsp;&emsp;&emsp;<input name="choose2" type="radio">B.or&emsp;&emsp;&emsp;<input name="choose2" type="radio">C.and&emsp;&emsp;&emsp;<input name="choose2" type="radio">D.but<br><br><br>3. <strong>_</strong> you <strong>_</strong> he is able to ski,but I am.<br><input name="choose3" type="radio">A.both,and&emsp;&emsp;<input name="choose3" type="radio">B.either,or&emsp;&emsp;<input name="choose3" type="radio">C.neither,nor&emsp;&emsp;<input name="choose3" type="radio">D.between,and<br><br><br>4. The doctor tried their best to save the patient’s life,<strong>_</strong>failed.<br><input name="choose4" type="radio">A.or&emsp;&emsp;<input name="choose4" type="radio">B.so&emsp;&emsp;<input name="choose4" type="radio">C.but&emsp;&emsp;<input name="choose4" type="radio">D.because<br><br><br>5. I could speak <strong>_</strong> Japanese <strong>_</strong> Chinese,so I had to talk with him in English.<br><input name="choose5" type="radio">A.not only,but also&emsp;&emsp;<input name="choose5" type="radio">B.both,and&emsp;&emsp;<input name="choose5" type="radio">C.neither,nor<input name="choose5" type="radio">D.either,or<br><br><br>6. I like pop music,but <strong>_</strong> my father <strong>_</strong> my mother likes it.<br><input name="choose6" type="radio">A.both,and&emsp;&emsp;<input name="choose6" type="radio">B.either,or&emsp;&emsp;<input name="choose6" type="radio">C.neither,nor&emsp;&emsp;<input name="choose6" type="radio">D.not only,but also<br><br><br>7. Tom,keep away from the fire,<strong><strong> you will get burnt.<br><input name="choose7" type="radio">A.and&emsp;&emsp;<input name="choose7" type="radio">B.so&emsp;&emsp;<input name="choose7" type="radio">C.or&emsp;&emsp;<input name="choose7" type="radio">D.but<br><br><br>8. I thought we’d be late for the concert,__</strong></strong> we ended up getting there ahead of time.<br><input name="choose8" type="radio">A.but&emsp;&emsp;<input name="choose8" type="radio">B.or&emsp;&emsp;<input name="choose8" type="radio">C.so&emsp;&emsp;<input name="choose8" type="radio">D.for<br><br><br><br>答案：<br><br><details><summary>第一题</summary>A</details><br><details><summary>第二题</summary>C</details><br><details><summary>第三题</summary>C</details><br><details><summary>第四题</summary>C</details><br><details><summary>第五题</summary>C</details><br><details><summary>第六题</summary>C</details><br><details><summary>第七题</summary>C</details><br><details><summary>第八题</summary>A</details><br><br></div><br></font>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单句的核心变化（同位语/插入语）</title>
      <link href="/jian-dan-ju-de-he-xin-bian-hua-tong-wei-yu-cha-ru-yu.html"/>
      <url>/jian-dan-ju-de-he-xin-bian-hua-tong-wei-yu-cha-ru-yu.html</url>
      
        <content type="html"><![CDATA[<font face="微软雅黑"><br><div><br><h1>三、同位语/插入语</h1><br><br><p><br>同位语，解释说明前面名词，与名词相同，说的是一件事。<br><br>My teacher,<ins>Mr. Lee</ins>,is coming to the meeting.<br></p><br><br><br><br><p><br>插入语，插入的补充说明，与前后无关。<br><br>My teacher,<ins>together with his colleagues</ins>,is coming to the meeting.<br><br><br>All their lives, today’s young women have been pushed to embrace both perfection and passion <ins>to pursue science and sports,math and theater</ins> and do it all as well as they possibly can.<br><br></p><p align="right">2014.06 CET4</p><br><p></p><br><br><p><br>Confronted with such facts, <span style="background:yellow">some Swedish activists and legislators are demanding more extreme and far-reaching measures,</span>such as replacing male and female pronouns with neutral alternative and monitoring children more closely to correct them when they gravitate toward gendered play.<br></p><p align="right">2014.06 CET6</p><br><p></p><br><br></div><br></font>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单句的补充（非谓语动词）</title>
      <link href="/jian-dan-ju-de-bu-chong-fei-wei-yu-dong-ci.html"/>
      <url>/jian-dan-ju-de-bu-chong-fei-wei-yu-dong-ci.html</url>
      
        <content type="html"><![CDATA[<h1 id="二、非谓语动词"><a href="#二、非谓语动词" class="headerlink" title="二、非谓语动词"></a>二、非谓语动词</h1><table><thead><tr><th style="text-align:center">非谓语动词</th><th style="text-align:center">共3种</th></tr></thead><tbody><tr><td style="text-align:center">doing</td><td style="text-align:center">表示<strong><strong>主动</strong></strong></td></tr><tr><td style="text-align:center">done</td><td style="text-align:center">表示<strong><strong>被动</strong></strong></td></tr><tr><td style="text-align:center">to do</td><td style="text-align:center">表示<strong><strong>目的</strong></strong></td></tr></tbody></table><p><div><ins style="color:red">Passing</ins> planes can be heard night and day.</div></p><p></p><p>The teacher came into the classroom,<ins><span style="color:red">holding</span> a book</ins> in his hand.</p><br><p></p><p><div>He bought a <ins style="color:red">used</ins> car.</div></p><p></p><p>The teacher came into the classroom, <ins style="color:red">followed</ins> by five students.</p><br><p></p><p><div>I have a lot of homework <ins style="color:red">to do</ins>.</div></p><p></p><p>I am coming <ins><span style="color:red">to see</span> you</ins>.</p><br><br><br><b>练习：</b><br><p></p><ol><li><strong>_</strong>, you need to give all you have and try your best.<br> <input type="radio" name="choose1">A. Being a winner &emsp;&emsp;&emsp;<input type="radio" name="choose1">B. To be a winner<br><br> <input type="radio" name="choose1">C. Being a winner&emsp;&emsp;&emsp;<input type="radio" name="choose1">D. Having been a winner<br></li><li><strong>_</strong> into English, the sentence was found to have an entirely different word order.<br> <input type="radio" name="choose2">A. Translating&emsp;&emsp;&emsp;&nbsp;<input type="radio" name="choose2">B. Translated<br><br> <input type="radio" name="choose2">C. To translate&emsp;&emsp;&emsp;<input type="radio" name="choose2">D. Having translated<br></li><li>Peter received a letter just now <strong>_</strong>his grandma would come to see him soon.<br> <input type="radio" name="choose3">A. said&emsp;&emsp;&emsp;&emsp;&nbsp;<input type="radio" name="choose3">B. says<br><br> <input type="radio" name="choose3">C. saying&emsp;&emsp;&emsp;<input type="radio" name="choose3">D. to say<br><br></li><li><strong>_</strong> an important role in a new movie, Andy has a chance to become famous.<br> <input type="radio" name="choose4">A. Offer&emsp;&emsp;&emsp;&emsp;&nbsp;<input type="radio" name="choose4">B. Offering<br><br> <input type="radio" name="choose4">C. Offered&emsp;&emsp;&emsp;<input type="radio" name="choose4">D. To offer<br></li><li>The island, <strong>__</strong> to the mainland by a bridge,is easy to go to.<br> <input type="radio" name="choose5">A. joining&emsp;&emsp;&emsp;<input type="radio" name="choose5">B. to join<br><br> <input type="radio" name="choose5">C. joined&emsp;&emsp;&emsp;<input type="radio" name="choose5">D. having joined<br></li></ol>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单句的补充(限定词/形容词/介词短语)</title>
      <link href="/jian-dan-ju-de-bu-chong-xian-ding-ci-xing-rong-ci-jie-ci-duan-yu.html"/>
      <url>/jian-dan-ju-de-bu-chong-xian-ding-ci-xing-rong-ci-jie-ci-duan-yu.html</url>
      
        <content type="html"><![CDATA[<font face="微软雅黑"><br><h2>一、限定词/形容词/介词短语</h2><br><br><h4 align="center" style="color:red">Girls play games.</h4><br><h4 align="center">Girls <ins>are playing</ins> games.</h4><br><h4 align="center"><ins>Lovely</ins> girls are playing games <ins>happily</ins>.</h4><br><h4 align="center"><ins>Thousands of</ins> Lovely girls are playing games <ins>very</ins> happily.</h4><br><h4 align="center" style="color:red"><ins>After class</ins> thousands of Lovely girls are playing games very happily <ins>on the playground</ins>.</h4><br><br><br><b>常见介词prep. : </b><p>in on at / from to / into onto / with without / of / by / for / about</p><br><b>其他介词 : </b><p>before after / since until / during / between among / across through / against / like as</p><br><br></font>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单句的核心变化（主语/宾语/表语的变化）</title>
      <link href="/jian-dan-ju-de-he-xin-bian-hua-zhu-yu-bin-yu-biao-yu-de-bian-hua.html"/>
      <url>/jian-dan-ju-de-he-xin-bian-hua-zhu-yu-bin-yu-biao-yu-de-bian-hua.html</url>
      
        <content type="html"><![CDATA[<font face="微软雅黑"><h2 style="color:red">(二)主语/宾语/表语的变化</h2><br><br><h3>1. 名词/代词</h3><br><span></span><ins>Most graduates</ins> always want <ins>a big-firm job</ins>.<br><br><span></span><ins>She</ins> is <ins>the leader</ins> of the organization.<br><br><span></span><ins>They</ins> gave <ins>us</ins> <ins>a good impression</ins>.<br><br><br><br><br><h3>2. doing/to do</h3><br><span></span><ins>Laughing</ins> probably has great influence on health.<br><br><span></span><ins>To laugh</ins> probably has great influence on health.<br><br><span></span><ins>It</ins> probably has great influence on health <ins>to laugh</ins>.<br><br><br><br><br><span></span><ins>Having only a foggy view of the future</ins> is of little good.<br><br>It is no use <ins>to talk about dreams without trying</ins>.<br><br><br><br><br>We enjoy <ins>reading books in the library</ins>.<br><br>The members of the board decide <ins>to vote against the new plan</ins>.<br><br>Our main goal is <ins>to finish the task on time</ins>.<br><br><br><br><br><br><h3>3. 多个并列</h3><br><span></span><ins>Science and technology</ins> will develop the process of society.<br><br>Social science disciplines include <ins>geography, economics, political science, and psychology</ins>.<br><br>That doesn’t mean <ins>sitting down and doing nothing at all</ins>.<br><br><br><br><br><br><br><h1>&emsp;&emsp;n. + v.</h1><br><span><br>名词/代词&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;&nbsp;动词的时态<br><br>doing&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;动词的语态<br><br>to do&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;动词的情态<br><br>多个并列&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;&nbsp;&nbsp;动词的否态<br><br></span><br></font>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单句的核心变化（情态）</title>
      <link href="/jian-dan-ju-de-he-xin-bian-hua-qing-tai.html"/>
      <url>/jian-dan-ju-de-he-xin-bian-hua-qing-tai.html</url>
      
        <content type="html"><![CDATA[<h2 id="3-情态"><a href="#3-情态" class="headerlink" title="3. 情态"></a>3. 情态</h2><h3 id="用法："><a href="#用法：" class="headerlink" title="用法："></a>用法：</h3><ol><li>情态动词 + 动词原型</li><li>情态动词的人称变化无</li><li>情态动词的动态变化有限</li><li>情态动词变否定/疑问</li></ol><h3 id="四六级常用的情态动词有："><a href="#四六级常用的情态动词有：" class="headerlink" title="四六级常用的情态动词有："></a>四六级常用的情态动词有：</h3><table><thead><tr><th style="text-align:center">&emsp;现在时&emsp;</th><th style="text-align:center">&emsp;过去时&emsp;</th></tr></thead><tbody><tr><td style="text-align:center">must</td><td style="text-align:center">无</td></tr><tr><td style="text-align:center">can</td><td style="text-align:center">could</td></tr><tr><td style="text-align:center">will</td><td style="text-align:center">would</td></tr><tr><td style="text-align:center">shall</td><td style="text-align:center">should</td></tr><tr><td style="text-align:center">may</td><td style="text-align:center">might</td></tr></tbody></table><p>must “必须” &emsp;can/could“能够，可以”&emsp;will/would“愿意/将要”<br>may/might“可以，可能”&emsp;should“应该”</p><p><strong>1 情态动词表示情态</strong></p><ul><li><p>We <ins>must finish</ins> the work within a week.</p></li><li><p>Air pollution <ins>must be taken</ins> seriously.</p></li><li><p>The government <ins>can solve</ins> the problem of water pollution.</p></li><li><p>Tony <ins>could walk</ins> when he was only one year old.</p></li><li><p>Will you <ins>marry</ins> me?</p></li><li><p>I <ins>will travel</ins> abroad with my family.</p></li><li><p>Potential buyers <ins>would cheer</ins> for lower interest rates.</p></li><li><p>To some extent.expressions <ins>may influence</ins> emotions.</p></li><li><p>Such bodily reaction <ins>might help</ins> moderate the work stress.</p></li><li><p>Students <ins>should work</ins> hard to pass the exams.</p></li><li><p>Those sick people <ins>should seek</ins> help from doctors.</p></li></ul><p><strong>2 情态动词表示推测</strong></p><ul><li><p>The details <ins>may be</ins> unknowable.</p></li><li><p>Such searches <ins>must take</ins> years.</p></li><li><p>The loss of patience <ins>can</ins> potentially <ins>have</ins> a damaging impact on our professional and personal wellbeing.</p></li><li><p>The way of saying those things <ins>may have led</ins> to misunderstanding.</p></li><li><p>Now something similar <ins>could be happening</ins> in the South Africa.<br><br></p></li></ul><p>练习：</p><ol><li>In order to be a good salesclerk, you <input type="text">(must not/will not) be rude to a customer.</li><li>This pie is very good. You <input type="text">(should/must)try a piece.</li><li>Rice <input type="text">(should/must/may) have water in order to grow.</li><li>Don’t be nervous. I think you <input type="text">(can/must) make it.</li><li>I am not sure. Probably he <input type="text">(may/should) come later.</li></ol><details><br><summary>第一题</summary><br><span>1.must not</span><br></details><br><details><br><summary>第二题</summary><br><span>2.should</span><br></details><br><details><br><summary>第三题</summary><br><span>3.must/should</span><br></details><br><details><br><summary>第四题</summary><br><span>4.can</span><br></details><br><details><br><summary>第五题</summary><br><span>5.may</span><br></details>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单句的核心变化（语态）</title>
      <link href="/jian-dan-ju-de-he-xin-bian-hua-yu-tai.html"/>
      <url>/jian-dan-ju-de-he-xin-bian-hua-yu-tai.html</url>
      
        <content type="html"><![CDATA[<font face="微软雅黑" style="font-size:16px"><br><h1 style="color:red;font-size:25px">2.语态</h1><br><span style="font-size:22px">n. + v.</span><br><br><br>动词的时态<br>动词的语态<br>动词的情态<br><br><div><br>谓语动词的变化–&gt;<span style="background-color:yellow">语态</span></div><br><span style="background-color:yellow">被动语态<br></span><br><blockquote> 狗吃了那个蛋糕。<br>The dog ate the cake.<br><br>?吃了那个蛋糕。<br>—-&gt;蛋糕<span style="background-color:yellow">被</span>吃了。<br><br><ins>狗</ins>吃了那个<ins>蛋糕</ins>。<br>主语&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;宾语<br><span style="background-color:yellow">蛋糕被狗吃了。</span><br><br>被动适用范围 1：及物动词。 2：不及物动词+介词。<br><span style="background-color:yellow">被动语态 <ins>be</ins> + <ins>done</ins></span><br></blockquote><br><br>备注：<br><blockquote>be表示被动的<span style="background-color:yellow">时间</span> (把be变成对应的各种形态), 还表达主语单复数。<br>done 表示被动的<span style="background-color:yellow">动作</span></blockquote><br><br>教师每天都打扫。<br>Classrooms <ins style="background-color:yellow">are cleaned</ins>(clean) every day.<br><br>一座新的大楼去年建造的。<br>A new building <ins style="background-color:yellow">was built</ins>(build) last year.<br><br><b>与时态相结合</b><br><br>被动语态&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;be + done<br>他<ins>每天</ins>被打。&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;He <ins>is beaten</ins> every day.<br>他<ins>昨天</ins>被打了。&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;He <ins>was</ins> beaten yesterday.<br>他<ins>明天将要</ins>被打。&emsp;&emsp;&emsp;&emsp;&emsp;He <ins>will be</ins> beaten tomorrow.<br>他<ins>现在正在</ins>被打。&emsp;&emsp;&emsp;&emsp;&emsp;He <ins>is being</ins> beaten.(现在进行时的被动am/is/are + being done)<br>他<ins>现在已经</ins>被打了。&emsp;&emsp;&emsp;&emsp;He <ins>has been</ins> beaten.(现在完成时的被动have/has + been done)<br><br><br><br>Our morning paper <ins style="background-color:yellow">is read</ins>(read) by over 200,000 people every day.<br>Last night my favorite TV program <ins style="background-color:yellow">was interrupted</ins>(interrupt) by a special news bulletin.<br>His bike <ins style="background-color:yellow">will be repaired</ins>(repair) by his grandfather tomorrow.<br>The new machine <ins style="background-color:yellow">has been used</ins>(use) in our factory for two week.<br><br><br><b>与情态动词想结合</b><br>被动语态&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;be + done<br>Planes <ins>are heard</ins>.<br>Planes <ins><span style="background-color:yellow">can be </span>heard</ins>.<br>Planes <ins><span style="background-color:yellow">could be </span>heard</ins>.<br>Planes <ins><span style="background-color:yellow">may be </span>heard</ins>.<br>Planes <ins><span style="background-color:yellow">must be </span>heard</ins>.<br><br>这封信必须马上寄出。<br>The letter <ins style="background-color:yellow">must be sent</ins> immediately.<br>天气不能被人们所控制。<br>Weather <ins style="background-color:yellow">cannot be controlled</ins> by people.<br></font>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单句的核心变化（时态）</title>
      <link href="/jian-dan-ju-de-he-xin-bian-hua-shi-tai.html"/>
      <url>/jian-dan-ju-de-he-xin-bian-hua-shi-tai.html</url>
      
        <content type="html"><![CDATA[<h1 id="二、简单句的核心变化"><a href="#二、简单句的核心变化" class="headerlink" title="二、简单句的核心变化"></a>二、简单句的核心变化</h1><h2 id="一-谓语动词的变化"><a href="#一-谓语动词的变化" class="headerlink" title="(一)谓语动词的变化"></a>(一)谓语动词的变化</h2><h1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n. + v.</h1><ul><li>动词的<span style="font-size:30"><b>时态</b></span></li><li>动词的<span style="font-size:30"><b>语态</b></span></li><li>动词的<span style="font-size:30"><b>情态</b></span></li><li>动词的<span style="font-size:30"><b>否定</b></span></li></ul><div style="font-size:20;color:red"><b>1. 时态：</b></div><table><thead><tr><th style="text-align:center">时态</th><th style="text-align:center">过去</th><th style="text-align:center">现在</th><th style="text-align:center">将来</th><th style="text-align:center">过去将来</th></tr></thead><tbody><tr><td style="text-align:center">一般</td><td style="text-align:center">did/was/were</td><td style="text-align:center">do/does</td><td style="text-align:center">will/am/is/are going to + V.原型</td><td style="text-align:center">would/were/was going to + V.原型</td></tr><tr><td style="text-align:center">进行</td><td style="text-align:center">be + doingbe + doing</td><td style="text-align:center">be + doing</td><td style="text-align:center">be + doing</td></tr><tr><td style="text-align:center">完成</td><td style="text-align:center">had + done</td><td style="text-align:center">have/has+done</td><td style="text-align:center">&emsp;</td><td style="text-align:center">&emsp;</td></tr><tr><td style="text-align:center">完成进行</td><td style="text-align:center">&emsp;</td><td style="text-align:center">have/has been + doing</td><td style="text-align:center">&emsp;</td><td style="text-align:center">&emsp;</td></tr></tbody></table><h3 id="一般过去时-Simple-Past"><a href="#一般过去时-Simple-Past" class="headerlink" title="一般过去时 Simple Past"></a>一般过去时 Simple Past</h3><p><span style="font-size:18"><b>形式：</b></span>V.过去式(did/was/were)<br><br><span style="font-size:18"><b>用法：</b></span>过去的事、过去的动作(无关现在)<br><br><span style="font-size:18"><b>例子：</b></span><br></p><ul><li>He was a student.<br></li><li>He liked music.<br></li><li>She had a boyfriend.<br></li></ul><p><strong>变否定或者疑问</strong></p><table><thead><tr><th style="text-align:center">He was happy.</th><th style="text-align:center">He liked English.</th></tr></thead><tbody><tr><td style="text-align:center">He was not happy.</td><td style="text-align:center">He did not like English.</td></tr><tr><td style="text-align:center">Was he happy?</td><td style="text-align:center">Did he like English?</td></tr><tr><td style="text-align:center">What was he?</td><td style="text-align:center">What did he like?</td></tr></tbody></table><p>补充：</p><table><thead><tr><th style="text-align:center">&emsp;</th><th style="text-align:center">V.过去式</th><th style="text-align:center">V.过去分词</th></tr></thead><tbody><tr><td style="text-align:center">look</td><td style="text-align:center">looked</td><td style="text-align:center">looked</td></tr><tr><td style="text-align:center">buy</td><td style="text-align:center">bought</td><td style="text-align:center">bought</td></tr><tr><td style="text-align:center">see</td><td style="text-align:center">saw</td><td style="text-align:center">seen</td></tr><tr><td style="text-align:center">eat</td><td style="text-align:center">ate</td><td style="text-align:center">eaten</td></tr></tbody></table><p> V.过去式&nbsp;&nbsp;&emsp;丨V.过去分词<br><br> 一般过去时&nbsp;&nbsp;丨完成时<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;丨被动语态<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;丨不做谓语<br><br></p><h3 id="一般现在时-Simple-Present"><a href="#一般现在时-Simple-Present" class="headerlink" title="一般现在时 Simple Present"></a>一般现在时 Simple Present</h3><p><span style="font-size:18"><b>形式：</b></span>V.原型/V.第三人称单数(do/does)<br><br>You <ins>like</ins> English.<br><br>He <ins>likes</ins> English.<br></p><p><span style="font-size:18"><b>用法：</b></span><br></p><p></p><h3>1.现在经常性习惯性的动作</h3><br>We have the English class every day.<br><br>He often gets up late.<p></p><p></p><h3>2.现在的状态</h3><br>I am a teacher.<br><br>We are in China.<p></p><p></p><h3>3.永恒</h3><br>The earth is round.<br><br>The earth moves around the sun.<br><br>Knowledge is power.<br><br>Practice makes perfect.<br><p></p><p><strong>变否定或者疑问</strong></p><table><thead><tr><th style="text-align:center">He is happy.</th><th style="text-align:center">You like English.</th><th style="text-align:center">He likes English.</th></tr></thead><tbody><tr><td style="text-align:center">He is not happy.</td><td style="text-align:center">You do not like English.</td><td style="text-align:center">He does not like English.</td></tr><tr><td style="text-align:center">Is he happy?</td><td style="text-align:center">Do you like English?</td><td style="text-align:center">Does he like English?</td></tr><tr><td style="text-align:center">How is he?</td><td style="text-align:center">What do you like?</td><td style="text-align:center">What does he like?</td></tr></tbody></table><p>补充：<br><br>与频率连用(every,once a week,twice a month,three times a …)<br><br>always<br><br>usually,often,frequently<br><br>sometimes,occasionally<br><br>seldom,hardly<br><br>never<br><br></p><h3 id="一般将来时-Simple-Future"><a href="#一般将来时-Simple-Future" class="headerlink" title="一般将来时 Simple Future"></a>一般将来时 Simple Future</h3><p><span style="font-size:18"><b>形式：</b></span>Will/am/is/are going to + V.原型<br><br><span style="font-size:18"><b>用法：</b>将来的事(现在的将来)</span><br><br> I will make a new plan tomorrow.<br><br> We are going to study abroad next year.<br></p><p><strong>变否定或者疑问</strong></p><table><thead><tr><th style="text-align:center">He will leave.</th><th style="text-align:center">He is going to leave.</th></tr></thead><tbody><tr><td style="text-align:center">He will not leave.</td><td style="text-align:center">He is not going to leave.</td></tr><tr><td style="text-align:center">Will he leave?</td><td style="text-align:center">Is he going to leave?</td></tr><tr><td style="text-align:center">What will he?</td><td style="text-align:center">What is he going to do?</td></tr></tbody></table><h3 id="过去将来时-Past-Future"><a href="#过去将来时-Past-Future" class="headerlink" title="过去将来时 Past Future"></a>过去将来时 Past Future</h3><p><span style="font-size:18"><b>形式：</b></span>Would/was/were going to + V.原型<br><br><span style="font-size:18"><b>用法：</b>将来的事(过去的将来)</span><br><br>I said that I would become a cook in the future.<br><br>Tony finished his work,and then he would leave for London.<br><br><br></p><h4 id="三种进行时-Progressive-Tense"><a href="#三种进行时-Progressive-Tense" class="headerlink" title="三种进行时 Progressive Tense"></a>三种进行时 Progressive Tense</h4><p></p><p>At 10 o’clock yesterday some students <ins>were taking</ins> an exam in their classrooms.</p><p></p><p></p><p>We <ins>are taking</ins> about the water pollution.</p><p></p><p></p><p>A great many candidates <ins>will be meeting</ins> here at this time tomorrow.</p><br><br><br><p></p><h3 id="现在完成时-Present-Perfect-Tense"><a href="#现在完成时-Present-Perfect-Tense" class="headerlink" title="现在完成时 Present Perfect Tense"></a>现在完成时 Present Perfect Tense</h3><p><span style="font-size:18"><b>形式：</b></span>have/has + done<br><br><span style="font-size:18"><b>用法：</b></span><br><br>现在全部完成 He has left.<br><br>现在部分完成 We have studied English for ten years.<br><br><br></p><h3 id="过去完成时-Past-Perfect-Tense"><a href="#过去完成时-Past-Perfect-Tense" class="headerlink" title="过去完成时 Past Perfect Tense"></a>过去完成时 Past Perfect Tense</h3><p><span style="font-size:18"><b>形式：</b></span>had + done<br><br><span style="font-size:18"><b>用法：</b></span>过去的之前<br><br>When he got there,she had left.She was not there.<br><br><br></p><h3 id="完成进行时-“完成”-“进行”-时间的之前，强调进行的过程"><a href="#完成进行时-“完成”-“进行”-时间的之前，强调进行的过程" class="headerlink" title="完成进行时 = “完成” + “进行” =**时间的之前，强调进行的过程"></a>完成进行时 = “完成” + “进行” =**时间的之前，强调进行的过程</h3><table><thead><tr><th style="text-align:center">角度相同</th><th style="text-align:center">都表示</th><th style="text-align:center">“现在的之前”</th></tr></thead><tbody><tr><td style="text-align:center">两种时态</td><td style="text-align:center">现在完成时<br>have/has + done</td><td style="text-align:center">现在完成进行时<br>have/has been + doing</td></tr><tr><td style="text-align:center">强调不同</td><td style="text-align:center">强调结果(做完与否都可以)</td><td style="text-align:center">强调过程</td></tr><tr><td style="text-align:center">例句</td><td style="text-align:center">We have not won the match.</td><td style="text-align:center">We have been working hard<br>for several months.</td></tr></tbody></table><p><b>They <strong><strong> on the program for almost one week before I joined them, and now we are still working on it as no good results </strong></strong> so far</b>.<br></p><p><input id="choose" name="choose" type="radio" value="A">A.have been working;have come out<br></p><p><input id="choose" name="choose" type="radio" value="B">B.had worked;came out<br></p><p><input id="choose" name="choose" type="radio" value="C">C.had been working;have come out<br></p><p><input id="choose" name="choose" type="radio" value="D">D.have worked;are coming out<br></p><details><br><summary>显示答案</summary><br>答案：C<br></details>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github提交表情指南</title>
      <link href="/github-biao-qing-ti-jiao-zhi-nan.html"/>
      <url>/github-biao-qing-ti-jiao-zhi-nan.html</url>
      
        <content type="html"><![CDATA[<h2 id="Github提交表情指南"><a href="#Github提交表情指南" class="headerlink" title="Github提交表情指南"></a>Github提交表情指南</h2><table><thead><tr><th style="text-align:center">emoji</th><th style="text-align:center">emoji 代码</th><th style="text-align:center">commit 说明</th></tr></thead><tbody><tr><td style="text-align:center">:art:(调色板)</td><td style="text-align:center"><code>:art:</code></td><td style="text-align:center">改进代码结构/代码格式</td></tr><tr><td style="text-align:center">:zap:(闪电):racehorse:(赛马)</td><td style="text-align:center"><code>:zap:</code> <code>:racehorse:</code></td><td style="text-align:center">提升性能</td></tr><tr><td style="text-align:center">:fire:(火焰)</td><td style="text-align:center"><code>:fire:</code></td><td style="text-align:center">移除代码或文件</td></tr><tr><td style="text-align:center">:bug:(bug)</td><td style="text-align:center"><code>:bug:</code></td><td style="text-align:center">修复bug</td></tr><tr><td style="text-align:center">:ambulance:(急救车)</td><td style="text-align:center"><code>:ambulance:</code></td><td style="text-align:center">重要补丁</td></tr><tr><td style="text-align:center">:sparkles:(火花)</td><td style="text-align:center"><code>:sparkles:</code></td><td style="text-align:center">引入新功能</td></tr><tr><td style="text-align:center">:memo:(备忘录)</td><td style="text-align:center"><code>:memo:</code></td><td style="text-align:center">撰写文档</td></tr><tr><td style="text-align:center">:rocket:(火箭)</td><td style="text-align:center"><code>:rocket:</code></td><td style="text-align:center">部署功能</td></tr><tr><td style="text-align:center">:lipstick:(口红)</td><td style="text-align:center"><code>:lipstick:</code></td><td style="text-align:center">更新 UI 和样式文件</td></tr><tr><td style="text-align:center">:tada:(庆祝)</td><td style="text-align:center"><code>:tada:</code></td><td style="text-align:center">初次提交</td></tr><tr><td style="text-align:center">:white_check_mark:(白色复选框)</td><td style="text-align:center"><code>:white_check_mark:</code></td><td style="text-align:center">增加测试</td></tr><tr><td style="text-align:center">:lock:(锁)</td><td style="text-align:center"><code>:lock:</code></td><td style="text-align:center">修复安全问题</td></tr><tr><td style="text-align:center">:apple:(苹果</td><td style="text-align:center"><code>:apple:</code></td><td style="text-align:center">修复 macOS 下的问题</td></tr><tr><td style="text-align:center">:penguin:(企鹅)</td><td style="text-align:center"><code>:penguin:</code></td><td style="text-align:center">修复 Linux 下的问题</td></tr><tr><td style="text-align:center">:checkered_flag:(旗帜)</td><td style="text-align:center"><code>:checked_flag:</code></td><td style="text-align:center">修复 Windows 下的问题</td></tr><tr><td style="text-align:center">:bookmark:(书签)</td><td style="text-align:center"><code>:bookmark:</code></td><td style="text-align:center">发行/版本标签</td></tr><tr><td style="text-align:center">:rotating_light:(警车灯)</td><td style="text-align:center"><code>:rotating_light:</code></td><td style="text-align:center">移除 linter 警告</td></tr><tr><td style="text-align:center">:construction:(施工)</td><td style="text-align:center"><code>:construction:</code></td><td style="text-align:center">工作进行中</td></tr><tr><td style="text-align:center">:green_heart:(绿心)</td><td style="text-align:center"><code>:green_heart:</code></td><td style="text-align:center">修复 CI 构建问题</td></tr><tr><td style="text-align:center">:arrow_down:(下降箭头)</td><td style="text-align:center"><code>:arrow_down:</code></td><td style="text-align:center">降级依赖</td></tr><tr><td style="text-align:center">:arrow_up:(上升箭头)</td><td style="text-align:center"><code>:arrow_up:</code></td><td style="text-align:center">升级依赖</td></tr><tr><td style="text-align:center">:construction_worker:(工人)</td><td style="text-align:center"><code>:construction_worker:</code></td><td style="text-align:center">添加 CI 构建系统</td></tr><tr><td style="text-align:center">:chart_with_upwards_trend:(上升趋势图)</td><td style="text-align:center"><code>:chart_with_upwards_trend:</code></td><td style="text-align:center">添加分析或跟踪代码</td></tr><tr><td style="text-align:center">:hammer:(锤子)</td><td style="text-align:center"><code>:hammer:</code></td><td style="text-align:center">重大重构</td></tr><tr><td style="text-align:center">:heavy_minus_sign: (减号)</td><td style="text-align:center"><code>:heavy_minus_sign:</code></td><td style="text-align:center">减少一个依赖</td></tr><tr><td style="text-align:center">:whale:(鲸鱼)</td><td style="text-align:center"><code>:whale:</code></td><td style="text-align:center">Docker 相关工作</td></tr><tr><td style="text-align:center">:heavy_plus_sign: (加号)</td><td style="text-align:center"><code>:heavy_plug_sign:</code></td><td style="text-align:center">增加一个依赖</td></tr><tr><td style="text-align:center">:wrench:(扳手)</td><td style="text-align:center"><code>:wrench:</code></td><td style="text-align:center">修改配置文件</td></tr><tr><td style="text-align:center">:globe_with_meridians: (地球)</td><td style="text-align:center"><code>:globe_with_meridians:</code></td><td style="text-align:center">国际化与本地化</td></tr><tr><td style="text-align:center">:pencil2:(铅笔)</td><td style="text-align:center"><code>:pencil2:</code></td><td style="text-align:center">修复 typo</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单句</title>
      <link href="/jian-dan-ju.html"/>
      <url>/jian-dan-ju.html</url>
      
        <content type="html"><![CDATA[<h1 id="第一章：简单句的核心"><a href="#第一章：简单句的核心" class="headerlink" title="第一章：简单句的核心"></a>第一章：简单句的核心</h1><h2 id="一、简单句的核心构成"><a href="#一、简单句的核心构成" class="headerlink" title="一、简单句的核心构成"></a>一、简单句的核心构成</h2><h3 id="简单句"><a href="#简单句" class="headerlink" title="简单句"></a>简单句</h3><p>一个句子（一件事）<br>世界是物质的，物质是运动的<br></p><p><pre><strong> n.  +  v.<br>主语 + 谓语</strong></pre></p><p></p><h5>n. +  谓语 v.</h5><p></p><div>一主一谓，谓语动词的不同决定简单句的不同构成。</div><p><img src="http://wx4.sinaimg.cn/large/006MOU0zgy1g0pkh08jfrj30iv0c2ads.jpg" alt="English"></p><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p>I swim.<br>I like English</p><p><strong>区分vt./vi.</strong><br>1)意思<br>2)介词(prep.)</p><ul><li>I <span style="background:yellow">like</span> English.</li><li>The bride <span style="background:yellow">kissed</span> the groom.</li><li>Birds <span style="background:yellow">fly</span> in the sky.</li><li>We <span style="background:yellow">walked</span> on the street yesterday.</li><li>You look <span style="background:yellow">at me</span>.</li></ul><blockquote><p>介宾结构</p></blockquote><ul><li>They offered <span style="background:yellow">me</span> <ins>a vacant post</ins>.</li><li>they offered <ins>a vacant post</ins> to <span style="background:yellow">me</span>.</li><li>I bought <span style="background:yellow">you</span> <ins>a present</ins>.</li><li>I bought <ins>a present</ins> for <span style="background:yellow">you</span>.<br></li></ul><p>I find HongKong   ???<br>I find HongKong <ins>very beautiful</ins>.<br>I find HongKong <ins>a place for shopping</ins>.</p><p>我非常高兴。<br>I very happy. ???<br>I <span style="background:yellow">am</span> very happy.<br></p><h4 id="主系表"><a href="#主系表" class="headerlink" title="主系表"></a>主<span style="background:yellow">系</span>表</h4><h5 id="系动词"><a href="#系动词" class="headerlink" title="系动词"></a>系动词</h5><ol><li>be动词  （单独）</li><li>“变得” get become turn go grow</li><li>感官动词 look sound smell taste feel<blockquote><p>“看 / 听 /  闻 / 尝 / 感觉起来…..”</p></blockquote></li><li>keep  remain/seem appear<hr></li></ol><h6 id="For-example"><a href="#For-example" class="headerlink" title="For example:"></a>For example:</h6><ol><li>I ask you a question.  主谓双宾</li><li>You answer. 主谓</li><li>I love you. 主谓宾</li><li>You make my life complete. 主谓宾补</li><li>I am happy. 主系表</li></ol><p>主语 + 谓语 + <ins style="color:red"><span style="background:yellow">?</span></ins></p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English-Syntax </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
